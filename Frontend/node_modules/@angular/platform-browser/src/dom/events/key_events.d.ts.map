{"version":3,"file":"key_events.d.ts","sources":["key_events.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { NgZone } from '@angular/core';\r\nimport { EventManagerPlugin } from './event_manager';\r\n/**\r\n * @publicApi\r\n * A browser plug-in that provides support for handling of key events in Angular.\r\n */\r\nexport declare class KeyEventsPlugin extends EventManagerPlugin {\r\n    /**\r\n     * Initializes an instance of the browser plug-in.\r\n     * @param doc The document in which key events will be detected.\r\n     */\r\n    constructor(doc: any);\r\n    /**\r\n      * Reports whether a named key event is supported.\r\n      * @param eventName The event name to query.\r\n      * @return True if the named key event is supported.\r\n     */\r\n    supports(eventName: string): boolean;\r\n    /**\r\n     * Registers a handler for a specific element and key event.\r\n     * @param element The HTML element to receive event notifications.\r\n     * @param eventName The name of the key event to listen for.\r\n     * @param handler A function to call when the notification occurs. Receives the\r\n     * event object as an argument.\r\n     * @returns The key event that was registered.\r\n    */\r\n    addEventListener(element: HTMLElement, eventName: string, handler: Function): Function;\r\n    static parseEventName(eventName: string): {\r\n        [key: string]: string;\r\n    } | null;\r\n    static getEventFullKey(event: KeyboardEvent): string;\r\n    /**\r\n     * Configures a handler callback for a key event.\r\n     * @param fullKey The event name that combines all simultaneous keystrokes.\r\n     * @param handler The function that responds to the key event.\r\n     * @param zone The zone in which the event occurred.\r\n     * @returns A callback function.\r\n     */\r\n    static eventCallback(fullKey: any, handler: Function, zone: NgZone): Function;\r\n}\r\n"]}