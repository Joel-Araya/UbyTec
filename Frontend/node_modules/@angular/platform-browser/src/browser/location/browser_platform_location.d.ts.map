{"version":3,"file":"browser_platform_location.d.ts","sources":["browser_platform_location.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\r\n * @license\r\n * Copyright Google Inc. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { LocationChangeListener, PlatformLocation } from '@angular/common';\r\n/**\r\n * `PlatformLocation` encapsulates all of the direct calls to platform APIs.\r\n * This class should not be used directly by an application developer. Instead, use\r\n * {@link Location}.\r\n */\r\nexport declare class BrowserPlatformLocation extends PlatformLocation {\r\n    private _doc;\r\n    readonly location: Location;\r\n    private _history;\r\n    constructor(_doc: any);\r\n    getBaseHrefFromDOM(): string;\r\n    onPopState(fn: LocationChangeListener): void;\r\n    onHashChange(fn: LocationChangeListener): void;\r\n    pathname: string;\r\n    readonly search: string;\r\n    readonly hash: string;\r\n    pushState(state: any, title: string, url: string): void;\r\n    replaceState(state: any, title: string, url: string): void;\r\n    forward(): void;\r\n    back(): void;\r\n}\r\n"]}