{"version":3,"file":"core.js","sources":["../src/util/property.ts","../src/render3/fields.ts","../src/di/defs.ts","../src/di/injection_token.ts","../src/util/decorators.ts","../src/metadata/di.ts","../src/change_detection/constants.ts","../src/util.ts","../src/di/forward_ref.ts","../src/metadata/resource_loading.ts","../src/metadata/view.ts","../src/render3/ng_dev_mode.ts","../src/render3/empty.ts","../src/render3/definition.ts","../src/render3/assert.ts","../src/render3/interfaces/view.ts","../src/render3/interfaces/container.ts","../src/render3/interfaces/context.ts","../src/render3/interfaces/injector.ts","../src/render3/util.ts","../src/render3/jit/compiler_facade.ts","../src/di/metadata.ts","../src/di/injector_compatibility.ts","../src/render3/node_assert.ts","../src/render3/hooks.ts","../src/render3/state.ts","../src/render3/di.ts","../src/render3/context_discovery.ts","../src/render3/discovery_utils.ts","../src/util/ng_reflect.ts","../src/change_detection/change_detection_util.ts","../src/render3/errors.ts","../src/render3/tokens.ts","../src/render3/bindings.ts","../src/render3/interfaces/projection.ts","../src/render3/interfaces/renderer.ts","../src/render3/node_manipulation.ts","../src/render3/node_selector_matcher.ts","../src/render3/styling/player_factory.ts","../src/render3/styling/core_player_handler.ts","../src/render3/styling/util.ts","../src/render3/styling/class_and_style_bindings.ts","../src/render3/instructions.ts","../src/render3/players.ts","../src/render3/global_utils.ts","../src/render3/component.ts","../src/render3/features/inherit_definition_feature.ts","../src/render3/features/ng_onchanges_feature.ts","../src/util/noop.ts","../src/di/injector.ts","../src/di/scope.ts","../src/di/r3_injector.ts","../src/render3/di_setup.ts","../src/render3/features/providers_feature.ts","../src/linker/component_factory.ts","../src/linker/component_factory_resolver.ts","../src/linker/ng_module_factory.ts","../src/render3/view_ref.ts","../src/render3/view_engine_compatibility.ts","../src/linker/element_ref.ts","../src/render/api.ts","../src/sanitization/security.ts","../src/version.ts","../src/render3/component_ref.ts","../src/is_dev_mode.ts","../src/sanitization/inert_body.ts","../src/sanitization/url_sanitizer.ts","../src/sanitization/html_sanitizer.ts","../src/render3/interfaces/i18n.ts","../src/render3/i18n.ts","../src/render3/ng_module_ref.ts","../src/render3/metadata.ts","../src/render3/pure_function.ts","../src/render3/pipe.ts","../src/event_emitter.ts","../src/linker/template_ref.ts","../src/render3/query.ts","../src/render3/view_engine_compatibility_prebound.ts","../src/sanitization/bypass.ts","../src/sanitization/style_sanitizer.ts","../src/sanitization/sanitization.ts","../src/render3/jit/environment.ts","../src/linker/ng_module_factory_loader.ts","../src/type.ts","../src/reflection/reflection_capabilities.ts","../src/render3/jit/util.ts","../src/render3/jit/module.ts","../src/render3/jit/directive.ts","../src/render3/jit/pipe.ts","../src/metadata/directives.ts","../src/di/util.ts","../src/metadata/ng_module.ts","../src/render3/jit/injectable.ts","../src/di/injectable.ts","../src/errors.ts","../src/error_handler.ts","../src/di/reflective_errors.ts","../src/di/reflective_key.ts","../src/reflection/reflector.ts","../src/reflection/reflection.ts","../src/di/reflective_provider.ts","../src/di/reflective_injector.ts","../src/util/lang.ts","../src/application_init.ts","../src/application_tokens.ts","../src/console.ts","../src/linker/compiler.ts","../src/profile/wtf_impl.ts","../src/profile/profile.ts","../src/zone/ng_zone.ts","../src/testability/testability.ts","../src/application_ref.ts","../src/linker/query_list.ts","../src/linker/system_js_ng_module_factory_loader.ts","../src/linker/view_container_ref.ts","../src/change_detection/change_detector_ref.ts","../src/linker/view_ref.ts","../src/debug/debug_node.ts","../src/change_detection/differs/default_iterable_differ.ts","../src/change_detection/differs/default_keyvalue_differ.ts","../src/change_detection/differs/iterable_differs.ts","../src/change_detection/differs/keyvalue_differs.ts","../src/change_detection/change_detection.ts","../src/platform_core_providers.ts","../src/i18n/tokens.ts","../src/application_module.ts","../src/ivy_switch.ts","../src/view/types.ts","../src/view/errors.ts","../src/view/util.ts","../src/view/element.ts","../src/view/ng_module.ts","../src/view/view_attach.ts","../src/view/refs.ts","../src/view/provider.ts","../src/view/query.ts","../src/view/ng_content.ts","../src/view/pure_expression.ts","../src/view/text.ts","../src/view/view.ts","../src/view/services.ts","../src/view/entrypoint.ts","../core.ts"],"names":["stringify","global","getRootContext","getRootView","initializeStaticStylingContext","updateElementStyleProp","updateElementClassProp","projectionNodeStack","element","isComponentDef","INJECTOR","NULL_INJECTOR","CIRCULAR","EMPTY_ARRAY","isComponent","resolveProvider","container","viewEngine_NgModuleRef","render3InjectElementRef","render3InjectRenderer2","ComponentFactoryResolver","viewEngine_ComponentFactoryResolver","ComponentFactory","viewEngine_ComponentFactory","projection","ComponentRef","viewEngine_ElementRef","viewEngine_ComponentRef","merge","NgModuleRef","NgModuleFactory","viewEngine_NgModuleFactory","getPipeDef","render3InjectTemplateRef","insertView","removeView","ViewEngine_ElementRef","ViewEngine_TemplateRef","r3.defineBase","r3.defineComponent","r3.defineDirective","r3.defineNgModule","r3.definePipe","r3.directiveInject","r3.getFactoryOf","r3.getInheritedFactory","r3.injectAttribute","r3.templateRefExtractor","r3.NgOnChangesFeature","r3.ProvidersFeature","r3.InheritDefinitionFeature","r3.elementAttribute","r3.bind","r3.container","r3.nextContext","r3.containerRefreshStart","r3.containerRefreshEnd","r3.loadQueryList","r3.namespaceHTML","r3.namespaceMathML","r3.namespaceSVG","r3.enableBindings","r3.disableBindings","r3.allocHostVars","r3.elementStart","r3.elementEnd","r3.element","r3.elementContainerStart","r3.elementContainerEnd","r3.pureFunction0","r3.pureFunction1","r3.pureFunction2","r3.pureFunction3","r3.pureFunction4","r3.pureFunction5","r3.pureFunction6","r3.pureFunction7","r3.pureFunction8","r3.pureFunctionV","r3.getCurrentView","r3.restoreView","r3.interpolation1","r3.interpolation2","r3.interpolation3","r3.interpolation4","r3.interpolation5","r3.interpolation6","r3.interpolation7","r3.interpolation8","r3.interpolationV","r3.elementClassProp","r3.listener","r3.load","r3.projection","r3.elementProperty","r3.componentHostSyntheticProperty","r3.pipeBind1","r3.pipeBind2","r3.pipeBind3","r3.pipeBind4","r3.pipeBindV","r3.projectionDef","r3.pipe","r3.query","r3.queryRefresh","r3.registerContentQuery","r3.reference","r3.elementStyling","r3.elementHostAttrs","r3.elementStylingMap","r3.elementStyleProp","r3.elementStylingApply","r3.template","r3.text","r3.textBinding","r3.embeddedViewStart","r3.embeddedViewEnd","r3.i18n","r3.i18nAttributes","r3.i18nExp","r3.i18nStart","r3.i18nEnd","r3.i18nApply","r3.i18nPostprocess","sanitization.sanitizeHtml","sanitization.sanitizeStyle","sanitization.defaultStyleSanitizer","sanitization.sanitizeResourceUrl","sanitization.sanitizeScript","sanitization.sanitizeUrl","R3NgModuleFactory","flatten","render3CompileComponent","render3CompileDirective","render3CompilePipe","USE_VALUE","render3CompileNgModule","render3CompileInjectable","ResolvedReflectiveFactory","NgModuleFactoryR3","noop","QueryList","render3InjectViewContainerRef","render3InjectChangeDetectorRef","ViewRef","unwrapValue","_renderCompCount","renderNode","tokenKey","createInjector","RendererV1","InjectorRefTokenKey","INJECTORRefTokenKey","_createProviderInstance","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","createQuery","anchorDef","viewDef"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport function getClosureSafeProperty<T>(objWithPropertyToExtract: T): string {\n  for (let key in objWithPropertyToExtract) {\n    if (objWithPropertyToExtract[key] === getClosureSafeProperty as any) {\n      return key;\n    }\n  }\n  throw Error('Could not find renamed property on target object.');\n}\n\n/**\n * Sets properties on a target object from a source object, but only if\n * the property doesn't already exist on the target object.\n * @param target The target to set properties on\n * @param source The source of the property keys and values to set\n */\nexport function fillProperties(target: {[key: string]: string}, source: {[key: string]: string}) {\n  for (const key in source) {\n    if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {getClosureSafeProperty} from '../util/property';\n\nexport const NG_COMPONENT_DEF = getClosureSafeProperty({ngComponentDef: getClosureSafeProperty});\nexport const NG_DIRECTIVE_DEF = getClosureSafeProperty({ngDirectiveDef: getClosureSafeProperty});\nexport const NG_INJECTABLE_DEF = getClosureSafeProperty({ngInjectableDef: getClosureSafeProperty});\nexport const NG_INJECTOR_DEF = getClosureSafeProperty({ngInjectorDef: getClosureSafeProperty});\nexport const NG_PIPE_DEF = getClosureSafeProperty({ngPipeDef: getClosureSafeProperty});\nexport const NG_MODULE_DEF = getClosureSafeProperty({ngModuleDef: getClosureSafeProperty});\nexport const NG_BASE_DEF = getClosureSafeProperty({ngBaseDef: getClosureSafeProperty});\n\n/**\n * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n * the key and the directive's unique ID as the value. This allows us to map directives to their\n * bloom filter bit for DI.\n */\nexport const NG_ELEMENT_ID = getClosureSafeProperty({__NG_ELEMENT_ID__: getClosureSafeProperty});\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NG_INJECTABLE_DEF, NG_INJECTOR_DEF} from '../render3/fields';\nimport {Type} from '../type';\n\nimport {ClassProvider, ClassSansProvider, ConstructorProvider, ConstructorSansProvider, ExistingProvider, ExistingSansProvider, FactoryProvider, FactorySansProvider, StaticClassProvider, StaticClassSansProvider, ValueProvider, ValueSansProvider} from './provider';\n\n/**\n * Information about how a type or `InjectionToken` interfaces with the DI system.\n *\n * At a minimum, this includes a `factory` which defines how to create the given type `T`, possibly\n * requesting injection of other types if necessary.\n *\n * Optionally, a `providedIn` parameter specifies that the given type belongs to a particular\n * `InjectorDef`, `NgModule`, or a special scope (e.g. `'root'`). A value of `null` indicates\n * that the injectable does not belong to any scope.\n *\n * NOTE: This is a private type and should not be exported\n */\nexport interface InjectableDef<T> {\n  /**\n   * Specifies that the given type belongs to a particular injector:\n   * - `InjectorType` such as `NgModule`,\n   * - `'root'` the root injector\n   * - `'any'` all injectors.\n   * - `null`, does not belong to any injector. Must be explicitly listed in the injector\n   *   `providers`.\n   */\n  providedIn: InjectorType<any>|'root'|'any'|null;\n\n  /**\n   * Factory method to execute to create an instance of the injectable.\n   */\n  factory: () => T;\n\n  /**\n   * In a case of no explicit injector, a location where the instance of the injectable is stored.\n   */\n  value: T|undefined;\n}\n\n/**\n * Information about the providers to be included in an `Injector` as well as how the given type\n * which carries the information should be created by the DI system.\n *\n * An `InjectorDef` can import other types which have `InjectorDefs`, forming a deep nested\n * structure of providers with a defined priority (identically to how `NgModule`s also have\n * an import/dependency structure).\n *\n * NOTE: This is a private type and should not be exported\n */\nexport interface InjectorDef<T> {\n  factory: () => T;\n\n  // TODO(alxhub): Narrow down the type here once decorators properly change the return type of the\n  // class they are decorating (to add the ngInjectableDef property for example).\n  providers: (Type<any>|ValueProvider|ExistingProvider|FactoryProvider|ConstructorProvider|\n              StaticClassProvider|ClassProvider|any[])[];\n\n  imports: (InjectorType<any>|InjectorTypeWithProviders<any>)[];\n}\n\n/**\n * A `Type` which has an `InjectableDef` static field.\n *\n * `InjectableDefType`s contain their own Dependency Injection metadata and are usable in an\n * `InjectorDef`-based `StaticInjector.\n *\n * @publicApi\n */\nexport interface InjectableType<T> extends Type<T> {\n  /**\n   * Opaque type whose structure is highly version dependent. Do not rely on any properties.\n   */\n  ngInjectableDef: never;\n}\n\n/**\n * A type which has an `InjectorDef` static field.\n *\n * `InjectorDefTypes` can be used to configure a `StaticInjector`.\n *\n * @publicApi\n */\nexport interface InjectorType<T> extends Type<T> {\n  /**\n   * Opaque type whose structure is highly version dependent. Do not rely on any properties.\n   */\n  ngInjectorDef: never;\n}\n\n/**\n * Describes the `InjectorDef` equivalent of a `ModuleWithProviders`, an `InjectorDefType` with an\n * associated array of providers.\n *\n * Objects of this type can be listed in the imports section of an `InjectorDef`.\n *\n * NOTE: This is a private type and should not be exported\n */\nexport interface InjectorTypeWithProviders<T> {\n  ngModule: InjectorType<T>;\n  providers?: (Type<any>|ValueProvider|ExistingProvider|FactoryProvider|ConstructorProvider|\n               StaticClassProvider|ClassProvider|any[])[];\n}\n\n\n/**\n * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n * in which injectors (if any) it will be available.\n *\n * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n * `InjectableType`.\n *\n * Options:\n * * `providedIn` determines which injectors will include the injectable, by either associating it\n *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n * * `factory` gives the zero argument function which will create an instance of the injectable.\n *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n *\n * @publicApi\n */\nexport function defineInjectable<T>(opts: {\n  providedIn?: Type<any>| 'root' | 'any' | null,\n  factory: () => T,\n}): never {\n  return ({\n    providedIn: opts.providedIn as any || null, factory: opts.factory, value: undefined,\n  } as InjectableDef<T>) as never;\n}\n\n/**\n * Construct an `InjectorDef` which configures an injector.\n *\n * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n * `InjectorType`.\n *\n * Options:\n *\n * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n *   create the type must be provided. If that factory function needs to inject arguments, it can\n *   use the `inject` function.\n * * `providers`: an optional array of providers to add to the injector. Each provider must\n *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n *   type must be an `InjectableType`).\n * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n *   whose providers will also be added to the injector. Locally provided types will override\n *   providers from imports.\n *\n * @publicApi\n */\nexport function defineInjector(options: {factory: () => any, providers?: any[], imports?: any[]}):\n    never {\n  return ({\n    factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n  } as InjectorDef<any>) as never;\n}\n\n/**\n * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n *\n * @param type type which may have `ngInjectableDef`\n */\nexport function getInjectableDef<T>(type: any): InjectableDef<T>|null {\n  return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? (type as any)[NG_INJECTABLE_DEF] : null;\n}\n\n/**\n * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n *\n * @param type type which may have `ngInjectorDef`\n */\nexport function getInjectorDef<T>(type: any): InjectorDef<T>|null {\n  return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? (type as any)[NG_INJECTOR_DEF] : null;\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\n\nimport {defineInjectable} from './defs';\n\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parameterized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n * application's root injector. If the factory function, which takes zero arguments, needs to inject\n * dependencies, it can do so using the `inject` function. See below for an example.\n *\n * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n * mentioned above, `'root'` is the default value for `providedIn`.\n *\n * @usageNotes\n * ### Basic Example\n *\n * ### Plain InjectionToken\n *\n * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * ### Tree-shakable InjectionToken\n *\n * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n *\n *\n * @publicApi\n */\nexport class InjectionToken<T> {\n  /** @internal */\n  readonly ngMetadataName = 'InjectionToken';\n\n  readonly ngInjectableDef: never|undefined;\n\n  constructor(protected _desc: string, options?: {\n    providedIn?: Type<any>| 'root' | null,\n    factory: () => T\n  }) {\n    if (options !== undefined) {\n      this.ngInjectableDef = defineInjectable({\n        providedIn: options.providedIn || 'root',\n        factory: options.factory,\n      });\n    } else {\n      this.ngInjectableDef = undefined;\n    }\n  }\n\n  toString(): string { return `InjectionToken ${this._desc}`; }\n}\n\nexport interface InjectableDefToken<T> extends InjectionToken<T> { ngInjectableDef: never; }\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\n\n/**\n * An interface implemented by all Angular type decorators, which allows them to be used as ES7\n * decorators as well as\n * Angular DSL syntax.\n *\n * ES7 syntax:\n *\n * ```\n * @ng.Component({...})\n * class MyClass {...}\n * ```\n *\n * @publicApi\n */\nexport interface TypeDecorator {\n  /**\n   * Invoke as ES7 decorator.\n   */\n  <T extends Type<any>>(type: T): T;\n\n  // Make TypeDecorator assignable to built-in ParameterDecorator type.\n  // ParameterDecorator is declared in lib.d.ts as a `declare type`\n  // so we cannot declare this interface as a subtype.\n  // see https://github.com/angular/angular/issues/3379#issuecomment-126169417\n  (target: Object, propertyKey?: string|symbol, parameterIndex?: number): void;\n}\n\nexport const ANNOTATIONS = '__annotations__';\nexport const PARAMETERS = '__parameters__';\nexport const PROP_METADATA = '__prop__metadata__';\n\n/**\n * @suppress {globalThis}\n */\nexport function makeDecorator<T>(\n    name: string, props?: (...args: any[]) => any, parentClass?: any,\n    additionalProcessing?: (type: Type<T>) => void,\n    typeFn?: (type: Type<T>, ...args: any[]) => void):\n    {new (...args: any[]): any; (...args: any[]): any; (...args: any[]): (cls: any) => any;} {\n  const metaCtor = makeMetadataCtor(props);\n\n  function DecoratorFactory(...args: any[]): (cls: Type<T>) => any {\n    if (this instanceof DecoratorFactory) {\n      metaCtor.call(this, ...args);\n      return this;\n    }\n\n    const annotationInstance = new (DecoratorFactory as any)(...args);\n    return function TypeDecorator(cls: Type<T>) {\n      if (typeFn) typeFn(cls, ...args);\n      // Use of Object.defineProperty is important since it creates non-enumerable property which\n      // prevents the property is copied during subclassing.\n      const annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n          (cls as any)[ANNOTATIONS] :\n          Object.defineProperty(cls, ANNOTATIONS, {value: []})[ANNOTATIONS];\n      annotations.push(annotationInstance);\n\n\n      if (additionalProcessing) additionalProcessing(cls);\n\n      return cls;\n    };\n  }\n\n  if (parentClass) {\n    DecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n\n  DecoratorFactory.prototype.ngMetadataName = name;\n  (DecoratorFactory as any).annotationCls = DecoratorFactory;\n  return DecoratorFactory as any;\n}\n\nfunction makeMetadataCtor(props?: (...args: any[]) => any): any {\n  return function ctor(...args: any[]) {\n    if (props) {\n      const values = props(...args);\n      for (const propName in values) {\n        this[propName] = values[propName];\n      }\n    }\n  };\n}\n\nexport function makeParamDecorator(\n    name: string, props?: (...args: any[]) => any, parentClass?: any): any {\n  const metaCtor = makeMetadataCtor(props);\n  function ParamDecoratorFactory(...args: any[]): any {\n    if (this instanceof ParamDecoratorFactory) {\n      metaCtor.apply(this, args);\n      return this;\n    }\n    const annotationInstance = new (<any>ParamDecoratorFactory)(...args);\n\n    (<any>ParamDecorator).annotation = annotationInstance;\n    return ParamDecorator;\n\n    function ParamDecorator(cls: any, unusedKey: any, index: number): any {\n      // Use of Object.defineProperty is important since it creates non-enumerable property which\n      // prevents the property is copied during subclassing.\n      const parameters = cls.hasOwnProperty(PARAMETERS) ?\n          (cls as any)[PARAMETERS] :\n          Object.defineProperty(cls, PARAMETERS, {value: []})[PARAMETERS];\n\n      // there might be gaps if some in between parameters do not have annotations.\n      // we pad with nulls.\n      while (parameters.length <= index) {\n        parameters.push(null);\n      }\n\n      (parameters[index] = parameters[index] || []).push(annotationInstance);\n      return cls;\n    }\n  }\n  if (parentClass) {\n    ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n  ParamDecoratorFactory.prototype.ngMetadataName = name;\n  (<any>ParamDecoratorFactory).annotationCls = ParamDecoratorFactory;\n  return ParamDecoratorFactory;\n}\n\nexport function makePropDecorator(\n    name: string, props?: (...args: any[]) => any, parentClass?: any,\n    additionalProcessing?: (target: any, name: string, ...args: any[]) => void): any {\n  const metaCtor = makeMetadataCtor(props);\n\n  function PropDecoratorFactory(...args: any[]): any {\n    if (this instanceof PropDecoratorFactory) {\n      metaCtor.apply(this, args);\n      return this;\n    }\n\n    const decoratorInstance = new (<any>PropDecoratorFactory)(...args);\n\n    function PropDecorator(target: any, name: string) {\n      const constructor = target.constructor;\n      // Use of Object.defineProperty is important since it creates non-enumerable property which\n      // prevents the property is copied during subclassing.\n      const meta = constructor.hasOwnProperty(PROP_METADATA) ?\n          (constructor as any)[PROP_METADATA] :\n          Object.defineProperty(constructor, PROP_METADATA, {value: {}})[PROP_METADATA];\n      meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n      meta[name].unshift(decoratorInstance);\n\n      if (additionalProcessing) additionalProcessing(target, name, ...args);\n    }\n\n    return PropDecorator;\n  }\n\n  if (parentClass) {\n    PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n\n  PropDecoratorFactory.prototype.ngMetadataName = name;\n  (<any>PropDecoratorFactory).annotationCls = PropDecoratorFactory;\n  return PropDecoratorFactory;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '../di/injection_token';\nimport {Type} from '../type';\nimport {makeParamDecorator, makePropDecorator} from '../util/decorators';\n\n/**\n * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n * that will populate the `entryComponents` field of components and NgModules\n * based on its `useValue` property value.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) are added to the `entryComponents` property.\n *\n * @usageNotes\n *\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on a router configuration that refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * @NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * @publicApi\n */\nexport const ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken<any>('AnalyzeForEntryComponents');\n\n/**\n * Type of the `Attribute` decorator / constructor function.\n *\n * @publicApi\n */\nexport interface AttributeDecorator {\n  /**\n   * Specifies that a constant attribute value should be injected.\n   *\n   * The directive can inject constant string literals of host element attributes.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * Suppose we have an `<input>` element and want to know its `type`.\n   *\n   * ```html\n   * <input type=\"text\">\n   * ```\n   *\n   * A decorator can inject string literal `text` as in the following example.\n   *\n   * {@example core/ts/metadata/metadata.ts region='attributeMetadata'}\n   *\n   * @publicApi\n   */\n  (name: string): any;\n  new (name: string): Attribute;\n}\n\n\n/**\n * Type of the Attribute metadata.\n *\n * @publicApi\n */\nexport interface Attribute {\n  /**\n   * The name of the attribute to be injected into the constructor.\n   */\n  attributeName?: string;\n}\n\n/**\n * Attribute decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const Attribute: AttributeDecorator =\n    makeParamDecorator('Attribute', (attributeName?: string) => ({attributeName}));\n\n/**\n * Type of the Query metadata.\n *\n * @publicApi\n */\nexport interface Query {\n  descendants: boolean;\n  first: boolean;\n  read: any;\n  isViewQuery: boolean;\n  selector: any;\n}\n\n/**\n * Base class for query metadata.\n *\n * @see `ContentChildren`.\n * @see `ContentChild`.\n * @see `ViewChildren`.\n * @see `ViewChild`.\n *\n * @publicApi\n */\nexport abstract class Query {}\n\n/**\n * Type of the ContentChildren decorator / constructor function.\n *\n * @see `ContentChildren`.\n * @publicApi\n */\nexport interface ContentChildrenDecorator {\n  /**\n   * Configures a content query.\n   *\n   * You can use ContentChildren to get the `QueryList` of elements or directives from the\n   * content DOM. Any time a child element is added, removed, or moved, the query list will be\n   * updated, and the changes observable of the query list will emit a new value.\n   *\n   * Content queries are set before the `ngAfterContentInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **descendants** - include only direct children or all descendants.\n   * * **read** - read a different token from the queried elements.\n   *\n   * @usageNotes\n   * ### Basic Example\n   *\n   * Here is a simple demonstration of how the `ContentChildren` decorator can be used.\n   *\n   * {@example core/di/ts/contentChildren/content_children_howto.ts region='HowTo'}\n   *\n   * ### Tab-pane Example\n   *\n   * Here is a slightly more realistic example that shows how `ContentChildren` decorators\n   * can be used to implement a tab pane component.\n   *\n   * {@example core/di/ts/contentChildren/content_children_example.ts region='Component'}\n   *\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, opts?: {descendants?: boolean, read?: any}): any;\n  new (selector: Type<any>|Function|string, opts?: {descendants?: boolean, read?: any}): Query;\n}\n\n/**\n * Type of the ContentChildren metadata.\n *\n *\n * @Annotation\n * @publicApi\n */\nexport type ContentChildren = Query;\n\n/**\n * ContentChildren decorator and metadata.\n *\n *\n * @Annotation\n * @publicApi\n */\nexport const ContentChildren: ContentChildrenDecorator = makePropDecorator(\n    'ContentChildren',\n    (selector?: any, data: any = {}) =>\n        ({selector, first: false, isViewQuery: false, descendants: false, ...data}),\n    Query);\n\n/**\n * Type of the ContentChild decorator / constructor function.\n *\n * @publicApi\n */\nexport interface ContentChildDecorator {\n  /**\n   * Configures a content query.\n   *\n   * You can use ContentChild to get the first element or the directive matching the selector from\n   * the content DOM. If the content DOM changes, and a new child matches the selector,\n   * the property will be updated.\n   *\n   * Content queries are set before the `ngAfterContentInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **read** - read a different token from the queried element.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example core/di/ts/contentChild/content_child_howto.ts region='HowTo'}\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/contentChild/content_child_example.ts region='Component'}\n   *\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, opts?: {read?: any}): any;\n  new (selector: Type<any>|Function|string, opts?: {read?: any}): ContentChild;\n}\n\n/**\n * Type of the ContentChild metadata.\n *\n * @publicApi\n */\nexport type ContentChild = Query;\n\n/**\n * ContentChild decorator and metadata.\n *\n *\n * @Annotation\n *\n * @publicApi\n */\nexport const ContentChild: ContentChildDecorator = makePropDecorator(\n    'ContentChild', (selector?: any, data: any = {}) =>\n                        ({selector, first: true, isViewQuery: false, descendants: true, ...data}),\n    Query);\n\n/**\n * Type of the ViewChildren decorator / constructor function.\n *\n * @see `ViewChildren`.\n *\n * @publicApi\n */\nexport interface ViewChildrenDecorator {\n  /**\n   * Configures a view query.\n   *\n   * You can use ViewChildren to get the `QueryList` of elements or directives from the\n   * view DOM. Any time a child element is added, removed, or moved, the query list will be updated,\n   * and the changes observable of the query list will emit a new value.\n   *\n   * View queries are set before the `ngAfterViewInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **read** - read a different token from the queried elements.\n   *\n   * @usageNotes\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/viewChildren/view_children_howto.ts region='HowTo'}\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/viewChildren/view_children_example.ts region='Component'}\n   *\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, opts?: {read?: any}): any;\n  new (selector: Type<any>|Function|string, opts?: {read?: any}): ViewChildren;\n}\n\n/**\n * Type of the ViewChildren metadata.\n *\n * @publicApi\n */\nexport type ViewChildren = Query;\n\n/**\n * ViewChildren decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const ViewChildren: ViewChildrenDecorator = makePropDecorator(\n    'ViewChildren', (selector?: any, data: any = {}) =>\n                        ({selector, first: false, isViewQuery: true, descendants: true, ...data}),\n    Query);\n\n/**\n * Type of the ViewChild decorator / constructor function.\n *\n * @see `ViewChild`.\n * @publicApi\n */\nexport interface ViewChildDecorator {\n  /**\n   * @description\n   * Property decorator that configures a view query.\n   * The change detector looks for the first element or the directive matching the selector\n   * in the view DOM. If the view DOM changes, and a new child matches the selector,\n   * the property is updated.\n   *\n   * View queries are set before the `ngAfterViewInit` callback is called.\n   *\n   * **Metadata Properties**:\n   *\n   * * **selector** - the directive type or the name used for querying.\n   * * **read** - read a different token from the queried elements.\n   *\n   * Supported selectors include:\n   *   * any class with the `@Component` or `@Directive` decorator\n   *   * a template reference variable as a string (e.g. query `<my-component #cmp></my-component>`\n   * with `@ViewChild('cmp')`)\n   *   * any provider defined in the child component tree of the current component (e.g.\n   * `@ViewChild(SomeService) someService: SomeService`)\n   *   * any provider defined through a string token (e.g. `@ViewChild('someToken') someTokenVal:\n   * any`)\n   *   * a `TemplateRef` (e.g. query `<ng-template></ng-template>` with `@ViewChild(TemplateRef)\n   * template;`)\n   *\n   * @usageNotes\n   *\n   * {@example core/di/ts/viewChild/view_child_example.ts region='Component'}\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/viewChild/view_child_howto.ts region='HowTo'}\n   *\n   * ### Example\n   *\n   * {@example core/di/ts/viewChild/view_child_example.ts region='Component'}\n   *\n   * @Annotation\n   */\n  (selector: Type<any>|Function|string, opts?: {read?: any}): any;\n  new (selector: Type<any>|Function|string, opts?: {read?: any}): ViewChild;\n}\n\n/**\n * Type of the ViewChild metadata.\n *\n * @publicApi\n */\nexport type ViewChild = Query;\n\n/**\n * ViewChild decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const ViewChild: ViewChildDecorator = makePropDecorator(\n    'ViewChild', (selector: any, data: any) =>\n                     ({selector, first: true, isViewQuery: true, descendants: true, ...data}),\n    Query);\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n/**\n * The strategy that the default change detector uses to detect changes.\n * When set, takes effect the next time change detection is triggered.\n *\n * @publicApi\n */\nexport enum ChangeDetectionStrategy {\n  /**\n   * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n   * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n   * Change detection can still be explicitly invoked.\n   * This strategy applies to all child directives and cannot be overridden.\n   */\n  OnPush = 0,\n\n  /**\n   * Use the default `CheckAlways` strategy, in which change detection is automatic until\n   * explicitly deactivated.\n   */\n  Default = 1,\n}\n\n/**\n * Defines the possible states of the default change detector.\n * @see `ChangeDetectorRef`\n */\nexport enum ChangeDetectorStatus {\n  /**\n   * A state in which, after calling `detectChanges()`, the change detector\n   * state becomes `Checked`, and must be explicitly invoked or reactivated.\n   */\n  CheckOnce,\n\n  /**\n   * A state in which change detection is skipped until the change detector mode\n   * becomes `CheckOnce`.\n   */\n  Checked,\n\n  /**\n   * A state in which change detection continues automatically until explicitly\n   * deactivated.\n   */\n  CheckAlways,\n\n  /**\n   * A state in which a change detector sub tree is not a part of the main tree and\n   * should be skipped.\n   */\n  Detached,\n\n  /**\n   * Indicates that the change detector encountered an error checking a binding\n   * or calling a directive lifecycle method and is now in an inconsistent state. Change\n   * detectors in this state do not detect changes.\n   */\n  Errored,\n\n  /**\n   * Indicates that the change detector has been destroyed.\n   */\n  Destroyed,\n}\n\n/**\n * Reports whether a given strategy is currently the default for change detection.\n * @param changeDetectionStrategy The strategy to check.\n * @returns True if the given strategy is the current default, false otherwise.\n * @see `ChangeDetectorStatus`\n * @see `ChangeDetectorRef`\n */\nexport function isDefaultChangeDetectionStrategy(changeDetectionStrategy: ChangeDetectionStrategy):\n    boolean {\n  return changeDetectionStrategy == null ||\n      changeDetectionStrategy === ChangeDetectionStrategy.Default;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// TODO(jteplitz602): Load WorkerGlobalScope from lib.webworker.d.ts file #3492\ndeclare var WorkerGlobalScope: any /** TODO #9100 */;\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\ndeclare var global: any /** TODO #9100 */;\nconst __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\n\n// Check __global first, because in Node tests both __global and __window may be defined and _global\n// should be __global in that case.\nconst _global: {[name: string]: any} = __global || __window || __self;\n\nconst promise: Promise<any> = Promise.resolve(0);\n/**\n * Attention: whenever providing a new value, be sure to add an\n * entry into the corresponding `....externs.js` file,\n * so that closure won't use that global for its purposes.\n */\nexport {_global as global};\n\n// When Symbol.iterator doesn't exist, retrieves the key used in es6-shim\ndeclare const Symbol: any;\nlet _symbolIterator: any = null;\nexport function getSymbolIterator(): string|symbol {\n  if (!_symbolIterator) {\n    const Symbol = _global['Symbol'];\n    if (Symbol && Symbol.iterator) {\n      _symbolIterator = Symbol.iterator;\n    } else {\n      // es6-shim specific logic\n      const keys = Object.getOwnPropertyNames(Map.prototype);\n      for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (key !== 'entries' && key !== 'size' &&\n            (Map as any).prototype[key] === Map.prototype['entries']) {\n          _symbolIterator = key;\n        }\n      }\n    }\n  }\n  return _symbolIterator;\n}\n\nexport function scheduleMicroTask(fn: Function) {\n  if (typeof Zone === 'undefined') {\n    // use promise to schedule microTask instead of use Zone\n    promise.then(() => { fn && fn.apply(null, null); });\n  } else {\n    Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n  }\n}\n\n// JS has NaN !== NaN\nexport function looseIdentical(a: any, b: any): boolean {\n  return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n\nexport function stringify(token: any): string {\n  if (typeof token === 'string') {\n    return token;\n  }\n\n  if (token instanceof Array) {\n    return '[' + token.map(stringify).join(', ') + ']';\n  }\n\n  if (token == null) {\n    return '' + token;\n  }\n\n  if (token.overriddenName) {\n    return `${token.overriddenName}`;\n  }\n\n  if (token.name) {\n    return `${token.name}`;\n  }\n\n  const res = token.toString();\n\n  if (res == null) {\n    return '' + res;\n  }\n\n  const newLineIndex = res.indexOf('\\n');\n  return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n\n/**\n * Convince closure compiler that the wrapped function has no side-effects.\n *\n * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n * It is important that the return value for the `noSideEffects` function be assigned\n * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n * compiler.\n */\nexport function noSideEffects(fn: () => void): string {\n  return '' + {toString: fn};\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\nimport {stringify} from '../util';\nimport {getClosureSafeProperty} from '../util/property';\n\n\n\n/**\n * An interface that a function passed into {@link forwardRef} has to implement.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref_fn'}\n * @publicApi\n */\nexport interface ForwardRefFn { (): any; }\n\nconst __forward_ref__ = getClosureSafeProperty({__forward_ref__: getClosureSafeProperty});\n\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n * a query is not yet defined.\n *\n * @usageNotes\n * ### Example\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * @publicApi\n */\nexport function forwardRef(forwardRefFn: ForwardRefFn): Type<any> {\n  (<any>forwardRefFn).__forward_ref__ = forwardRef;\n  (<any>forwardRefFn).toString = function() { return stringify(this()); };\n  return (<Type<any>><any>forwardRefFn);\n}\n\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * @see `forwardRef`\n * @publicApi\n */\nexport function resolveForwardRef<T>(type: T): T {\n  const fn: any = type;\n  if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n      fn.__forward_ref__ === forwardRef) {\n    return fn();\n  } else {\n    return type;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Component} from './directives';\n\n\n/**\n * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n *\n * Example:\n * ```\n * @Component({\n *   selector: 'my-comp',\n *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n * })\n * class MyComponent{\n * }\n *\n * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n *\n * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n *\n * // Use browser's `fetch()` function as the default resource resolution strategy.\n * resolveComponentResources(fetch).then(() => {\n *   // After resolution all URLs have been converted into `template` strings.\n *   renderComponent(MyComponent);\n * });\n *\n * ```\n *\n * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n * to call this method outside JIT mode.\n *\n * @param resourceResolver a function which is responsible for returning a `Promise` to the\n * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n */\nexport function resolveComponentResources(\n    resourceResolver: (url: string) => (Promise<string|{text(): Promise<string>}>)): Promise<null> {\n  // Store all promises which are fetching the resources.\n  const urlFetches: Promise<string>[] = [];\n\n  // Cache so that we don't fetch the same resource more than once.\n  const urlMap = new Map<string, Promise<string>>();\n  function cachedResourceResolve(url: string): Promise<string> {\n    let promise = urlMap.get(url);\n    if (!promise) {\n      const resp = resourceResolver(url);\n      urlMap.set(url, promise = resp.then(unwrapResponse));\n      urlFetches.push(promise);\n    }\n    return promise;\n  }\n\n  componentResourceResolutionQueue.forEach((component: Component) => {\n    if (component.templateUrl) {\n      cachedResourceResolve(component.templateUrl).then((template) => {\n        component.template = template;\n        component.templateUrl = undefined;\n      });\n    }\n    const styleUrls = component.styleUrls;\n    const styles = component.styles || (component.styles = []);\n    const styleOffset = component.styles.length;\n    styleUrls && styleUrls.forEach((styleUrl, index) => {\n      styles.push('');  // pre-allocate array.\n      cachedResourceResolve(styleUrl).then((style) => {\n        styles[styleOffset + index] = style;\n        styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n        if (styleUrls.length == 0) {\n          component.styleUrls = undefined;\n        }\n      });\n    });\n  });\n  componentResourceResolutionQueue.clear();\n  return Promise.all(urlFetches).then(() => null);\n}\n\nconst componentResourceResolutionQueue: Set<Component> = new Set();\n\nexport function maybeQueueResolutionOfComponentResources(metadata: Component) {\n  if (componentNeedsResolution(metadata)) {\n    componentResourceResolutionQueue.add(metadata);\n  }\n}\n\nexport function componentNeedsResolution(component: Component) {\n  return component.templateUrl || component.styleUrls && component.styleUrls.length;\n}\nexport function clearResolutionOfComponentResourcesQueue() {\n  componentResourceResolutionQueue.clear();\n}\n\nfunction unwrapResponse(response: string | {text(): Promise<string>}): string|Promise<string> {\n  return typeof response == 'string' ? response : response.text();\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Defines template and style encapsulation options available for Component's {@link Component}.\n *\n * See {@link Component#encapsulation encapsulation}.\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/ts/metadata/encapsulation.ts region='longform'}\n *\n * @publicApi\n */\nexport enum ViewEncapsulation {\n  /**\n   * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n   * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n   * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n   * selectors.\n   *\n   * This is the default option.\n   */\n  Emulated = 0,\n  /**\n   * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n   * Use the native encapsulation mechanism of the renderer.\n   *\n   * For the DOM this means using the deprecated [Shadow DOM\n   * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n   * creating a ShadowRoot for Component's Host Element.\n   */\n  Native = 1,\n  /**\n   * Don't provide any template or style encapsulation.\n   */\n  None = 2,\n\n  /**\n   * Use Shadow DOM to encapsulate styles.\n   *\n   * For the DOM this means using modern [Shadow\n   * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n   * creating a ShadowRoot for Component's Host Element.\n   */\n  ShadowDom = 3\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\ndeclare global {\n  const ngDevMode: null|NgDevModePerfCounters;\n  interface NgDevModePerfCounters {\n    firstTemplatePass: number;\n    tNode: number;\n    tView: number;\n    rendererCreateTextNode: number;\n    rendererSetText: number;\n    rendererCreateElement: number;\n    rendererAddEventListener: number;\n    rendererSetAttribute: number;\n    rendererRemoveAttribute: number;\n    rendererSetProperty: number;\n    rendererSetClassName: number;\n    rendererAddClass: number;\n    rendererRemoveClass: number;\n    rendererSetStyle: number;\n    rendererRemoveStyle: number;\n    rendererDestroy: number;\n    rendererDestroyNode: number;\n    rendererMoveNode: number;\n    rendererRemoveNode: number;\n    rendererCreateComment: number;\n  }\n}\n\ndeclare let global: any;\n\nexport function ngDevModeResetPerfCounters(): NgDevModePerfCounters {\n  const newCounters: NgDevModePerfCounters = {\n    firstTemplatePass: 0,\n    tNode: 0,\n    tView: 0,\n    rendererCreateTextNode: 0,\n    rendererSetText: 0,\n    rendererCreateElement: 0,\n    rendererAddEventListener: 0,\n    rendererSetAttribute: 0,\n    rendererRemoveAttribute: 0,\n    rendererSetProperty: 0,\n    rendererSetClassName: 0,\n    rendererAddClass: 0,\n    rendererRemoveClass: 0,\n    rendererSetStyle: 0,\n    rendererRemoveStyle: 0,\n    rendererDestroy: 0,\n    rendererDestroyNode: 0,\n    rendererMoveNode: 0,\n    rendererRemoveNode: 0,\n    rendererCreateComment: 0,\n  };\n  // NOTE: Under Ivy we may have both window & global defined in the Node\n  //    environment since ensureDocument() in render3.ts sets global.window.\n  if (typeof window != 'undefined') {\n    // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n    (window as any)['ngDevMode'] = newCounters;\n  }\n  if (typeof global != 'undefined') {\n    // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n    (global as any)['ngDevMode'] = newCounters;\n  }\n  if (typeof self != 'undefined') {\n    // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n    (self as any)['ngDevMode'] = newCounters;\n  }\n  return newCounters;\n}\n\n/**\n * This checks to see if the `ngDevMode` has been set. If yes,\n * than we honor it, otherwise we default to dev mode with additional checks.\n *\n * The idea is that unless we are doing production build where we explicitly\n * set `ngDevMode == false` we should be helping the developer by providing\n * as much early warning and errors as possible.\n */\nif (typeof ngDevMode === 'undefined' || ngDevMode) {\n  ngDevModeResetPerfCounters();\n}\n","/**\n* @license\n* Copyright Google Inc. All Rights Reserved.\n*\n* Use of this source code is governed by an MIT-style license that can be\n* found in the LICENSE file at https://angular.io/license\n*/\nimport './ng_dev_mode';\n\n/**\n * This file contains reuseable \"empty\" symbols that can be used as default return values\n * in different parts of the rendering code. Because the same symbols are returned, this\n * allows for identity checks against these values to be consistently used by the framework\n * code.\n */\n\nexport const EMPTY_OBJ: {} = {};\nexport const EMPTY_ARRAY: any[] = [];\n\n// freezing the values prevents any code from accidentally inserting new values in\nif (typeof ngDevMode !== 'undefined' && ngDevMode) {\n  Object.freeze(EMPTY_OBJ);\n  Object.freeze(EMPTY_ARRAY);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport './ng_dev_mode';\n\nimport {ChangeDetectionStrategy} from '../change_detection/constants';\nimport {NgModuleDef} from '../metadata/ng_module';\nimport {ViewEncapsulation} from '../metadata/view';\nimport {Mutable, Type} from '../type';\nimport {noSideEffects, stringify} from '../util';\nimport {EMPTY_ARRAY, EMPTY_OBJ} from './empty';\nimport {NG_COMPONENT_DEF, NG_DIRECTIVE_DEF, NG_MODULE_DEF, NG_PIPE_DEF} from './fields';\nimport {BaseDef, ComponentDef, ComponentDefFeature, ComponentQuery, ComponentTemplate, ComponentType, DirectiveDef, DirectiveDefFeature, DirectiveType, DirectiveTypesOrFactory, HostBindingsFunction, PipeDef, PipeType, PipeTypesOrFactory} from './interfaces/definition';\nimport {CssSelectorList} from './interfaces/projection';\n\nlet _renderCompCount = 0;\n\n/**\n * Create a component definition object.\n *\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ngComponentDef = defineComponent({\n *     ...\n *   });\n * }\n * ```\n */\nexport function defineComponent<T>(componentDefinition: {\n  /**\n   * Directive type, needed to configure the injector.\n   */\n  type: Type<T>;\n\n  /** The selectors that will be used to match nodes to this component. */\n  selectors: CssSelectorList;\n\n  /**\n   * Factory method used to create an instance of directive.\n   */\n  factory: (t: Type<T>| null) => T;\n\n  /**\n   * The number of nodes, local refs, and pipes in this component template.\n   *\n   * Used to calculate the length of this component's LView array, so we\n   * can pre-fill the array and set the binding start index.\n   */\n  // TODO(kara): remove queries from this count\n  consts: number;\n\n  /**\n   * The number of bindings in this component template (including pure fn bindings).\n   *\n   * Used to calculate the length of this component's LView array, so we\n   * can pre-fill the array and set the host binding start index.\n   */\n  vars: number;\n\n  /**\n   * Static attributes to set on host element.\n   *\n   * Even indices: attribute name\n   * Odd indices: attribute value\n   */\n  attributes?: string[];\n\n  /**\n   * A map of input names.\n   *\n   * The format is in: `{[actualPropertyName: string]:(string|[string, string])}`.\n   *\n   * Given:\n   * ```\n   * class MyComponent {\n   *   @Input()\n   *   publicInput1: string;\n   *\n   *   @Input('publicInput2')\n   *   declaredInput2: string;\n   * }\n   * ```\n   *\n   * is described as:\n   * ```\n   * {\n   *   publicInput1: 'publicInput1',\n   *   declaredInput2: ['publicInput2', 'declaredInput2'],\n   * }\n   * ```\n   *\n   * Which the minifier may translate to:\n   * ```\n   * {\n   *   minifiedPublicInput1: 'publicInput1',\n   *   minifiedDeclaredInput2: ['publicInput2', 'declaredInput2'],\n   * }\n   * ```\n   *\n   * This allows the render to re-construct the minified, public, and declared names\n   * of properties.\n   *\n   * NOTE:\n   *  - Because declared and public name are usually same we only generate the array\n   *    `['public', 'declared']` format when they differ.\n   *  - The reason why this API and `outputs` API is not the same is that `NgOnChanges` has\n   *    inconsistent behavior in that it uses declared names rather than minified or public. For\n   *    this reason `NgOnChanges` will be deprecated and removed in future version and this\n   *    API will be simplified to be consistent with `output`.\n   */\n  inputs?: {[P in keyof T]?: string | [string, string]};\n\n  /**\n   * A map of output names.\n   *\n   * The format is in: `{[actualPropertyName: string]:string}`.\n   *\n   * Which the minifier may translate to: `{[minifiedPropertyName: string]:string}`.\n   *\n   * This allows the render to re-construct the minified and non-minified names\n   * of properties.\n   */\n  outputs?: {[P in keyof T]?: string};\n\n  /**\n   * Function executed by the parent template to allow child directive to apply host bindings.\n   */\n  hostBindings?: HostBindingsFunction<T>;\n\n  /**\n   * Function to create instances of content queries associated with a given directive.\n   */\n  contentQueries?: ((dirIndex: number) => void);\n\n  /** Refreshes content queries associated with directives in a given view */\n  contentQueriesRefresh?: ((directiveIndex: number, queryIndex: number) => void);\n\n  /**\n   * Defines the name that can be used in the template to assign this directive to a variable.\n   *\n   * See: {@link Directive.exportAs}\n   */\n  exportAs?: string;\n\n  /**\n   * Template function use for rendering DOM.\n   *\n   * This function has following structure.\n   *\n   * ```\n   * function Template<T>(ctx:T, creationMode: boolean) {\n   *   if (creationMode) {\n   *     // Contains creation mode instructions.\n   *   }\n   *   // Contains binding update instructions\n   * }\n   * ```\n   *\n   * Common instructions are:\n   * Creation mode instructions:\n   *  - `elementStart`, `elementEnd`\n   *  - `text`\n   *  - `container`\n   *  - `listener`\n   *\n   * Binding update instructions:\n   * - `bind`\n   * - `elementAttribute`\n   * - `elementProperty`\n   * - `elementClass`\n   * - `elementStyle`\n   *\n   */\n  template: ComponentTemplate<T>;\n\n  /**\n   * Additional set of instructions specific to view query processing. This could be seen as a\n   * set of instruction to be inserted into the template function.\n   *\n   * Query-related instructions need to be pulled out to a specific function as a timing of\n   * execution is different as compared to all other instructions (after change detection hooks but\n   * before view hooks).\n   */\n  viewQuery?: ComponentQuery<T>| null;\n\n  /**\n   * A list of optional features to apply.\n   *\n   * See: {@link NgOnChangesFeature}, {@link ProvidersFeature}\n   */\n  features?: ComponentDefFeature[];\n\n  /**\n   * Defines template and style encapsulation options available for Component's {@link Component}.\n   */\n  encapsulation?: ViewEncapsulation;\n\n  /**\n   * Defines arbitrary developer-defined data to be stored on a renderer instance.\n   * This is useful for renderers that delegate to other renderers.\n   *\n   * see: animation\n   */\n  data?: {[kind: string]: any};\n\n  /**\n   * A set of styles that the component needs to be present for component to render correctly.\n   */\n  styles?: string[];\n\n  /**\n   * The strategy that the default change detector uses to detect changes.\n   * When set, takes effect the next time change detection is triggered.\n   */\n  changeDetection?: ChangeDetectionStrategy;\n\n  /**\n   * Registry of directives and components that may be found in this component's view.\n   *\n   * The property is either an array of `DirectiveDef`s or a function which returns the array of\n   * `DirectiveDef`s. The function is necessary to be able to support forward declarations.\n   */\n  directives?: DirectiveTypesOrFactory | null;\n\n  /**\n   * Registry of pipes that may be found in this component's view.\n   *\n   * The property is either an array of `PipeDefs`s or a function which returns the array of\n   * `PipeDefs`s. The function is necessary to be able to support forward declarations.\n   */\n  pipes?: PipeTypesOrFactory | null;\n}): never {\n  const type = componentDefinition.type;\n  const typePrototype = type.prototype;\n  const declaredInputs: {[key: string]: string} = {} as any;\n  const def: Mutable<ComponentDef<any>, keyof ComponentDef<any>> = {\n    type: type,\n    providersResolver: null,\n    consts: componentDefinition.consts,\n    vars: componentDefinition.vars,\n    factory: componentDefinition.factory,\n    template: componentDefinition.template || null !,\n    hostBindings: componentDefinition.hostBindings || null,\n    contentQueries: componentDefinition.contentQueries || null,\n    contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n    attributes: componentDefinition.attributes || null,\n    declaredInputs: declaredInputs,\n    inputs: null !,   // assigned in noSideEffects\n    outputs: null !,  // assigned in noSideEffects\n    exportAs: componentDefinition.exportAs || null,\n    onInit: typePrototype.ngOnInit || null,\n    doCheck: typePrototype.ngDoCheck || null,\n    afterContentInit: typePrototype.ngAfterContentInit || null,\n    afterContentChecked: typePrototype.ngAfterContentChecked || null,\n    afterViewInit: typePrototype.ngAfterViewInit || null,\n    afterViewChecked: typePrototype.ngAfterViewChecked || null,\n    onDestroy: typePrototype.ngOnDestroy || null,\n    onPush: componentDefinition.changeDetection === ChangeDetectionStrategy.OnPush,\n    directiveDefs: null !,  // assigned in noSideEffects\n    pipeDefs: null !,       // assigned in noSideEffects\n    selectors: componentDefinition.selectors,\n    viewQuery: componentDefinition.viewQuery || null,\n    features: componentDefinition.features || null,\n    data: componentDefinition.data || {},\n    // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n    // next line. Also `None` should be 0 not 2.\n    encapsulation: componentDefinition.encapsulation || ViewEncapsulation.Emulated,\n    id: 'c',\n    styles: componentDefinition.styles || EMPTY_ARRAY,\n    _: null as never,\n  };\n  def._ = noSideEffects(() => {\n    const directiveTypes = componentDefinition.directives !;\n    const feature = componentDefinition.features;\n    const pipeTypes = componentDefinition.pipes !;\n    def.id += _renderCompCount++;\n    def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n    def.outputs = invertObject(componentDefinition.outputs),\n    feature && feature.forEach((fn) => fn(def));\n    def.directiveDefs = directiveTypes ?\n        () => (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                  .map(extractDirectiveDef) :\n        null;\n    def.pipeDefs = pipeTypes ?\n        () => (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef) :\n        null;\n  }) as never;\n  return def as never;\n}\n\nexport function extractDirectiveDef(type: DirectiveType<any>& ComponentType<any>):\n    DirectiveDef<any>|ComponentDef<any> {\n  const def = getComponentDef(type) || getDirectiveDef(type);\n  if (ngDevMode && !def) {\n    throw new Error(`'${type.name}' is neither 'ComponentType' or 'DirectiveType'.`);\n  }\n  return def !;\n}\n\nexport function extractPipeDef(type: PipeType<any>): PipeDef<any> {\n  const def = getPipeDef(type);\n  if (ngDevMode && !def) {\n    throw new Error(`'${type.name}' is not a 'PipeType'.`);\n  }\n  return def !;\n}\n\nexport function defineNgModule<T>(def: {type: T} & Partial<NgModuleDef<T>>): never {\n  const res: NgModuleDef<T> = {\n    type: def.type,\n    bootstrap: def.bootstrap || EMPTY_ARRAY,\n    declarations: def.declarations || EMPTY_ARRAY,\n    imports: def.imports || EMPTY_ARRAY,\n    exports: def.exports || EMPTY_ARRAY,\n    transitiveCompileScopes: null,\n  };\n  return res as never;\n}\n\n/**\n * Inverts an inputs or outputs lookup such that the keys, which were the\n * minified keys, are part of the values, and the values are parsed so that\n * the publicName of the property is the new key\n *\n * e.g. for\n *\n * ```\n * class Comp {\n *   @Input()\n *   propName1: string;\n *\n *   @Input('publicName2')\n *   declaredPropName2: number;\n * }\n * ```\n *\n * will be serialized as\n *\n * ```\n * {\n *   propName1: 'propName1',\n *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n * }\n * ```\n *\n * which is than translated by the minifier as:\n *\n * ```\n * {\n *   minifiedPropName1: 'propName1',\n *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n * }\n * ```\n *\n * becomes: (public name => minifiedName)\n *\n * ```\n * {\n *  'propName1': 'minifiedPropName1',\n *  'publicName2': 'minifiedPropName2',\n * }\n * ```\n *\n * Optionally the function can take `secondary` which will result in: (public name => declared name)\n *\n * ```\n * {\n *  'propName1': 'propName1',\n *  'publicName2': 'declaredPropName2',\n * }\n * ```\n *\n\n */\nfunction invertObject(obj: any, secondary?: any): any {\n  if (obj == null) return EMPTY_OBJ;\n  const newLookup: any = {};\n  for (const minifiedKey in obj) {\n    if (obj.hasOwnProperty(minifiedKey)) {\n      let publicName: string = obj[minifiedKey];\n      let declaredName = publicName;\n      if (Array.isArray(publicName)) {\n        declaredName = publicName[1];\n        publicName = publicName[0];\n      }\n      newLookup[publicName] = minifiedKey;\n      if (secondary) {\n        (secondary[publicName] = declaredName);\n      }\n    }\n  }\n  return newLookup;\n}\n\n/**\n * Create a base definition\n *\n * # Example\n * ```\n * class ShouldBeInherited {\n *   static ngBaseDef = defineBase({\n *      ...\n *   })\n * }\n * @param baseDefinition The base definition parameters\n */\nexport function defineBase<T>(baseDefinition: {\n  /**\n   * A map of input names.\n   *\n   * The format is in: `{[actualPropertyName: string]:(string|[string, string])}`.\n   *\n   * Given:\n   * ```\n   * class MyComponent {\n   *   @Input()\n   *   publicInput1: string;\n   *\n   *   @Input('publicInput2')\n   *   declaredInput2: string;\n   * }\n   * ```\n   *\n   * is described as:\n   * ```\n   * {\n   *   publicInput1: 'publicInput1',\n   *   declaredInput2: ['declaredInput2', 'publicInput2'],\n   * }\n   * ```\n   *\n   * Which the minifier may translate to:\n   * ```\n   * {\n   *   minifiedPublicInput1: 'publicInput1',\n   *   minifiedDeclaredInput2: [ 'declaredInput2', 'publicInput2'],\n   * }\n   * ```\n   *\n   * This allows the render to re-construct the minified, public, and declared names\n   * of properties.\n   *\n   * NOTE:\n   *  - Because declared and public name are usually same we only generate the array\n   *    `['declared', 'public']` format when they differ.\n   *  - The reason why this API and `outputs` API is not the same is that `NgOnChanges` has\n   *    inconsistent behavior in that it uses declared names rather than minified or public. For\n   *    this reason `NgOnChanges` will be deprecated and removed in future version and this\n   *    API will be simplified to be consistent with `outputs`.\n   */\n  inputs?: {[P in keyof T]?: string | [string, string]};\n\n  /**\n   * A map of output names.\n   *\n   * The format is in: `{[actualPropertyName: string]:string}`.\n   *\n   * Which the minifier may translate to: `{[minifiedPropertyName: string]:string}`.\n   *\n   * This allows the render to re-construct the minified and non-minified names\n   * of properties.\n   */\n  outputs?: {[P in keyof T]?: string};\n}): BaseDef<T> {\n  const declaredInputs: {[P in keyof T]: P} = {} as any;\n  return {\n    inputs: invertObject(baseDefinition.inputs, declaredInputs),\n    declaredInputs: declaredInputs,\n    outputs: invertObject(baseDefinition.outputs),\n  };\n}\n\n/**\n * Create a directive definition object.\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ngDirectiveDef = defineDirective({\n *     ...\n *   });\n * }\n * ```\n */\nexport const defineDirective = defineComponent as any as<T>(directiveDefinition: {\n  /**\n   * Directive type, needed to configure the injector.\n   */\n  type: Type<T>;\n\n  /** The selectors that will be used to match nodes to this directive. */\n  selectors: CssSelectorList;\n\n  /**\n   * Factory method used to create an instance of directive.\n   */\n  factory: (t: Type<T>| null) => T;\n\n  /**\n   * Static attributes to set on host element.\n   *\n   * Even indices: attribute name\n   * Odd indices: attribute value\n   */\n  attributes?: string[];\n\n  /**\n   * A map of input names.\n   *\n   * The format is in: `{[actualPropertyName: string]:(string|[string, string])}`.\n   *\n   * Given:\n   * ```\n   * class MyComponent {\n   *   @Input()\n   *   publicInput1: string;\n   *\n   *   @Input('publicInput2')\n   *   declaredInput2: string;\n   * }\n   * ```\n   *\n   * is described as:\n   * ```\n   * {\n   *   publicInput1: 'publicInput1',\n   *   declaredInput2: ['declaredInput2', 'publicInput2'],\n   * }\n   * ```\n   *\n   * Which the minifier may translate to:\n   * ```\n   * {\n   *   minifiedPublicInput1: 'publicInput1',\n   *   minifiedDeclaredInput2: [ 'publicInput2', 'declaredInput2'],\n   * }\n   * ```\n   *\n   * This allows the render to re-construct the minified, public, and declared names\n   * of properties.\n   *\n   * NOTE:\n   *  - Because declared and public name are usually same we only generate the array\n   *    `['declared', 'public']` format when they differ.\n   *  - The reason why this API and `outputs` API is not the same is that `NgOnChanges` has\n   *    inconsistent behavior in that it uses declared names rather than minified or public. For\n   *    this reason `NgOnChanges` will be deprecated and removed in future version and this\n   *    API will be simplified to be consistent with `output`.\n   */\n  inputs?: {[P in keyof T]?: string | [string, string]};\n\n  /**\n   * A map of output names.\n   *\n   * The format is in: `{[actualPropertyName: string]:string}`.\n   *\n   * Which the minifier may translate to: `{[minifiedPropertyName: string]:string}`.\n   *\n   * This allows the render to re-construct the minified and non-minified names\n   * of properties.\n   */\n  outputs?: {[P in keyof T]?: string};\n\n  /**\n   * A list of optional features to apply.\n   *\n   * See: {@link NgOnChangesFeature}, {@link ProvidersFeature}, {@link InheritDefinitionFeature}\n   */\n  features?: DirectiveDefFeature[];\n\n  /**\n   * Function executed by the parent template to allow child directive to apply host bindings.\n   */\n  hostBindings?: HostBindingsFunction<T>;\n\n  /**\n   * Function to create instances of content queries associated with a given directive.\n   */\n  contentQueries?: ((directiveIndex: number) => void);\n\n  /** Refreshes content queries associated with directives in a given view */\n  contentQueriesRefresh?: ((directiveIndex: number, queryIndex: number) => void);\n\n  /**\n   * Defines the name that can be used in the template to assign this directive to a variable.\n   *\n   * See: {@link Directive.exportAs}\n   */\n  exportAs?: string;\n}) => never;\n\n/**\n * Create a pipe definition object.\n *\n * # Example\n * ```\n * class MyPipe implements PipeTransform {\n *   // Generated by Angular Template Compiler\n *   static ngPipeDef = definePipe({\n *     ...\n *   });\n * }\n * ```\n * @param pipeDef Pipe definition generated by the compiler\n */\nexport function definePipe<T>(pipeDef: {\n  /** Name of the pipe. Used for matching pipes in template to pipe defs. */\n  name: string,\n\n  /** Pipe class reference. Needed to extract pipe lifecycle hooks. */\n  type: Type<T>,\n\n  /** A factory for creating a pipe instance. */\n  factory: (t: Type<T>| null) => T,\n\n  /** Whether the pipe is pure. */\n  pure?: boolean\n}): never {\n  return (<PipeDef<T>>{\n    name: pipeDef.name,\n    factory: pipeDef.factory,\n    pure: pipeDef.pure !== false,\n    onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n  }) as never;\n}\n\n/**\n * The following getter methods retrieve the definition form the type. Currently the retrieval\n * honors inheritance, but in the future we may change the rule to require that definitions are\n * explicit. This would require some sort of migration strategy.\n */\n\nexport function getComponentDef<T>(type: any): ComponentDef<T>|null {\n  return (type as any)[NG_COMPONENT_DEF] || null;\n}\n\nexport function getDirectiveDef<T>(type: any): DirectiveDef<T>|null {\n  return (type as any)[NG_DIRECTIVE_DEF] || null;\n}\n\nexport function getPipeDef<T>(type: any): PipeDef<T>|null {\n  return (type as any)[NG_PIPE_DEF] || null;\n}\n\nexport function getNgModuleDef<T>(type: any, throwNotFound: true): NgModuleDef<T>;\nexport function getNgModuleDef<T>(type: any): NgModuleDef<T>|null;\nexport function getNgModuleDef<T>(type: any, throwNotFound?: boolean): NgModuleDef<T>|null {\n  const ngModuleDef = (type as any)[NG_MODULE_DEF] || null;\n  if (!ngModuleDef && throwNotFound === true) {\n    throw new Error(`Type ${stringify(type)} does not have 'ngModuleDef' property.`);\n  }\n  return ngModuleDef;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {getComponentDef, getNgModuleDef} from './definition';\nimport {TNode} from './interfaces/node';\nimport {LView} from './interfaces/view';\n\n// The functions in this file verify that the assumptions we are making\n// about state in an instruction are correct before implementing any logic.\n// They are meant only to be called in dev mode as sanity checks.\n\nexport function assertNumber(actual: any, msg: string) {\n  if (typeof actual != 'number') {\n    throwError(msg);\n  }\n}\n\nexport function assertEqual<T>(actual: T, expected: T, msg: string) {\n  if (actual != expected) {\n    throwError(msg);\n  }\n}\n\nexport function assertNotEqual<T>(actual: T, expected: T, msg: string) {\n  if (actual == expected) {\n    throwError(msg);\n  }\n}\n\nexport function assertSame<T>(actual: T, expected: T, msg: string) {\n  if (actual !== expected) {\n    throwError(msg);\n  }\n}\n\nexport function assertLessThan<T>(actual: T, expected: T, msg: string) {\n  if (actual >= expected) {\n    throwError(msg);\n  }\n}\n\nexport function assertGreaterThan<T>(actual: T, expected: T, msg: string) {\n  if (actual <= expected) {\n    throwError(msg);\n  }\n}\n\nexport function assertNotDefined<T>(actual: T, msg: string) {\n  if (actual != null) {\n    throwError(msg);\n  }\n}\n\nexport function assertDefined<T>(actual: T, msg: string) {\n  if (actual == null) {\n    throwError(msg);\n  }\n}\n\nexport function assertComponentType(\n    actual: any,\n    msg: string =\n        'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.') {\n  if (!getComponentDef(actual)) {\n    throwError(msg);\n  }\n}\n\nexport function assertNgModuleType(\n    actual: any,\n    msg: string =\n        'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.') {\n  if (!getNgModuleDef(actual)) {\n    throwError(msg);\n  }\n}\n\nfunction throwError(msg: string): never {\n  // tslint:disable-next-line\n  debugger;  // Left intentionally for better debugger experience.\n  throw new Error(`ASSERTION ERROR: ${msg}`);\n}\n\nexport function assertDomNode(node: any) {\n  assertEqual(node instanceof Node, true, 'The provided value must be an instance of a DOM Node');\n}\n\n\nexport function assertPreviousIsParent(isParent: boolean) {\n  assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n}\n\nexport function assertHasParent(tNode: TNode) {\n  assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n}\n\nexport function assertDataNext(lView: LView, index: number, arr?: any[]) {\n  if (arr == null) arr = lView;\n  assertEqual(\n      arr.length, index, `index ${index} expected to be at the end of arr (length ${arr.length})`);\n}\n\nexport function assertDataInRange(arr: any[], index: number) {\n  assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '../../di/injection_token';\nimport {Injector} from '../../di/injector';\nimport {QueryList} from '../../linker';\nimport {Sanitizer} from '../../sanitization/security';\nimport {Type} from '../../type';\nimport {LContainer} from './container';\nimport {ComponentDef, ComponentQuery, ComponentTemplate, DirectiveDef, DirectiveDefList, HostBindingsFunction, PipeDef, PipeDefList} from './definition';\nimport {I18nUpdateOpCodes, TI18n} from './i18n';\nimport {TElementNode, TNode, TViewNode} from './node';\nimport {PlayerHandler} from './player';\nimport {LQueries} from './query';\nimport {RElement, Renderer3, RendererFactory3} from './renderer';\nimport {StylingContext} from './styling';\n\n\n// Below are constants for LView indices to help us look up LView members\n// without having to remember the specific indices.\n// Uglify will inline these when minifying so there shouldn't be a cost.\nexport const TVIEW = 0;\nexport const FLAGS = 1;\nexport const PARENT = 2;\nexport const NEXT = 3;\nexport const QUERIES = 4;\nexport const HOST = 5;\nexport const HOST_NODE = 6;  // Rename to `T_HOST`?\nexport const BINDING_INDEX = 7;\nexport const CLEANUP = 8;\nexport const CONTEXT = 9;\nexport const INJECTOR = 10;\nexport const RENDERER_FACTORY = 11;\nexport const RENDERER = 12;\nexport const SANITIZER = 13;\nexport const TAIL = 14;\nexport const CONTAINER_INDEX = 15;\nexport const CONTENT_QUERIES = 16;\nexport const DECLARATION_VIEW = 17;\n/** Size of LView's header. Necessary to adjust for it when setting slots.  */\nexport const HEADER_OFFSET = 18;\n\n\n// This interface replaces the real LView interface if it is an arg or a\n// return value of a public instruction. This ensures we don't need to expose\n// the actual interface, which should be kept private.\nexport interface OpaqueViewState {\n  '__brand__': 'Brand for OpaqueViewState that nothing will match';\n}\n\n\n/**\n * `LView` stores all of the information needed to process the instructions as\n * they are invoked from the template. Each embedded view and component view has its\n * own `LView`. When processing a particular view, we set the `viewData` to that\n * `LView`. When that view is done processing, the `viewData` is set back to\n * whatever the original `viewData` was before (the parent `LView`).\n *\n * Keeping separate state for each view facilities view insertion / deletion, so we\n * don't have to edit the data array based on which views are present.\n */\nexport interface LView extends Array<any> {\n  /**\n   * The static data for this view. We need a reference to this so we can easily walk up the\n   * node tree in DI and get the TView.data array associated with a node (where the\n   * directive defs are stored).\n   */\n  readonly[TVIEW]: TView;\n\n  /** Flags for this view. See LViewFlags for more info. */\n  [FLAGS]: LViewFlags;\n\n  /**\n   * The parent view is needed when we exit the view and must restore the previous\n   * `LView`. Without this, the render method would have to keep a stack of\n   * views as it is recursively rendering templates.\n   *\n   * This is the \"insertion\" view for embedded views. This allows us to properly\n   * destroy embedded views.\n   */\n  [PARENT]: LView|null;\n\n  /**\n   *\n   * The next sibling LView or LContainer.\n   *\n   * Allows us to propagate between sibling view states that aren't in the same\n   * container. Embedded views already have a node.next, but it is only set for\n   * views in the same container. We need a way to link component views and views\n   * across containers as well.\n   */\n  [NEXT]: LView|LContainer|null;\n\n  /** Queries active for this view - nodes from a view are reported to those queries. */\n  [QUERIES]: LQueries|null;\n\n  /**\n   * The host node for this LView instance, if this is a component view.\n   *\n   * If this is an embedded view, HOST will be null.\n   */\n  [HOST]: RElement|StylingContext|null;\n\n  /**\n   * Pointer to the `TViewNode` or `TElementNode` which represents the root of the view.\n   *\n   * If `TViewNode`, this is an embedded view of a container. We need this to be able to\n   * efficiently find the `LViewNode` when inserting the view into an anchor.\n   *\n   * If `TElementNode`, this is the LView of a component.\n   *\n   * If null, this is the root view of an application (root component is in this view).\n   */\n  [HOST_NODE]: TViewNode|TElementNode|null;\n\n  /**\n   * The binding index we should access next.\n   *\n   * This is stored so that bindings can continue where they left off\n   * if a view is left midway through processing bindings (e.g. if there is\n   * a setter that creates an embedded view, like in ngIf).\n   */\n  [BINDING_INDEX]: number;\n\n  /**\n   * When a view is destroyed, listeners need to be released and outputs need to be\n   * unsubscribed. This context array stores both listener functions wrapped with\n   * their context and output subscription instances for a particular view.\n   *\n   * These change per LView instance, so they cannot be stored on TView. Instead,\n   * TView.cleanup saves an index to the necessary context in this array.\n   */\n  // TODO: flatten into LView[]\n  [CLEANUP]: any[]|null;\n\n  /**\n   * - For dynamic views, this is the context with which to render the template (e.g.\n   *   `NgForContext`), or `{}` if not defined explicitly.\n   * - For root view of the root component the context contains change detection data.\n   * - For non-root components, the context is the component instance,\n   * - For inline views, the context is null.\n   */\n  [CONTEXT]: {}|RootContext|null;\n\n  /** An optional Module Injector to be used as fall back after Element Injectors are consulted. */\n  readonly[INJECTOR]: Injector|null;\n\n  /** Renderer to be used for this view. */\n  [RENDERER_FACTORY]: RendererFactory3;\n\n  /** Renderer to be used for this view. */\n  [RENDERER]: Renderer3;\n\n  /** An optional custom sanitizer. */\n  [SANITIZER]: Sanitizer|null;\n\n  /**\n   * The last LView or LContainer beneath this LView in the hierarchy.\n   *\n   * The tail allows us to quickly add a new state to the end of the view list\n   * without having to propagate starting from the first child.\n   */\n  [TAIL]: LView|LContainer|null;\n\n  /**\n   * The index of the parent container's host node. Applicable only to embedded views that\n   * have been inserted dynamically. Will be -1 for component views and inline views.\n   *\n   * This is necessary to jump from dynamically created embedded views to their parent\n   * containers because their parent cannot be stored on the TViewNode (views may be inserted\n   * in multiple containers, so the parent cannot be shared between view instances).\n   */\n  [CONTAINER_INDEX]: number;\n\n  /**\n   * Stores QueryLists associated with content queries of a directive. This data structure is\n   * filled-in as part of a directive creation process and is later used to retrieve a QueryList to\n   * be refreshed.\n   */\n  [CONTENT_QUERIES]: QueryList<any>[]|null;\n\n  /**\n   * View where this view's template was declared.\n   *\n   * Only applicable for dynamically created views. Will be null for inline/component views.\n   *\n   * The template for a dynamically created view may be declared in a different view than\n   * it is inserted. We already track the \"insertion view\" (view where the template was\n   * inserted) in LView[PARENT], but we also need access to the \"declaration view\"\n   * (view where the template was declared). Otherwise, we wouldn't be able to call the\n   * view's template function with the proper contexts. Context should be inherited from\n   * the declaration view tree, not the insertion view tree.\n   *\n   * Example (AppComponent template):\n   *\n   * <ng-template #foo></ng-template>       <-- declared here -->\n   * <some-comp [tpl]=\"foo\"></some-comp>    <-- inserted inside this component -->\n   *\n   * The <ng-template> above is declared in the AppComponent template, but it will be passed into\n   * SomeComp and inserted there. In this case, the declaration view would be the AppComponent,\n   * but the insertion view would be SomeComp. When we are removing views, we would want to\n   * traverse through the insertion view to clean up listeners. When we are calling the\n   * template function during change detection, we need the declaration view to get inherited\n   * context.\n   */\n  [DECLARATION_VIEW]: LView|null;\n}\n\n/** Flags associated with an LView (saved in LView[FLAGS]) */\nexport const enum LViewFlags {\n  /**\n   * Whether or not the view is in creationMode.\n   *\n   * This must be stored in the view rather than using `data` as a marker so that\n   * we can properly support embedded views. Otherwise, when exiting a child view\n   * back into the parent view, `data` will be defined and `creationMode` will be\n   * improperly reported as false.\n   */\n  CreationMode = 0b000000001,\n\n  /**\n   * Whether or not this LView instance is on its first processing pass.\n   *\n   * An LView instance is considered to be on its \"first pass\" until it\n   * has completed one creation mode run and one update mode run. At this\n   * time, the flag is turned off.\n   */\n  FirstLViewPass = 0b000000010,\n\n  /** Whether this view has default change detection strategy (checks always) or onPush */\n  CheckAlways = 0b000000100,\n\n  /** Whether or not this view is currently dirty (needing check) */\n  Dirty = 0b000001000,\n\n  /** Whether or not this view is currently attached to change detection tree. */\n  Attached = 0b000010000,\n\n  /**\n   *  Whether or not the init hooks have run.\n   *\n   * If on, the init hooks haven't yet been run and should be executed by the first component that\n   * runs OR the first cR() instruction that runs (so inits are run for the top level view before\n   * any embedded views).\n   */\n  RunInit = 0b000100000,\n\n  /** Whether or not this view is destroyed. */\n  Destroyed = 0b001000000,\n\n  /** Whether or not this view is the root view */\n  IsRoot = 0b010000000,\n}\n\n/**\n * The static data for an LView (shared between all templates of a\n * given type).\n *\n * Stored on the template function as ngPrivateData.\n */\nexport interface TView {\n  /**\n   * ID for inline views to determine whether a view is the same as the previous view\n   * in a certain position. If it's not, we know the new view needs to be inserted\n   * and the one that exists needs to be removed (e.g. if/else statements)\n   *\n   * If this is -1, then this is a component view or a dynamically created view.\n   */\n  readonly id: number;\n\n  /**\n   * This is a blueprint used to generate LView instances for this TView. Copying this\n   * blueprint is faster than creating a new LView from scratch.\n   */\n  blueprint: LView;\n\n  /**\n   * The template function used to refresh the view of dynamically created views\n   * and components. Will be null for inline views.\n   */\n  template: ComponentTemplate<{}>|null;\n\n  /**\n   * A function containing query-related instructions.\n   */\n  viewQuery: ComponentQuery<{}>|null;\n\n  /**\n   * Pointer to the `TNode` that represents the root of the view.\n   *\n   * If this is a `TViewNode` for an `LViewNode`, this is an embedded view of a container.\n   * We need this pointer to be able to efficiently find this node when inserting the view\n   * into an anchor.\n   *\n   * If this is a `TElementNode`, this is the view of a root component. It has exactly one\n   * root TNode.\n   *\n   * If this is null, this is the view of a component that is not at root. We do not store\n   * the host TNodes for child component views because they can potentially have several\n   * different host TNodes, depending on where the component is being used. These host\n   * TNodes cannot be shared (due to different indices, etc).\n   */\n  node: TViewNode|TElementNode|null;\n\n  /** Whether or not this template has been processed. */\n  firstTemplatePass: boolean;\n\n  /** Static data equivalent of LView.data[]. Contains TNodes, PipeDefInternal or TI18n. */\n  data: TData;\n\n  /**\n   * The binding start index is the index at which the data array\n   * starts to store bindings only. Saving this value ensures that we\n   * will begin reading bindings at the correct point in the array when\n   * we are in update mode.\n   */\n  bindingStartIndex: number;\n\n  /**\n   * The index where the \"expando\" section of `LView` begins. The expando\n   * section contains injectors, directive instances, and host binding values.\n   * Unlike the \"consts\" and \"vars\" sections of `LView`, the length of this\n   * section cannot be calculated at compile-time because directives are matched\n   * at runtime to preserve locality.\n   *\n   * We store this start index so we know where to start checking host bindings\n   * in `setHostBindings`.\n   */\n  expandoStartIndex: number;\n\n  /**\n   * Index of the host node of the first LView or LContainer beneath this LView in\n   * the hierarchy.\n   *\n   * Necessary to store this so views can traverse through their nested views\n   * to remove listeners and call onDestroy callbacks.\n   *\n   * For embedded views, we store the index of an LContainer's host rather than the first\n   * LView to avoid managing splicing when views are added/removed.\n   */\n  childIndex: number;\n\n  /**\n   * A reference to the first child node located in the view.\n   */\n  firstChild: TNode|null;\n\n  /**\n   * Set of instructions used to process host bindings efficiently.\n   *\n   * See VIEW_DATA.md for more information.\n   */\n  expandoInstructions: (number|HostBindingsFunction<any>|null)[]|null;\n\n  /**\n   * Full registry of directives and components that may be found in this view.\n   *\n   * It's necessary to keep a copy of the full def list on the TView so it's possible\n   * to render template functions without a host component.\n   */\n  directiveRegistry: DirectiveDefList|null;\n\n  /**\n   * Full registry of pipes that may be found in this view.\n   *\n   * The property is either an array of `PipeDefs`s or a function which returns the array of\n   * `PipeDefs`s. The function is necessary to be able to support forward declarations.\n   *\n   * It's necessary to keep a copy of the full def list on the TView so it's possible\n   * to render template functions without a host component.\n   */\n  pipeRegistry: PipeDefList|null;\n\n  /**\n   * Array of ngOnInit and ngDoCheck hooks that should be executed for this view in\n   * creation mode.\n   *\n   * Even indices: Directive index\n   * Odd indices: Hook function\n   */\n  initHooks: HookData|null;\n\n  /**\n   * Array of ngDoCheck hooks that should be executed for this view in update mode.\n   *\n   * Even indices: Directive index\n   * Odd indices: Hook function\n   */\n  checkHooks: HookData|null;\n\n  /**\n   * Array of ngAfterContentInit and ngAfterContentChecked hooks that should be executed\n   * for this view in creation mode.\n   *\n   * Even indices: Directive index\n   * Odd indices: Hook function\n   */\n  contentHooks: HookData|null;\n\n  /**\n   * Array of ngAfterContentChecked hooks that should be executed for this view in update\n   * mode.\n   *\n   * Even indices: Directive index\n   * Odd indices: Hook function\n   */\n  contentCheckHooks: HookData|null;\n\n  /**\n   * Array of ngAfterViewInit and ngAfterViewChecked hooks that should be executed for\n   * this view in creation mode.\n   *\n   * Even indices: Directive index\n   * Odd indices: Hook function\n   */\n  viewHooks: HookData|null;\n\n  /**\n   * Array of ngAfterViewChecked hooks that should be executed for this view in\n   * update mode.\n   *\n   * Even indices: Directive index\n   * Odd indices: Hook function\n   */\n  viewCheckHooks: HookData|null;\n\n  /**\n   * Array of ngOnDestroy hooks that should be executed when this view is destroyed.\n   *\n   * Even indices: Directive index\n   * Odd indices: Hook function\n   */\n  destroyHooks: HookData|null;\n\n  /**\n   * Array of pipe ngOnDestroy hooks that should be executed when this view is destroyed.\n   *\n   * Even indices: Index of pipe in data\n   * Odd indices: Hook function\n   *\n   * These must be stored separately from directive destroy hooks because their contexts\n   * are stored in data.\n   */\n  pipeDestroyHooks: HookData|null;\n\n  /**\n   * When a view is destroyed, listeners need to be released and outputs need to be\n   * unsubscribed. This cleanup array stores both listener data (in chunks of 4)\n   * and output data (in chunks of 2) for a particular view. Combining the arrays\n   * saves on memory (70 bytes per array) and on a few bytes of code size (for two\n   * separate for loops).\n   *\n   * If it's a native DOM listener or output subscription being stored:\n   * 1st index is: event name  `name = tView.cleanup[i+0]`\n   * 2nd index is: index of native element `element = lView[tView.cleanup[i+1]]`\n   * 3rd index is: index of listener function `listener = lView[CLEANUP][tView.cleanup[i+2]]`\n   * 4th index is: `useCaptureOrIndx = tView.cleanup[i+3]`\n   *    `typeof useCaptureOrIndx == 'boolean' : useCapture boolean\n   *    `typeof useCaptureOrIndx == 'number':\n   *         `useCaptureOrIndx >= 0` `removeListener = LView[CLEANUP][useCaptureOrIndx]`\n   *         `useCaptureOrIndx <  0` `subscription = LView[CLEANUP][-useCaptureOrIndx]`\n   *\n   * If it's a renderer2 style listener or ViewRef destroy hook being stored:\n   * 1st index is: index of the cleanup function in LView.cleanupInstances[]\n   * 2nd index is: `null`\n   *               `lView[CLEANUP][tView.cleanup[i+0]]()`\n   *\n   * If it's an output subscription or query list destroy hook:\n   * 1st index is: output unsubscribe function / query list destroy function\n   * 2nd index is: index of function context in LView.cleanupInstances[]\n   *               `tView.cleanup[i+0].call(lView[CLEANUP][tView.cleanup[i+1]])`\n   */\n  cleanup: any[]|null;\n\n  /**\n   * A list of element indices for child components that will need to be\n   * refreshed when the current view has finished its check. These indices have\n   * already been adjusted for the HEADER_OFFSET.\n   *\n   */\n  components: number[]|null;\n\n  /**\n   * A list of indices for child directives that have content queries.\n   *\n   * Even indices: Directive indices\n   * Odd indices: Starting index of content queries (stored in CONTENT_QUERIES) for this directive\n   */\n  contentQueries: number[]|null;\n}\n\nexport const enum RootContextFlags {Empty = 0b00, DetectChanges = 0b01, FlushPlayers = 0b10}\n\n\n/**\n * RootContext contains information which is shared for all components which\n * were bootstrapped with {@link renderComponent}.\n */\nexport interface RootContext {\n  /**\n   * A function used for scheduling change detection in the future. Usually\n   * this is `requestAnimationFrame`.\n   */\n  scheduler: (workFn: () => void) => void;\n\n  /**\n   * A promise which is resolved when all components are considered clean (not dirty).\n   *\n   * This promise is overwritten every time a first call to {@link markDirty} is invoked.\n   */\n  clean: Promise<null>;\n\n  /**\n   * RootComponents - The components that were instantiated by the call to\n   * {@link renderComponent}.\n   */\n  components: {}[];\n\n  /**\n   * The player flushing handler to kick off all animations\n   */\n  playerHandler: PlayerHandler|null;\n\n  /**\n   * What render-related operations to run once a scheduler has been set\n   */\n  flags: RootContextFlags;\n}\n\n/**\n * Array of hooks that should be executed for a view and their directive indices.\n *\n * Even indices: Directive index\n * Odd indices: Hook function\n */\nexport type HookData = (number | (() => void))[];\n\n/**\n * Static data that corresponds to the instance-specific data array on an LView.\n *\n * Each node's static data is stored in tData at the same index that it's stored\n * in the data array.  Any nodes that do not have static data store a null value in\n * tData to avoid a sparse array.\n *\n * Each pipe's definition is stored here at the same index as its pipe instance in\n * the data array.\n *\n * Injector bloom filters are also stored here.\n */\nexport type TData =\n    (TNode | PipeDef<any>| DirectiveDef<any>| ComponentDef<any>| number | Type<any>|\n     InjectionToken<any>| TI18n | I18nUpdateOpCodes | null)[];\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\nexport const unusedValueExportToPlacateAjd = 1;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LQueries} from './query';\nimport {RComment, RElement} from './renderer';\nimport {StylingContext} from './styling';\nimport {HOST, LView, NEXT, PARENT, QUERIES} from './view';\n\n\n/**\n * Below are constants for LContainer indices to help us look up LContainer members\n * without having to remember the specific indices.\n * Uglify will inline these when minifying so there shouldn't be a cost.\n */\nexport const ACTIVE_INDEX = 0;\nexport const VIEWS = 1;\n// PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n// As we already have these constants in LView, we don't need to re-create them.\nexport const NATIVE = 6;\nexport const RENDER_PARENT = 7;\n// Because interfaces in TS/JS cannot be instanceof-checked this means that we\n// need to rely on predictable characteristics of data-structures to check if they\n// are what we expect for them to be. The `LContainer` interface code below has a\n// fixed length and the constant value below references that. Using the length value\n// below we can predictably gaurantee that we are dealing with an `LContainer` array.\n// This value MUST be kept up to date with the length of the `LContainer` array\n// interface below so that runtime type checking can work.\nexport const LCONTAINER_LENGTH = 8;\n\n/**\n * The state associated with a container.\n *\n * This is an array so that its structure is closer to LView. This helps\n * when traversing the view tree (which is a mix of containers and component\n * views), so we can jump to viewOrContainer[NEXT] in the same way regardless\n * of type.\n */\nexport interface LContainer extends Array<any> {\n  /**\n   * The next active index in the views array to read or write to. This helps us\n   * keep track of where we are in the views array.\n   * In the case the LContainer is created for a ViewContainerRef,\n   * it is set to null to identify this scenario, as indices are \"absolute\" in that case,\n   * i.e. provided directly by the user of the ViewContainerRef API.\n   */\n  [ACTIVE_INDEX]: number;\n\n  /**\n   * A list of the container's currently active child views. Views will be inserted\n   * here as they are added and spliced from here when they are removed. We need\n   * to keep a record of current views so we know which views are already in the DOM\n   * (and don't need to be re-added) and so we can remove views from the DOM when they\n   * are no longer required.\n   */\n  [VIEWS]: LView[];\n\n  /**\n   * Access to the parent view is necessary so we can propagate back\n   * up from inside a container to parent[NEXT].\n   */\n  [PARENT]: LView|null;\n\n  /**\n   * This allows us to jump from a container to a sibling container or component\n   * view with the same parent, so we can remove listeners efficiently.\n   */\n  [NEXT]: LView|LContainer|null;\n\n  /**\n   * Queries active for this container - all the views inserted to / removed from\n   * this container are reported to queries referenced here.\n   */\n  [QUERIES]: LQueries|null;\n\n  /**\n   * The host element of this LContainer.\n   *\n   * The host could be an LView if this container is on a component node.\n   * In that case, the component LView is its HOST.\n   *\n   * It could also be a styling context if this is a node with a style/class\n   * binding.\n   */\n  [HOST]: RElement|RComment|StylingContext|LView;\n\n  /** The comment element that serves as an anchor for this LContainer. */\n  [NATIVE]: RComment;\n\n  /**\n   * Parent Element which will contain the location where all of the views will be\n   * inserted into to.\n   *\n   * If `renderParent` is `null` it is headless. This means that it is contained\n   * in another view which in turn is contained in another container and\n   * therefore it does not yet have its own parent.\n   *\n   * If `renderParent` is not `null` then it may be:\n   * - same as `tContainerNode.parent` in which case it is just a normal container.\n   * - different from `tContainerNode.parent` in which case it has been re-projected.\n   *   In other words `tContainerNode.parent` is logical parent where as\n   *   `tContainerNode.projectedParent` is render parent.\n   *\n   * When views are inserted into `LContainer` then `renderParent` is:\n   * - `null`, we are in a view, keep going up a hierarchy until actual\n   *   `renderParent` is found.\n   * - not `null`, then use the `projectedParent.native` as the `RElement` to insert\n   * views into.\n   */\n  [RENDER_PARENT]: RElement|null;\n}\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\nexport const unusedValueExportToPlacateAjd = 1;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {RElement} from './renderer';\nimport {LView} from './view';\n\n/**\n * This property will be monkey-patched on elements, components and directives\n */\nexport const MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n/**\n * The internal view context which is specific to a given DOM element, directive or\n * component instance. Each value in here (besides the LView and element node details)\n * can be present, null or undefined. If undefined then it implies the value has not been\n * looked up yet, otherwise, if null, then a lookup was executed and nothing was found.\n *\n * Each value will get filled when the respective value is examined within the getContext\n * function. The component, element and each directive instance will share the same instance\n * of the context.\n */\nexport interface LContext {\n  /**\n   * The component's parent view data.\n   */\n  lView: LView;\n\n  /**\n   * The index instance of the node.\n   */\n  nodeIndex: number;\n\n  /**\n   * The instance of the DOM node that is attached to the lNode.\n   */\n  native: RElement;\n\n  /**\n   * The instance of the Component node.\n   */\n  component: {}|null|undefined;\n\n  /**\n   * The list of active directives that exist on this element.\n   */\n  directives: any[]|null|undefined;\n\n  /**\n   * The map of local references (local reference name => element or directive instance) that exist\n   * on this element.\n   */\n  localRefs: {[key: string]: any}|null|undefined;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '../../di/injection_token';\nimport {InjectFlags} from '../../di/injector_compatibility';\nimport {Type} from '../../type';\nimport {TElementNode} from './node';\nimport {LView, TData} from './view';\n\nexport const TNODE = 8;\nexport const PARENT_INJECTOR = 8;\nexport const INJECTOR_BLOOM_PARENT_SIZE = 9;\n\n/**\n * Represents a relative location of parent injector.\n *\n * The interfaces encodes number of parents `LView`s to traverse and index in the `LView`\n * pointing to the parent injector.\n */\nexport interface RelativeInjectorLocation { __brand__: 'RelativeInjectorLocationFlags'; }\n\nexport const enum RelativeInjectorLocationFlags {\n  InjectorIndexMask = 0b111111111111111,\n  ViewOffsetShift = 16,\n  NO_PARENT = -1,\n}\n\nexport const NO_PARENT_INJECTOR: RelativeInjectorLocation = -1 as any;\n\n/**\n * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n * `TView.data`. This allows us to store information about the current node's tokens (which\n * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n * shared, so they live in `LView`).\n *\n * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n * determines whether a directive is available on the associated node or not. This prevents us\n * from searching the directives array at this level unless it's probable the directive is in it.\n *\n * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n *\n * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n * will differ based on where it is flattened into the main array, so it's not possible to know\n * the indices ahead of time and save their types here. The interfaces are still included here\n * for documentation purposes.\n *\n * export interface LInjector extends Array<any> {\n *\n *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n *    [0]: number;\n *\n *    // Cumulative bloom for directive IDs 32-63\n *    [1]: number;\n *\n *    // Cumulative bloom for directive IDs 64-95\n *    [2]: number;\n *\n *    // Cumulative bloom for directive IDs 96-127\n *    [3]: number;\n *\n *    // Cumulative bloom for directive IDs 128-159\n *    [4]: number;\n *\n *    // Cumulative bloom for directive IDs 160 - 191\n *    [5]: number;\n *\n *    // Cumulative bloom for directive IDs 192 - 223\n *    [6]: number;\n *\n *    // Cumulative bloom for directive IDs 224 - 255\n *    [7]: number;\n *\n *    // We need to store a reference to the injector's parent so DI can keep looking up\n *    // the injector tree until it finds the dependency it's looking for.\n *    [PARENT_INJECTOR]: number;\n * }\n *\n * export interface TInjector extends Array<any> {\n *\n *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n *    [0]: number;\n *\n *    // Shared node bloom for directive IDs 32-63\n *    [1]: number;\n *\n *    // Shared node bloom for directive IDs 64-95\n *    [2]: number;\n *\n *    // Shared node bloom for directive IDs 96-127\n *    [3]: number;\n *\n *    // Shared node bloom for directive IDs 128-159\n *    [4]: number;\n *\n *    // Shared node bloom for directive IDs 160 - 191\n *    [5]: number;\n *\n *    // Shared node bloom for directive IDs 192 - 223\n *    [6]: number;\n *\n *    // Shared node bloom for directive IDs 224 - 255\n *    [7]: number;\n *\n *    // Necessary to find directive indices for a particular node.\n *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n *  }\n */\n\n/**\n* Factory for creating instances of injectors in the NodeInjector.\n*\n* This factory is complicated by the fact that it can resolve `multi` factories as well.\n*\n* NOTE: Some of the fields are optional which means that this class has two hidden classes.\n* - One without `multi` support (most common)\n* - One with `multi` values, (rare).\n*\n* Since VMs can cache up to 4 inline hidden classes this is OK.\n*\n* - Single factory: Only `resolving` and `factory` is defined.\n* - `providers` factory: `componentProviders` is a number and `index = -1`.\n* - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n*/\nexport class NodeInjectorFactory {\n  /**\n   * The inject implementation to be activated when using the factory.\n   */\n  injectImpl: null|(<T>(token: Type<T>|InjectionToken<T>, flags: InjectFlags) => T);\n\n  /**\n   * Marker set to true during factory invocation to see if we get into recursive loop.\n   * Recursive loop causes an error to be displayed.\n   */\n  resolving = false;\n\n  /**\n   * Marks that the token can see other Tokens declared in `viewProviders` on the same node.\n   */\n  canSeeViewProviders: boolean;\n\n  /**\n   * An array of factories to use in case of `multi` provider.\n   */\n  multi?: Array<() => any>;\n\n  /**\n   * Number of `multi`-providers which belong to the component.\n   *\n   * This is needed because when multiple components and directives declare the `multi` provider\n   * they have to be concatenated in the correct order.\n   *\n   * Example:\n   *\n   * If we have a component and directive active an a single element as declared here\n   * ```\n   * component:\n   *   provides: [ {provide: String, useValue: 'component', multi: true} ],\n   *   viewProvides: [ {provide: String, useValue: 'componentView', multi: true} ],\n   *\n   * directive:\n   *   provides: [ {provide: String, useValue: 'directive', multi: true} ],\n   * ```\n   *\n   * Then the expected results are:\n   *\n   * ```\n   * providers: ['component', 'directive']\n   * viewProviders: ['component', 'componentView', 'directive']\n   * ```\n   *\n   * The way to think about it is that the `viewProviders` have been inserted after the component\n   * but before the directives, which is why we need to know how many `multi`s have been declared by\n   * the component.\n   */\n  componentProviders?: number;\n\n  /**\n   * Current index of the Factory in the `data`. Needed for `viewProviders` and `providers` merging.\n   * See `providerFactory`.\n   */\n  index?: number;\n\n  /**\n   * Because the same `multi` provider can be declared in `provides` and `viewProvides` it is\n   * possible for `viewProvides` to shadow the `provides`. For this reason we store the\n   * `provideFactory` of the `providers` so that `providers` can be extended with `viewProviders`.\n   *\n   * Example:\n   *\n   * Given:\n   * ```\n   * provides: [ {provide: String, useValue: 'all', multi: true} ],\n   * viewProvides: [ {provide: String, useValue: 'viewOnly', multi: true} ],\n   * ```\n   *\n   * We have to return `['all']` in case of content injection, but `['all', 'viewOnly']` in case\n   * of view injection. We further have to make sure that the shared instances (in our case\n   * `all`) are the exact same instance in both the content as well as the view injection. (We\n   * have to make sure that we don't double instantiate.) For this reason the `viewProvides`\n   * `Factory` has a pointer to the shadowed `provides` factory so that it can instantiate the\n   * `providers` (`['all']`) and then extend it with `viewProviders` (`['all'] + ['viewOnly'] =\n   * ['all', 'viewOnly']`).\n   */\n  providerFactory?: NodeInjectorFactory|null;\n\n\n  constructor(\n      /**\n       * Factory to invoke in order to create a new instance.\n       */\n      public factory:\n          (this: NodeInjectorFactory, _: null,\n           /**\n            * array where injectables tokens are stored. This is used in\n            * case of an error reporting to produce friendlier errors.\n            */\n           tData: TData,\n           /**\n            * array where existing instances of injectables are stored. This is used in case\n            * of multi shadow is needed. See `multi` field documentation.\n            */\n           lView: LView,\n           /**\n            * The TNode of the same element injector.\n            */\n           tNode: TElementNode) => any,\n      /**\n       * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n       */\n      isViewProvider: boolean,\n      injectImplementation: null|(<T>(token: Type<T>|InjectionToken<T>, flags: InjectFlags) => T)) {\n    this.canSeeViewProviders = isViewProvider;\n    this.injectImpl = injectImplementation;\n  }\n}\n\nconst FactoryPrototype = NodeInjectorFactory.prototype;\nexport function isFactory(obj: any): obj is NodeInjectorFactory {\n  // See: https://jsperf.com/instanceof-vs-getprototypeof\n  return obj != null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n}\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\nexport const unusedValueExportToPlacateAjd = 1;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {global} from '../util';\n\nimport {assertDataInRange, assertDefined, assertGreaterThan, assertLessThan} from './assert';\nimport {ACTIVE_INDEX, LCONTAINER_LENGTH, LContainer} from './interfaces/container';\nimport {LContext, MONKEY_PATCH_KEY_NAME} from './interfaces/context';\nimport {ComponentDef, DirectiveDef} from './interfaces/definition';\nimport {NO_PARENT_INJECTOR, RelativeInjectorLocation, RelativeInjectorLocationFlags} from './interfaces/injector';\nimport {TContainerNode, TElementNode, TNode, TNodeFlags, TNodeType} from './interfaces/node';\nimport {RComment, RElement, RText} from './interfaces/renderer';\nimport {StylingContext} from './interfaces/styling';\nimport {CONTEXT, DECLARATION_VIEW, FLAGS, HEADER_OFFSET, HOST, HOST_NODE, LView, LViewFlags, PARENT, RootContext, TData, TVIEW, TView} from './interfaces/view';\n\n/**\n * Returns whether the values are different from a change detection stand point.\n *\n * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n */\nexport function isDifferent(a: any, b: any): boolean {\n  // NaN is the only value that is not equal to itself so the first\n  // test checks if both a and b are not NaN\n  return !(a !== a && b !== b) && a !== b;\n}\n\nexport function stringify(value: any): string {\n  if (typeof value == 'function') return value.name || value;\n  if (typeof value == 'string') return value;\n  if (value == null) return '';\n  if (typeof value == 'object' && typeof value.type == 'function')\n    return value.type.name || value.type;\n  return '' + value;\n}\n\n/**\n * Flattens an array in non-recursive way. Input arrays are not modified.\n */\nexport function flatten(list: any[]): any[] {\n  const result: any[] = [];\n  let i = 0;\n\n  while (i < list.length) {\n    const item = list[i];\n    if (Array.isArray(item)) {\n      if (item.length > 0) {\n        list = item.concat(list.slice(i + 1));\n        i = 0;\n      } else {\n        i++;\n      }\n    } else {\n      result.push(item);\n      i++;\n    }\n  }\n\n  return result;\n}\n\n/** Retrieves a value from any `LView` or `TData`. */\nexport function loadInternal<T>(view: LView | TData, index: number): T {\n  ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n  return view[index + HEADER_OFFSET];\n}\n\n/**\n * Takes the value of a slot in `LView` and returns the element node.\n *\n * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n * it might be wrapped in a styling context. Or if that node has a directive that injects\n * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n * it will be wrapped in LView. It could even have all three, so we keep looping\n * until we find something that isn't an array.\n *\n * @param value The initial value in `LView`\n */\nexport function readElementValue(value: RElement | StylingContext | LContainer | LView): RElement {\n  while (Array.isArray(value)) {\n    value = value[HOST] as any;\n  }\n  return value;\n}\n\n/**\n * Retrieves an element value from the provided `viewData`, by unwrapping\n * from any containers, component views, or style contexts.\n */\nexport function getNativeByIndex(index: number, lView: LView): RElement {\n  return readElementValue(lView[index + HEADER_OFFSET]);\n}\n\nexport function getNativeByTNode(tNode: TNode, hostView: LView): RElement|RText|RComment {\n  return readElementValue(hostView[tNode.index]);\n}\n\nexport function getTNode(index: number, view: LView): TNode {\n  ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n  ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n  return view[TVIEW].data[index + HEADER_OFFSET] as TNode;\n}\n\nexport function getComponentViewByIndex(nodeIndex: number, hostView: LView): LView {\n  // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n  const slotValue = hostView[nodeIndex];\n  return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n}\n\nexport function isContentQueryHost(tNode: TNode): boolean {\n  return (tNode.flags & TNodeFlags.hasContentQuery) !== 0;\n}\n\nexport function isComponent(tNode: TNode): boolean {\n  return (tNode.flags & TNodeFlags.isComponent) === TNodeFlags.isComponent;\n}\n\nexport function isComponentDef<T>(def: DirectiveDef<T>): def is ComponentDef<T> {\n  return (def as ComponentDef<T>).template !== null;\n}\n\nexport function isLContainer(value: RElement | RComment | LContainer | StylingContext): boolean {\n  // Styling contexts are also arrays, but their first index contains an element node\n  return Array.isArray(value) && value.length === LCONTAINER_LENGTH;\n}\n\nexport function isRootView(target: LView): boolean {\n  return (target[FLAGS] & LViewFlags.IsRoot) !== 0;\n}\n\n/**\n * Retrieve the root view from any component by walking the parent `LView` until\n * reaching the root `LView`.\n *\n * @param component any component\n */\nexport function getRootView(target: LView | {}): LView {\n  ngDevMode && assertDefined(target, 'component');\n  let lView = Array.isArray(target) ? (target as LView) : readPatchedLView(target) !;\n  while (lView && !(lView[FLAGS] & LViewFlags.IsRoot)) {\n    lView = lView[PARENT] !;\n  }\n  return lView;\n}\n\nexport function getRootContext(viewOrComponent: LView | {}): RootContext {\n  const rootView = getRootView(viewOrComponent);\n  ngDevMode &&\n      assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n  return rootView[CONTEXT] as RootContext;\n}\n\n/**\n * Returns the monkey-patch value data present on the target (which could be\n * a component, directive or a DOM node).\n */\nexport function readPatchedData(target: any): LView|LContext|null {\n  ngDevMode && assertDefined(target, 'Target expected');\n  return target[MONKEY_PATCH_KEY_NAME];\n}\n\nexport function readPatchedLView(target: any): LView|null {\n  const value = readPatchedData(target);\n  if (value) {\n    return Array.isArray(value) ? value : (value as LContext).lView;\n  }\n  return null;\n}\n\nexport function hasParentInjector(parentLocation: RelativeInjectorLocation): boolean {\n  return parentLocation !== NO_PARENT_INJECTOR;\n}\n\nexport function getParentInjectorIndex(parentLocation: RelativeInjectorLocation): number {\n  return (parentLocation as any as number) & RelativeInjectorLocationFlags.InjectorIndexMask;\n}\n\nexport function getParentInjectorViewOffset(parentLocation: RelativeInjectorLocation): number {\n  return (parentLocation as any as number) >> RelativeInjectorLocationFlags.ViewOffsetShift;\n}\n\n/**\n * Unwraps a parent injector location number to find the view offset from the current injector,\n * then walks up the declaration view tree until the view is found that contains the parent\n * injector.\n *\n * @param location The location of the parent injector, which contains the view offset\n * @param startView The LView instance from which to start walking up the view tree\n * @returns The LView instance that contains the parent injector\n */\nexport function getParentInjectorView(location: RelativeInjectorLocation, startView: LView): LView {\n  let viewOffset = getParentInjectorViewOffset(location);\n  let parentView = startView;\n  // For most cases, the parent injector can be found on the host node (e.g. for component\n  // or container), but we must keep the loop here to support the rarer case of deeply nested\n  // <ng-template> tags or inline views, where the parent injector might live many views\n  // above the child injector.\n  while (viewOffset > 0) {\n    parentView = parentView[DECLARATION_VIEW] !;\n    viewOffset--;\n  }\n  return parentView;\n}\n\n/**\n * Unwraps a parent injector location number to find the view offset from the current injector,\n * then walks up the declaration view tree until the TNode of the parent injector is found.\n *\n * @param location The location of the parent injector, which contains the view offset\n * @param startView The LView instance from which to start walking up the view tree\n * @param startTNode The TNode instance of the starting element\n * @returns The TNode of the parent injector\n */\nexport function getParentInjectorTNode(\n    location: RelativeInjectorLocation, startView: LView, startTNode: TNode): TElementNode|\n    TContainerNode|null {\n  if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n    // view offset is 0\n    const injectorIndex = startTNode.parent.injectorIndex;\n    let parentTNode = startTNode.parent;\n    while (parentTNode.parent != null && injectorIndex == parentTNode.injectorIndex) {\n      parentTNode = parentTNode.parent;\n    }\n    return parentTNode;\n  }\n\n  let viewOffset = getParentInjectorViewOffset(location);\n  // view offset is 1\n  let parentView = startView;\n  let parentTNode = startView[HOST_NODE] as TElementNode;\n\n  // view offset is superior to 1\n  while (viewOffset > 1) {\n    parentView = parentView[DECLARATION_VIEW] !;\n    parentTNode = parentView[HOST_NODE] as TElementNode;\n    viewOffset--;\n  }\n  return parentTNode;\n}\n\nexport const defaultScheduler =\n    (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame ||  // browser only\n     setTimeout                                                                // everything else\n     ).bind(global);\n\n/**\n * Equivalent to ES6 spread, add each item to an array.\n *\n * @param items The items to add\n * @param arr The array to which you want to add the items\n */\nexport function addAllToArray(items: any[], arr: any[]) {\n  for (let i = 0; i < items.length; i++) {\n    arr.push(items[i]);\n  }\n}\n\n/**\n * Given a current view, finds the nearest component's host (LElement).\n *\n * @param lView LView for which we want a host element node\n * @returns The host node\n */\nexport function findComponentView(lView: LView): LView {\n  let rootTNode = lView[HOST_NODE];\n\n  while (rootTNode && rootTNode.type === TNodeType.View) {\n    ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n    lView = lView[DECLARATION_VIEW] !;\n    rootTNode = lView[HOST_NODE];\n  }\n\n  return lView;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {global} from '../../util';\nimport {CompilerFacade, ExportedCompilerFacade} from './compiler_facade_interface';\nexport * from './compiler_facade_interface';\n\nexport function getCompilerFacade(): CompilerFacade {\n  const globalNg: ExportedCompilerFacade = global['ng'];\n  if (!globalNg || !globalNg.ÉµcompilerFacade) {\n    throw new Error(\n        `Angular JIT compilation failed: '@angular/compiler' not loaded!\\n` +\n        `  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n` +\n        `  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n` +\n        `  - Alternatively provide the compiler with 'import \"@angular/compiler\";' before bootstrapping.`);\n  }\n  return globalNg.ÉµcompilerFacade;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ClassSansProvider, ConstructorProvider, ConstructorSansProvider, ExistingProvider, ExistingSansProvider, FactoryProvider, FactorySansProvider, StaticClassProvider, StaticClassSansProvider, ValueProvider, ValueSansProvider} from '../di/provider';\nimport {ReflectionCapabilities} from '../reflection/reflection_capabilities';\nimport {Type} from '../type';\nimport {makeDecorator, makeParamDecorator} from '../util/decorators';\nimport {EMPTY_ARRAY} from '../view/util';\n\n\n/**\n * Type of the Inject decorator / constructor function.\n *\n * @publicApi\n */\nexport interface InjectDecorator {\n  /**\n   * A parameter decorator on a dependency parameter of a class constructor\n   * that specifies a custom provider of the dependency.\n   *\n   * Learn more in the [\"Dependency Injection Guide\"](guide/dependency-injection).\n   *\n   * @usageNotes\n   * The following example shows a class constructor that specifies a\n   * custom provider of a dependency using the parameter decorator.\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Inject'}\n   *\n   * When `@Inject()` is not present, the injector uses the type annotation of the\n   * parameter as the provider.\n   *\n   * {@example core/di/ts/metadata_spec.ts region='InjectWithoutDecorator'}\n   */\n  (token: any): any;\n  new (token: any): Inject;\n}\n\n/**\n * Type of the Inject metadata.\n *\n * @publicApi\n */\nexport interface Inject {\n  /**\n   * A [DI token](guide/glossary#di-token) that maps to the dependency to be injected.\n   */\n  token: any;\n}\n\n/**\n * Inject decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const Inject: InjectDecorator = makeParamDecorator('Inject', (token: any) => ({token}));\n\n\n/**\n * Type of the Optional decorator / constructor function.\n *\n * @publicApi\n */\nexport interface OptionalDecorator {\n  /**\n   * A parameter decorator to be used on constructor parameters,\n   * which marks the parameter as being an optional dependency.\n   * The DI framework provides null if the dependency is not found.\n   *\n   * Can be used together with other parameter decorators\n   * that modify how dependency injection operates.\n   *\n   * Learn more in the [\"Dependency Injection Guide\"](guide/dependency-injection).\n   *\n   * @usageNotes\n   *\n   * The following code allows the possibility of a null result:\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Optional'}\n   *\n   */\n  (): any;\n  new (): Optional;\n}\n\n/**\n * Type of the Optional metadata.\n *\n * @publicApi\n */\nexport interface Optional {}\n\n/**\n * Optional decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const Optional: OptionalDecorator = makeParamDecorator('Optional');\n\n/**\n * Type of the Self decorator / constructor function.\n *\n * @publicApi\n */\nexport interface SelfDecorator {\n  /**\n   * A parameter decorator to be used on constructor parameters,\n   * which tells the DI framework to start dependency resolution from the local injector.\n   *\n   * Resolution works upward through the injector hierarchy, so the children\n   * of this class must configure their own providers or be prepared for a null result.\n   *\n   * @usageNotes\n   *\n   * In the following example, the dependency can be resolved\n   * by the local injector when instantiating the class itself, but not\n   * when instantiating a child.\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Self'}\n   *\n   * @see `SkipSelf`\n   * @see `Optional`\n   *\n   */\n  (): any;\n  new (): Self;\n}\n\n/**\n * Type of the Self metadata.\n *\n * @publicApi\n */\nexport interface Self {}\n\n/**\n * Self decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const Self: SelfDecorator = makeParamDecorator('Self');\n\n\n/**\n * Type of the SkipSelf decorator / constructor function.\n *\n * @publicApi\n */\nexport interface SkipSelfDecorator {\n  /**\n   * A parameter decorator to be used on constructor parameters,\n   * which tells the DI framework to start dependency resolution from the parent injector.\n   * Resolution works upward through the injector hierarchy, so the local injector\n   * is not checked for a provider.\n   *\n   * @usageNotes\n   *\n   * In the following example, the dependency can be resolved when\n   * instantiating a child, but not when instantiating the class itself.\n   *\n   * {@example core/di/ts/metadata_spec.ts region='SkipSelf'}\n   *\n   * Learn more in the\n   * [Dependency Injection guide](guide/dependency-injection-in-action#skip).\n   *\n   * @see `Self`\n   * @see `Optional`\n   *\n   */\n  (): any;\n  new (): SkipSelf;\n}\n\n/**\n * Type of the SkipSelf metadata.\n *\n * @publicApi\n */\nexport interface SkipSelf {}\n\n/**\n * SkipSelf decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const SkipSelf: SkipSelfDecorator = makeParamDecorator('SkipSelf');\n\n/**\n * Type of the Host decorator / constructor function.\n *\n * @publicApi\n */\nexport interface HostDecorator {\n  /**\n   * A parameter decorator on a view-provider parameter of a class constructor\n   * that tells the DI framework to resolve the view by checking injectors of child\n   * elements, and stop when reaching the host element of the current component.\n   *\n   * For an extended example, see\n   * [\"Dependency Injection Guide\"](guide/dependency-injection-in-action#optional).\n   *\n   * @usageNotes\n   *\n   * The following shows use with the `@Optional` decorator, and allows for a null result.\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Host'}\n   */\n  (): any;\n  new (): Host;\n}\n\n/**\n * Type of the Host metadata.\n *\n * @publicApi\n */\nexport interface Host {}\n\n/**\n * Host decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const Host: HostDecorator = makeParamDecorator('Host');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\nimport {InjectableDef, getInjectableDef} from './defs';\nimport {InjectionToken} from './injection_token';\nimport {Injector} from './injector';\nimport {Inject, Optional, Self, SkipSelf} from './metadata';\n\n/**\n * Injection flags for DI.\n *\n * @publicApi\n */\nexport enum InjectFlags {\n  // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n\n  Default = 0b0000,\n\n  /**\n   * Specifies that an injector should retrieve a dependency from any injector until reaching the\n   * host element of the current component. (Only used with Element Injector)\n   */\n  Host = 0b0001,\n  /** Don't descend into ancestors of the node requesting injection. */\n  Self = 0b0010,\n  /** Skip the node that is requesting injection. */\n  SkipSelf = 0b0100,\n  /** Inject `defaultValue` instead if token not found. */\n  Optional = 0b1000,\n}\n\n\n\n/**\n * Current injector value used by `inject`.\n * - `undefined`: it is an error to call `inject`\n * - `null`: `inject` can be called but there is no injector (limp-mode).\n * - Injector instance: Use the injector for resolution.\n */\nlet _currentInjector: Injector|undefined|null = undefined;\n\nexport function setCurrentInjector(injector: Injector | null | undefined): Injector|undefined|null {\n  const former = _currentInjector;\n  _currentInjector = injector;\n  return former;\n}\n\n/**\n * Current implementation of inject.\n *\n * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n * way for two reasons:\n *  1. `Injector` should not depend on ivy logic.\n *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n */\nlet _injectImplementation: (<T>(token: Type<T>| InjectionToken<T>, flags: InjectFlags) => T | null)|\n    undefined;\n\n/**\n * Sets the current inject implementation.\n */\nexport function setInjectImplementation(\n    impl: (<T>(token: Type<T>| InjectionToken<T>, flags?: InjectFlags) => T | null) | undefined):\n    (<T>(token: Type<T>| InjectionToken<T>, flags?: InjectFlags) => T | null)|undefined {\n  const previous = _injectImplementation;\n  _injectImplementation = impl;\n  return previous;\n}\n\nexport function injectInjectorOnly<T>(token: Type<T>| InjectionToken<T>): T;\nexport function injectInjectorOnly<T>(token: Type<T>| InjectionToken<T>, flags?: InjectFlags): T|\n    null;\nexport function injectInjectorOnly<T>(\n    token: Type<T>| InjectionToken<T>, flags = InjectFlags.Default): T|null {\n  if (_currentInjector === undefined) {\n    throw new Error(`inject() must be called from an injection context`);\n  } else if (_currentInjector === null) {\n    return injectRootLimpMode(token, undefined, flags);\n  } else {\n    return _currentInjector.get(token, flags & InjectFlags.Optional ? null : undefined, flags);\n  }\n}\n\n/**\n * Injects a token from the currently active injector.\n * Must be used in the context of a factory function such as one defined for an\n * `InjectionToken`. Throws an error if not called from such a context.\n *\n * Within such a factory function, using this function to request injection of a dependency\n * is faster and more type-safe than providing an additional array of dependencies\n * (as has been common with `useFactory` providers).\n *\n * @param token The injection token for the dependency to be injected.\n * @param flags Optional flags that control how injection is executed.\n * The flags correspond to injection strategies that can be specified with\n * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.\n * @returns True if injection is successful, null otherwise.\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n *\n * @publicApi\n */\nexport function inject<T>(token: Type<T>| InjectionToken<T>): T;\nexport function inject<T>(token: Type<T>| InjectionToken<T>, flags?: InjectFlags): T|null;\nexport function inject<T>(token: Type<T>| InjectionToken<T>, flags = InjectFlags.Default): T|null {\n  return (_injectImplementation || injectInjectorOnly)(token, flags);\n}\n\n/**\n * Injects `root` tokens in limp mode.\n *\n * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n * `InjectableDef`.\n */\nexport function injectRootLimpMode<T>(\n    token: Type<T>| InjectionToken<T>, notFoundValue: T | undefined, flags: InjectFlags): T|null {\n  const injectableDef: InjectableDef<T>|null = getInjectableDef(token);\n  if (injectableDef && injectableDef.providedIn == 'root') {\n    return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                                               injectableDef.value;\n  }\n  if (flags & InjectFlags.Optional) return null;\n  if (notFoundValue !== undefined) return notFoundValue;\n  throw new Error(`Injector: NOT_FOUND [${stringify(token)}]`);\n}\n\nexport function injectArgs(types: (Type<any>| InjectionToken<any>| any[])[]): any[] {\n  const args: any[] = [];\n  for (let i = 0; i < types.length; i++) {\n    const arg = types[i];\n    if (Array.isArray(arg)) {\n      if (arg.length === 0) {\n        throw new Error('Arguments array must have arguments.');\n      }\n      let type: Type<any>|undefined = undefined;\n      let flags: InjectFlags = InjectFlags.Default;\n\n      for (let j = 0; j < arg.length; j++) {\n        const meta = arg[j];\n        if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n          flags |= InjectFlags.Optional;\n        } else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n          flags |= InjectFlags.SkipSelf;\n        } else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n          flags |= InjectFlags.Self;\n        } else if (meta instanceof Inject) {\n          type = meta.token;\n        } else {\n          type = meta;\n        }\n      }\n\n      args.push(inject(type !, flags));\n    } else {\n      args.push(inject(arg));\n    }\n  }\n  return args;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {assertDefined, assertEqual} from './assert';\nimport {TNode, TNodeType} from './interfaces/node';\n\nexport function assertNodeType(tNode: TNode, type: TNodeType) {\n  assertDefined(tNode, 'should be called with a TNode');\n  assertEqual(tNode.type, type, `should be a ${typeName(type)}`);\n}\n\nexport function assertNodeOfPossibleTypes(tNode: TNode, ...types: TNodeType[]) {\n  assertDefined(tNode, 'should be called with a TNode');\n  const found = types.some(type => tNode.type === type);\n  assertEqual(\n      found, true,\n      `Should be one of ${types.map(typeName).join(', ')} but got ${typeName(tNode.type)}`);\n}\n\nfunction typeName(type: TNodeType): string {\n  if (type == TNodeType.Projection) return 'Projection';\n  if (type == TNodeType.Container) return 'Container';\n  if (type == TNodeType.View) return 'View';\n  if (type == TNodeType.Element) return 'Element';\n  if (type == TNodeType.ElementContainer) return 'ElementContainer';\n  return '<unknown>';\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {assertEqual} from './assert';\nimport {DirectiveDef} from './interfaces/definition';\nimport {TNode} from './interfaces/node';\nimport {FLAGS, HookData, LView, LViewFlags, TView} from './interfaces/view';\n\n\n\n/**\n * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n * TView.initHooks during directiveCreate.\n *\n * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n * directive index), then saved in the even indices of the initHooks array. The odd indices\n * hold the hook functions themselves.\n *\n * @param index The index of the directive in LView\n * @param hooks The static hooks map on the directive def\n * @param tView The current TView\n */\nexport function queueInitHooks(\n    index: number, onInit: (() => void) | null, doCheck: (() => void) | null, tView: TView): void {\n  ngDevMode &&\n      assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n  if (onInit) {\n    (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n  }\n\n  if (doCheck) {\n    (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n    (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n  }\n}\n\n/**\n * Loops through the directives on a node and queues all their hooks except ngOnInit\n * and ngDoCheck, which are queued separately in directiveCreate.\n */\nexport function queueLifecycleHooks(tView: TView, tNode: TNode): void {\n  if (tView.firstTemplatePass) {\n    // It's necessary to loop through the directives at elementEnd() (rather than processing in\n    // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n    // hooks for projected components and directives must be called *before* their hosts.\n    for (let i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n      const def = tView.data[i] as DirectiveDef<any>;\n      queueContentHooks(def, tView, i);\n      queueViewHooks(def, tView, i);\n      queueDestroyHooks(def, tView, i);\n    }\n  }\n}\n\n/** Queues afterContentInit and afterContentChecked hooks on TView */\nfunction queueContentHooks(def: DirectiveDef<any>, tView: TView, i: number): void {\n  if (def.afterContentInit) {\n    (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n  }\n\n  if (def.afterContentChecked) {\n    (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n    (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n  }\n}\n\n/** Queues afterViewInit and afterViewChecked hooks on TView */\nfunction queueViewHooks(def: DirectiveDef<any>, tView: TView, i: number): void {\n  if (def.afterViewInit) {\n    (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n  }\n\n  if (def.afterViewChecked) {\n    (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n    (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n  }\n}\n\n/** Queues onDestroy hooks on TView */\nfunction queueDestroyHooks(def: DirectiveDef<any>, tView: TView, i: number): void {\n  if (def.onDestroy != null) {\n    (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n  }\n}\n\n/**\n * Calls onInit and doCheck calls if they haven't already been called.\n *\n * @param currentView The current view\n */\nexport function executeInitHooks(\n    currentView: LView, tView: TView, checkNoChangesMode: boolean): void {\n  if (!checkNoChangesMode && currentView[FLAGS] & LViewFlags.RunInit) {\n    executeHooks(currentView, tView.initHooks, tView.checkHooks, checkNoChangesMode);\n    currentView[FLAGS] &= ~LViewFlags.RunInit;\n  }\n}\n\n/**\n * Iterates over afterViewInit and afterViewChecked functions and calls them.\n *\n * @param currentView The current view\n */\nexport function executeHooks(\n    currentView: LView, allHooks: HookData | null, checkHooks: HookData | null,\n    checkNoChangesMode: boolean): void {\n  if (checkNoChangesMode) return;\n\n  const hooksToCall = currentView[FLAGS] & LViewFlags.FirstLViewPass ? allHooks : checkHooks;\n  if (hooksToCall) {\n    callHooks(currentView, hooksToCall);\n  }\n}\n\n/**\n * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n * the first LView pass.\n *\n * @param currentView The current view\n * @param arr The array in which the hooks are found\n */\nexport function callHooks(currentView: any[], arr: HookData): void {\n  for (let i = 0; i < arr.length; i += 2) {\n    (arr[i + 1] as() => void).call(currentView[arr[i] as number]);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {assertDefined} from './assert';\nimport {executeHooks} from './hooks';\nimport {ComponentDef, DirectiveDef} from './interfaces/definition';\nimport {TElementNode, TNode, TNodeFlags, TViewNode} from './interfaces/node';\nimport {LQueries} from './interfaces/query';\nimport {BINDING_INDEX, CONTEXT, DECLARATION_VIEW, FLAGS, HOST_NODE, LView, LViewFlags, OpaqueViewState, QUERIES, TVIEW} from './interfaces/view';\nimport {isContentQueryHost} from './util';\n\n\n\n/**\n * Store the element depth count. This is used to identify the root elements of the template\n * so that we can than attach `LView` to only those elements.\n */\nlet elementDepthCount !: number;\n\nexport function getElementDepthCount() {\n  // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n  return elementDepthCount;\n}\n\nexport function increaseElementDepthCount() {\n  elementDepthCount++;\n}\n\nexport function decreaseElementDepthCount() {\n  elementDepthCount--;\n}\n\nlet currentDirectiveDef: DirectiveDef<any>|ComponentDef<any>|null = null;\n\nexport function getCurrentDirectiveDef(): DirectiveDef<any>|ComponentDef<any>|null {\n  // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n  return currentDirectiveDef;\n}\n\nexport function setCurrentDirectiveDef(def: DirectiveDef<any>| ComponentDef<any>| null): void {\n  currentDirectiveDef = def;\n}\n\n/**\n * Stores whether directives should be matched to elements.\n *\n * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n * directives on children of that element.\n *\n * Example:\n * ```\n * <my-comp my-directive>\n *   Should match component / directive.\n * </my-comp>\n * <div ngNonBindable>\n *   <my-comp my-directive>\n *     Should not match component / directive because we are in ngNonBindable.\n *   </my-comp>\n * </div>\n * ```\n */\nlet bindingsEnabled !: boolean;\n\nexport function getBindingsEnabled(): boolean {\n  // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n  return bindingsEnabled;\n}\n\n\n/**\n * Enables directive matching on elements.\n *\n *  * Example:\n * ```\n * <my-comp my-directive>\n *   Should match component / directive.\n * </my-comp>\n * <div ngNonBindable>\n *   <!-- disabledBindings() -->\n *   <my-comp my-directive>\n *     Should not match component / directive because we are in ngNonBindable.\n *   </my-comp>\n *   <!-- enableBindings() -->\n * </div>\n * ```\n */\nexport function enableBindings(): void {\n  bindingsEnabled = true;\n}\n\n/**\n * Disables directive matching on element.\n *\n *  * Example:\n * ```\n * <my-comp my-directive>\n *   Should match component / directive.\n * </my-comp>\n * <div ngNonBindable>\n *   <!-- disabledBindings() -->\n *   <my-comp my-directive>\n *     Should not match component / directive because we are in ngNonBindable.\n *   </my-comp>\n *   <!-- enableBindings() -->\n * </div>\n * ```\n */\nexport function disableBindings(): void {\n  bindingsEnabled = false;\n}\n\nexport function getLView(): LView {\n  return lView;\n}\n\n/**\n * Restores `contextViewData` to the given OpaqueViewState instance.\n *\n * Used in conjunction with the getCurrentView() instruction to save a snapshot\n * of the current view and restore it when listeners are invoked. This allows\n * walking the declaration view tree in listeners to get vars from parent views.\n *\n * @param viewToRestore The OpaqueViewState instance to restore.\n */\nexport function restoreView(viewToRestore: OpaqueViewState) {\n  contextLView = viewToRestore as any as LView;\n}\n\n/** Used to set the parent property when nodes are created and track query results. */\nlet previousOrParentTNode: TNode;\n\nexport function getPreviousOrParentTNode(): TNode {\n  // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n  return previousOrParentTNode;\n}\n\nexport function setPreviousOrParentTNode(tNode: TNode) {\n  previousOrParentTNode = tNode;\n}\n\nexport function setTNodeAndViewData(tNode: TNode, view: LView) {\n  previousOrParentTNode = tNode;\n  lView = view;\n}\n\n/**\n * If `isParent` is:\n *  - `true`: then `previousOrParentTNode` points to a parent node.\n *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n */\nlet isParent: boolean;\n\nexport function getIsParent(): boolean {\n  // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n  return isParent;\n}\n\nexport function setIsParent(value: boolean): void {\n  isParent = value;\n}\n\n/**\n * Query instructions can ask for \"current queries\" in 2 different cases:\n * - when creating view queries (at the root of a component view, before any node is created - in\n * this case currentQueries points to view queries)\n * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n * create content queries).\n */\nexport function getOrCreateCurrentQueries(\n    QueryType: {new (parent: null, shallow: null, deep: null): LQueries}): LQueries {\n  const lView = getLView();\n  let currentQueries = lView[QUERIES];\n  // if this is the first content query on a node, any existing LQueries needs to be cloned\n  // in subsequent template passes, the cloning occurs before directive instantiation.\n  if (previousOrParentTNode && previousOrParentTNode !== lView[HOST_NODE] &&\n      !isContentQueryHost(previousOrParentTNode)) {\n    currentQueries && (currentQueries = lView[QUERIES] = currentQueries.clone());\n    previousOrParentTNode.flags |= TNodeFlags.hasContentQuery;\n  }\n\n  return currentQueries || (lView[QUERIES] = new QueryType(null, null, null));\n}\n\n/** Checks whether a given view is in creation mode */\nexport function isCreationMode(view: LView = lView): boolean {\n  return (view[FLAGS] & LViewFlags.CreationMode) === LViewFlags.CreationMode;\n}\n\n/**\n * State of the current view being processed.\n *\n * An array of nodes (text, element, container, etc), pipes, their bindings, and\n * any local variables that need to be stored between invocations.\n */\nlet lView: LView;\n\n/**\n * The last viewData retrieved by nextContext().\n * Allows building nextContext() and reference() calls.\n *\n * e.g. const inner = x().$implicit; const outer = x().$implicit;\n */\nlet contextLView: LView = null !;\n\nexport function getContextLView(): LView {\n  // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n  return contextLView;\n}\n\n/**\n * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n *\n * Necessary to support ChangeDetectorRef.checkNoChanges().\n */\nlet checkNoChangesMode = false;\n\nexport function getCheckNoChangesMode(): boolean {\n  // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n  return checkNoChangesMode;\n}\n\nexport function setCheckNoChangesMode(mode: boolean): void {\n  checkNoChangesMode = mode;\n}\n\n/** Whether or not this is the first time the current view has been processed. */\nlet firstTemplatePass = true;\n\nexport function getFirstTemplatePass(): boolean {\n  return firstTemplatePass;\n}\n\nexport function setFirstTemplatePass(value: boolean): void {\n  firstTemplatePass = value;\n}\n\n/**\n * The root index from which pure function instructions should calculate their binding\n * indices. In component views, this is TView.bindingStartIndex. In a host binding\n * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n */\nlet bindingRootIndex: number = -1;\n\n// top level variables should not be exported for performance reasons (PERF_NOTES.md)\nexport function getBindingRoot() {\n  return bindingRootIndex;\n}\n\nexport function setBindingRoot(value: number) {\n  bindingRootIndex = value;\n}\n\n/**\n * Swap the current state with a new state.\n *\n * For performance reasons we store the state in the top level of the module.\n * This way we minimize the number of properties to read. Whenever a new view\n * is entered we have to store the state for later, and when the view is\n * exited the state has to be restored\n *\n * @param newView New state to become active\n * @param host Element to which the View is a child of\n * @returns the previous state;\n */\nexport function enterView(newView: LView, hostTNode: TElementNode | TViewNode | null): LView {\n  const oldView = lView;\n  if (newView) {\n    const tView = newView[TVIEW];\n    firstTemplatePass = tView.firstTemplatePass;\n    bindingRootIndex = tView.bindingStartIndex;\n  }\n\n  previousOrParentTNode = hostTNode !;\n  isParent = true;\n\n  lView = contextLView = newView;\n  return oldView;\n}\n\nexport function nextContextImpl<T = any>(level: number = 1): T {\n  contextLView = walkUpViews(level, contextLView !);\n  return contextLView[CONTEXT] as T;\n}\n\nfunction walkUpViews(nestingLevel: number, currentView: LView): LView {\n  while (nestingLevel > 0) {\n    ngDevMode && assertDefined(\n                     currentView[DECLARATION_VIEW],\n                     'Declaration view should be defined if nesting level is greater than 0.');\n    currentView = currentView[DECLARATION_VIEW] !;\n    nestingLevel--;\n  }\n  return currentView;\n}\n\n/**\n * Resets the application state.\n */\nexport function resetComponentState() {\n  isParent = false;\n  previousOrParentTNode = null !;\n  elementDepthCount = 0;\n  bindingsEnabled = true;\n}\n\n/**\n * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n * the direction of traversal (up or down the view tree) a bit clearer.\n *\n * @param newView New state to become active\n */\nexport function leaveView(newView: LView): void {\n  const tView = lView[TVIEW];\n  if (isCreationMode(lView)) {\n    lView[FLAGS] &= ~LViewFlags.CreationMode;\n  } else {\n    executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode);\n    // Views are clean and in update mode after being checked, so these bits are cleared\n    lView[FLAGS] &= ~(LViewFlags.Dirty | LViewFlags.FirstLViewPass);\n    lView[FLAGS] |= LViewFlags.RunInit;\n    lView[BINDING_INDEX] = tView.bindingStartIndex;\n  }\n  enterView(newView, null);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {getInjectableDef, getInjectorDef} from '../di/defs';\nimport {InjectionToken} from '../di/injection_token';\nimport {Injector} from '../di/injector';\nimport {InjectFlags, injectRootLimpMode, setInjectImplementation} from '../di/injector_compatibility';\nimport {Type} from '../type';\n\nimport {assertDefined, assertEqual} from './assert';\nimport {getComponentDef, getDirectiveDef, getPipeDef} from './definition';\nimport {NG_ELEMENT_ID} from './fields';\nimport {DirectiveDef} from './interfaces/definition';\nimport {NO_PARENT_INJECTOR, NodeInjectorFactory, PARENT_INJECTOR, RelativeInjectorLocation, RelativeInjectorLocationFlags, TNODE, isFactory} from './interfaces/injector';\nimport {AttributeMarker, TContainerNode, TElementContainerNode, TElementNode, TNode, TNodeFlags, TNodeProviderIndexes, TNodeType} from './interfaces/node';\nimport {DECLARATION_VIEW, HOST_NODE, INJECTOR, LView, TData, TVIEW, TView} from './interfaces/view';\nimport {assertNodeOfPossibleTypes} from './node_assert';\nimport {getLView, getPreviousOrParentTNode, setTNodeAndViewData} from './state';\nimport {findComponentView, getParentInjectorIndex, getParentInjectorView, hasParentInjector, isComponent, isComponentDef, stringify} from './util';\n\n\n/**\n * Defines if the call to `inject` should include `viewProviders` in its resolution.\n *\n * This is set to true when we try to instantiate a component. This value is reset in\n * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n * instantiated. This is done so that if we are injecting a token which was declared outside of\n * `viewProviders` we don't accidentally pull `viewProviders` in.\n *\n * Example:\n *\n * ```\n * @Injectable()\n * class MyService {\n *   constructor(public value: String) {}\n * }\n *\n * @Component({\n *   providers: [\n *     MyService,\n *     {provide: String, value: 'providers' }\n *   ]\n *   viewProviders: [\n *     {provide: String, value: 'viewProviders'}\n *   ]\n * })\n * class MyComponent {\n *   constructor(myService: MyService, value: String) {\n *     // We expect that Component can see into `viewProviders`.\n *     expect(value).toEqual('viewProviders');\n *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n *     expect(myService.value).toEqual('providers');\n *   }\n * }\n *\n * ```\n */\nlet includeViewProviders = true;\n\nfunction setIncludeViewProviders(v: boolean): boolean {\n  const oldValue = includeViewProviders;\n  includeViewProviders = v;\n  return oldValue;\n}\n\n/**\n * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n * directives that will share slots, and thus, the fewer false positives when checking for\n * the existence of a directive.\n */\nconst BLOOM_SIZE = 256;\nconst BLOOM_MASK = BLOOM_SIZE - 1;\n\n/** Counter used to generate unique IDs for directives. */\nlet nextNgElementId = 0;\n\n/**\n * Registers this directive as present in its node's injector by flipping the directive's\n * corresponding bit in the injector's bloom filter.\n *\n * @param injectorIndex The index of the node injector where this token should be registered\n * @param tView The TView for the injector's bloom filters\n * @param type The directive token to register\n */\nexport function bloomAdd(\n    injectorIndex: number, tView: TView, type: Type<any>| InjectionToken<any>| string): void {\n  ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n  let id: number|undefined =\n      typeof type !== 'string' ? (type as any)[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n\n  // Set a unique ID on the directive type, so if something tries to inject the directive,\n  // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n  if (id == null) {\n    id = (type as any)[NG_ELEMENT_ID] = nextNgElementId++;\n  }\n\n  // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n  // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n  const bloomBit = id & BLOOM_MASK;\n\n  // Create a mask that targets the specific bit associated with the directive.\n  // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n  // to bit positions 0 - 31 in a 32 bit integer.\n  const mask = 1 << bloomBit;\n\n  // Use the raw bloomBit number to determine which bloom filter bucket we should check\n  // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n  const b7 = bloomBit & 0x80;\n  const b6 = bloomBit & 0x40;\n  const b5 = bloomBit & 0x20;\n  const tData = tView.data as number[];\n\n  if (b7) {\n    b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n         (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n  } else {\n    b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n         (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n  }\n}\n\n/**\n * Creates (or gets an existing) injector for a given element or container.\n *\n * @param tNode for which an injector should be retrieved / created.\n * @param hostView View where the node is stored\n * @returns Node injector\n */\nexport function getOrCreateNodeInjectorForNode(\n    tNode: TElementNode | TContainerNode | TElementContainerNode, hostView: LView): number {\n  const existingInjectorIndex = getInjectorIndex(tNode, hostView);\n  if (existingInjectorIndex !== -1) {\n    return existingInjectorIndex;\n  }\n\n  const tView = hostView[TVIEW];\n  if (tView.firstTemplatePass) {\n    tNode.injectorIndex = hostView.length;\n    insertBloom(tView.data, tNode);  // foundation for node bloom\n    insertBloom(hostView, null);     // foundation for cumulative bloom\n    insertBloom(tView.blueprint, null);\n\n    ngDevMode && assertEqual(\n                     tNode.flags === 0 || tNode.flags === TNodeFlags.isComponent, true,\n                     'expected tNode.flags to not be initialized');\n  }\n\n  const parentLoc = getParentInjectorLocation(tNode, hostView);\n  const parentIndex = getParentInjectorIndex(parentLoc);\n  const parentLView = getParentInjectorView(parentLoc, hostView);\n\n  const injectorIndex = tNode.injectorIndex;\n\n  // If a parent injector can't be found, its location is set to -1.\n  // In that case, we don't need to set up a cumulative bloom\n  if (hasParentInjector(parentLoc)) {\n    const parentData = parentLView[TVIEW].data as any;\n    // Creates a cumulative bloom filter that merges the parent's bloom filter\n    // and its own cumulative bloom (which contains tokens for all ancestors)\n    for (let i = 0; i < 8; i++) {\n      hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n    }\n  }\n\n  hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n  return injectorIndex;\n}\n\nfunction insertBloom(arr: any[], footer: TNode | null): void {\n  arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n}\n\n\nexport function getInjectorIndex(tNode: TNode, hostView: LView): number {\n  if (tNode.injectorIndex === -1 ||\n      // If the injector index is the same as its parent's injector index, then the index has been\n      // copied down from the parent node. No injector has been created yet on this node.\n      (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n      // After the first template pass, the injector index might exist but the parent values\n      // might not have been calculated yet for this instance\n      hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n    return -1;\n  } else {\n    return tNode.injectorIndex;\n  }\n}\n\n/**\n * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n * parent injector initially.\n *\n * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n */\nexport function getParentInjectorLocation(tNode: TNode, view: LView): RelativeInjectorLocation {\n  if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n    return tNode.parent.injectorIndex as any;  // ViewOffset is 0\n  }\n\n  // For most cases, the parent injector index can be found on the host node (e.g. for component\n  // or container), so this loop will be skipped, but we must keep the loop here to support\n  // the rarer case of deeply nested <ng-template> tags or inline views.\n  let hostTNode = view[HOST_NODE];\n  let viewOffset = 1;\n  while (hostTNode && hostTNode.injectorIndex === -1) {\n    view = view[DECLARATION_VIEW] !;\n    hostTNode = view ? view[HOST_NODE] : null;\n    viewOffset++;\n  }\n\n  return hostTNode ?\n      hostTNode.injectorIndex | (viewOffset << RelativeInjectorLocationFlags.ViewOffsetShift) :\n      -1 as any;\n}\n\n/**\n * Makes a type or an injection token public to the DI system by adding it to an\n * injector's bloom filter.\n *\n * @param di The node injector in which a directive will be added\n * @param token The type or the injection token to be made public\n */\nexport function diPublicInInjector(\n    injectorIndex: number, view: LView, token: InjectionToken<any>| Type<any>): void {\n  bloomAdd(injectorIndex, view[TVIEW], token);\n}\n\n/**\n * Inject static attribute value into directive constructor.\n *\n * This method is used with `factory` functions which are generated as part of\n * `defineDirective` or `defineComponent`. The method retrieves the static value\n * of an attribute. (Dynamic attributes are not supported since they are not resolved\n *  at the time of injection and can change over time.)\n *\n * # Example\n * Given:\n * ```\n * @Component(...)\n * class MyComponent {\n *   constructor(@Attribute('title') title: string) { ... }\n * }\n * ```\n * When instantiated with\n * ```\n * <my-component title=\"Hello\"></my-component>\n * ```\n *\n * Then factory method generated is:\n * ```\n * MyComponent.ngComponentDef = defineComponent({\n *   factory: () => new MyComponent(injectAttribute('title'))\n *   ...\n * })\n * ```\n *\n * @publicApi\n */\nexport function injectAttributeImpl(tNode: TNode, attrNameToInject: string): string|null {\n  ngDevMode && assertNodeOfPossibleTypes(\n                   tNode, TNodeType.Container, TNodeType.Element, TNodeType.ElementContainer);\n  ngDevMode && assertDefined(tNode, 'expecting tNode');\n  const attrs = tNode.attrs;\n  if (attrs) {\n    for (let i = 0; i < attrs.length; i = i + 2) {\n      const attrName = attrs[i];\n      if (attrName === AttributeMarker.SelectOnly) break;\n      if (attrName == attrNameToInject) {\n        return attrs[i + 1] as string;\n      }\n    }\n  }\n  return null;\n}\n\n\n/**\n * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n *\n * Look for the injector providing the token by walking up the node injector tree and then\n * the module injector tree.\n *\n * @param tNode The Node where the search for the injector should start\n * @param lView The `LView` that contains the `tNode`\n * @param token The token to look for\n * @param flags Injection flags\n * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n */\nexport function getOrCreateInjectable<T>(\n    tNode: TElementNode | TContainerNode | TElementContainerNode | null, lView: LView,\n    token: Type<T>| InjectionToken<T>, flags: InjectFlags = InjectFlags.Default,\n    notFoundValue?: any): T|null {\n  if (tNode) {\n    const bloomHash = bloomHashBitOrFactory(token);\n    // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n    // so just call the factory function to create it.\n    if (typeof bloomHash === 'function') {\n      const savePreviousOrParentTNode = getPreviousOrParentTNode();\n      const saveLView = getLView();\n      setTNodeAndViewData(tNode, lView);\n      try {\n        const value = bloomHash();\n        if (value == null && !(flags & InjectFlags.Optional)) {\n          throw new Error(`No provider for ${stringify(token)}!`);\n        } else {\n          return value;\n        }\n      } finally {\n        setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n      }\n    } else if (typeof bloomHash == 'number') {\n      // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n\n      // A reference to the previous injector TView that was found while climbing the element\n      // injector tree. This is used to know if viewProviders can be accessed on the current\n      // injector.\n      let previousTView: TView|null = null;\n      let injectorIndex = getInjectorIndex(tNode, lView);\n      let parentLocation: RelativeInjectorLocation = NO_PARENT_INJECTOR;\n      let hostTElementNode: TNode|null =\n          flags & InjectFlags.Host ? findComponentView(lView)[HOST_NODE] : null;\n\n      // If we should skip this injector, or if there is no injector on this node, start by\n      // searching\n      // the parent injector.\n      if (injectorIndex === -1 || flags & InjectFlags.SkipSelf) {\n        parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                                                lView[injectorIndex + PARENT_INJECTOR];\n\n        if (!shouldSearchParent(flags, false)) {\n          injectorIndex = -1;\n        } else {\n          previousTView = lView[TVIEW];\n          injectorIndex = getParentInjectorIndex(parentLocation);\n          lView = getParentInjectorView(parentLocation, lView);\n        }\n      }\n\n      // Traverse up the injector tree until we find a potential match or until we know there\n      // *isn't* a match.\n      while (injectorIndex !== -1) {\n        parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n\n        // Check the current injector. If it matches, see if it contains token.\n        const tView = lView[TVIEW];\n        if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n          // At this point, we have an injector which *may* contain the token, so we step through\n          // the providers and directives associated with the injector's corresponding node to get\n          // the instance.\n          const instance: T|null = searchTokensOnInjector<T>(\n              injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n          if (instance !== NOT_FOUND) {\n            return instance;\n          }\n        }\n        if (shouldSearchParent(\n                flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n            bloomHasToken(bloomHash, injectorIndex, lView)) {\n          // The def wasn't found anywhere on this node, so it was a false positive.\n          // Traverse up the tree and continue searching.\n          previousTView = tView;\n          injectorIndex = getParentInjectorIndex(parentLocation);\n          lView = getParentInjectorView(parentLocation, lView);\n        } else {\n          // If we should not search parent OR If the ancestor bloom filter value does not have the\n          // bit corresponding to the directive we can give up on traversing up to find the specific\n          // injector.\n          injectorIndex = -1;\n        }\n      }\n    }\n  }\n\n  if (flags & InjectFlags.Optional && notFoundValue === undefined) {\n    // This must be set or the NullInjector will throw for optional deps\n    notFoundValue = null;\n  }\n\n  if ((flags & (InjectFlags.Self | InjectFlags.Host)) === 0) {\n    const moduleInjector = lView[INJECTOR];\n    if (moduleInjector) {\n      return moduleInjector.get(token, notFoundValue, flags & InjectFlags.Optional);\n    } else {\n      return injectRootLimpMode(token, notFoundValue, flags & InjectFlags.Optional);\n    }\n  }\n  if (flags & InjectFlags.Optional) {\n    return notFoundValue;\n  } else {\n    throw new Error(`NodeInjector: NOT_FOUND [${stringify(token)}]`);\n  }\n}\n\nconst NOT_FOUND = {};\n\nfunction searchTokensOnInjector<T>(\n    injectorIndex: number, lView: LView, token: Type<T>| InjectionToken<T>,\n    previousTView: TView | null, flags: InjectFlags, hostTElementNode: TNode | null) {\n  const currentTView = lView[TVIEW];\n  const tNode = currentTView.data[injectorIndex + TNODE] as TNode;\n  // First, we need to determine if view providers can be accessed by the starting element.\n  // There are two possibities\n  const canAccessViewProviders = previousTView == null ?\n      // 1) This is the first invocation `previousTView == null` which means that we are at the\n      // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n      // to look into the ViewProviders is if:\n      // - we are on a component\n      // - AND the injector set `includeViewProviders` to true (implying that the token can see\n      // ViewProviders because it is the Component or a Service which itself was declared in\n      // ViewProviders)\n      (isComponent(tNode) && includeViewProviders) :\n      // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n      // In such a case we are only allowed to look into the ViewProviders if:\n      // - We just crossed from child View to Parent View `previousTView != currentTView`\n      // - AND the parent TNode is an Element.\n      // This means that we just came from the Component's View and therefore are allowed to see\n      // into the ViewProviders.\n      (previousTView != currentTView && (tNode.type === TNodeType.Element));\n\n  // This special case happens when there is a @host on the inject and when we are searching\n  // on the host element node.\n  const isHostSpecialCase = (flags & InjectFlags.Host) && hostTElementNode === tNode;\n\n  const injectableIdx =\n      locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase);\n  if (injectableIdx !== null) {\n    return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode as TElementNode);\n  } else {\n    return NOT_FOUND;\n  }\n}\n\n/**\n * Searches for the given token among the node's directives and providers.\n *\n * @param tNode TNode on which directives are present.\n * @param lView The view we are currently processing\n * @param token Provider token or type of a directive to look for.\n * @param canAccessViewProviders Whether view providers should be considered.\n * @param isHostSpecialCase Whether the host special case applies.\n * @returns Index of a found directive or provider, or null when none found.\n */\nexport function locateDirectiveOrProvider<T>(\n    tNode: TNode, lView: LView, token: Type<T>| InjectionToken<T>, canAccessViewProviders: boolean,\n    isHostSpecialCase: boolean | number): number|null {\n  const tView = lView[TVIEW];\n  const nodeProviderIndexes = tNode.providerIndexes;\n  const tInjectables = tView.data;\n\n  const injectablesStart = nodeProviderIndexes & TNodeProviderIndexes.ProvidersStartIndexMask;\n  const directivesStart = tNode.directiveStart;\n  const directiveEnd = tNode.directiveEnd;\n  const cptViewProvidersCount =\n      nodeProviderIndexes >> TNodeProviderIndexes.CptViewProvidersCountShift;\n  const startingIndex =\n      canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n  // When the host special case applies, only the viewProviders and the component are visible\n  const endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n  for (let i = startingIndex; i < endIndex; i++) {\n    const providerTokenOrDef = tInjectables[i] as InjectionToken<any>| Type<any>| DirectiveDef<any>;\n    if (i < directivesStart && token === providerTokenOrDef ||\n        i >= directivesStart && (providerTokenOrDef as DirectiveDef<any>).type === token) {\n      return i;\n    }\n  }\n  if (isHostSpecialCase) {\n    const dirDef = tInjectables[directivesStart] as DirectiveDef<any>;\n    if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n      return directivesStart;\n    }\n  }\n  return null;\n}\n\n/**\n* Retrieve or instantiate the injectable from the `lData` at particular `index`.\n*\n* This function checks to see if the value has already been instantiated and if so returns the\n* cached `injectable`. Otherwise if it detects that the value is still a factory it\n* instantiates the `injectable` and caches the value.\n*/\nexport function getNodeInjectable(\n    tData: TData, lData: LView, index: number, tNode: TElementNode): any {\n  let value = lData[index];\n  if (isFactory(value)) {\n    const factory: NodeInjectorFactory = value;\n    if (factory.resolving) {\n      throw new Error(`Circular dep for ${stringify(tData[index])}`);\n    }\n    const previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n    factory.resolving = true;\n    let previousInjectImplementation;\n    if (factory.injectImpl) {\n      previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n    }\n    const savePreviousOrParentTNode = getPreviousOrParentTNode();\n    const saveLView = getLView();\n    setTNodeAndViewData(tNode, lData);\n    try {\n      value = lData[index] = factory.factory(null, tData, lData, tNode);\n    } finally {\n      if (factory.injectImpl) setInjectImplementation(previousInjectImplementation);\n      setIncludeViewProviders(previousIncludeViewProviders);\n      factory.resolving = false;\n      setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n    }\n  }\n  return value;\n}\n\n/**\n * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n * the directive might be provided by the injector.\n *\n * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n * is returned as the node injector can not possibly provide that token.\n *\n * @param token the injection token\n * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n */\nexport function bloomHashBitOrFactory(token: Type<any>| InjectionToken<any>| string): number|\n    Function|undefined {\n  ngDevMode && assertDefined(token, 'token must be defined');\n  if (typeof token === 'string') {\n    return token.charCodeAt(0) || 0;\n  }\n  const tokenId: number|undefined = (token as any)[NG_ELEMENT_ID];\n  return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n}\n\nexport function bloomHasToken(\n    bloomHash: number, injectorIndex: number, injectorView: LView | TData) {\n  // Create a mask that targets the specific bit associated with the directive we're looking for.\n  // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n  // to bit positions 0 - 31 in a 32 bit integer.\n  const mask = 1 << bloomHash;\n  const b7 = bloomHash & 0x80;\n  const b6 = bloomHash & 0x40;\n  const b5 = bloomHash & 0x20;\n\n  // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n  // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n  // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n  let value: number;\n\n  if (b7) {\n    value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                 (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n  } else {\n    value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                 (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n  }\n\n  // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n  // this injector is a potential match.\n  return !!(value & mask);\n}\n\n/** Returns true if flags prevent parent injector from being searched for tokens */\nfunction shouldSearchParent(flags: InjectFlags, isFirstHostTNode: boolean): boolean|number {\n  return !(flags & InjectFlags.Self) && !(flags & InjectFlags.Host && isFirstHostTNode);\n}\n\nexport function injectInjector() {\n  const tNode = getPreviousOrParentTNode() as TElementNode | TContainerNode | TElementContainerNode;\n  return new NodeInjector(tNode, getLView());\n}\n\nexport class NodeInjector implements Injector {\n  constructor(\n      private _tNode: TElementNode|TContainerNode|TElementContainerNode|null,\n      private _lView: LView) {}\n\n  get(token: any, notFoundValue?: any): any {\n    return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n  }\n}\n\nexport function getFactoryOf<T>(type: Type<any>): ((type: Type<T>| null) => T)|null {\n  const typeAny = type as any;\n  const def = getComponentDef<T>(typeAny) || getDirectiveDef<T>(typeAny) ||\n      getPipeDef<T>(typeAny) || getInjectableDef<T>(typeAny) || getInjectorDef<T>(typeAny);\n  if (!def || def.factory === undefined) {\n    return null;\n  }\n  return def.factory;\n}\n\nexport function getInheritedFactory<T>(type: Type<any>): (type: Type<T>) => T {\n  const proto = Object.getPrototypeOf(type.prototype).constructor as Type<any>;\n  const factory = getFactoryOf<T>(proto);\n  if (factory !== null) {\n    return factory;\n  } else {\n    // There is no factory defined. Either this was improper usage of inheritance\n    // (no Angular decorator on the superclass) or there is no constructor at all\n    // in the inheritance chain. Since the two cases cannot be distinguished, the\n    // latter has to be assumed.\n    return (t) => new t();\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport './ng_dev_mode';\nimport {assertDomNode} from './assert';\nimport {EMPTY_ARRAY} from './empty';\nimport {LContext, MONKEY_PATCH_KEY_NAME} from './interfaces/context';\nimport {TNode, TNodeFlags} from './interfaces/node';\nimport {RElement} from './interfaces/renderer';\nimport {CONTEXT, HEADER_OFFSET, HOST, LView, TVIEW} from './interfaces/view';\nimport {getComponentViewByIndex, getNativeByTNode, readElementValue, readPatchedData} from './util';\n\n\n\n/** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n *\n * This function will examine the provided DOM element, component, or directive instance\\'s\n * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n * value will be that of the newly created `LContext`.\n *\n * If the monkey-patched value is the `LView` instance then the context value for that\n * target will be created and the monkey-patch reference will be updated. Therefore when this\n * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n * directive\\'s monkey-patch values.\n *\n * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n * is found which contains a monkey-patch reference. When that occurs then the provided element\n * will be updated with a new context (which is then returned). If the monkey-patch value is not\n * detected for a component/directive instance then it will throw an error (all components and\n * directives should be automatically monkey-patched by ivy).\n *\n * @param target Component, Directive or DOM Node.\n */\nexport function getLContext(target: any): LContext|null {\n  let mpValue = readPatchedData(target);\n  if (mpValue) {\n    // only when it's an array is it considered an LView instance\n    // ... otherwise it's an already constructed LContext instance\n    if (Array.isArray(mpValue)) {\n      const lView: LView = mpValue !;\n      let nodeIndex: number;\n      let component: any = undefined;\n      let directives: any[]|null|undefined = undefined;\n\n      if (isComponentInstance(target)) {\n        nodeIndex = findViaComponent(lView, target);\n        if (nodeIndex == -1) {\n          throw new Error('The provided component was not found in the application');\n        }\n        component = target;\n      } else if (isDirectiveInstance(target)) {\n        nodeIndex = findViaDirective(lView, target);\n        if (nodeIndex == -1) {\n          throw new Error('The provided directive was not found in the application');\n        }\n        directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n      } else {\n        nodeIndex = findViaNativeElement(lView, target as RElement);\n        if (nodeIndex == -1) {\n          return null;\n        }\n      }\n\n      // the goal is not to fill the entire context full of data because the lookups\n      // are expensive. Instead, only the target data (the element, component, container, ICU\n      // expression or directive details) are filled into the context. If called multiple times\n      // with different target values then the missing target data will be filled in.\n      const native = readElementValue(lView[nodeIndex]);\n      const existingCtx = readPatchedData(native);\n      const context: LContext = (existingCtx && !Array.isArray(existingCtx)) ?\n          existingCtx :\n          createLContext(lView, nodeIndex, native);\n\n      // only when the component has been discovered then update the monkey-patch\n      if (component && context.component === undefined) {\n        context.component = component;\n        attachPatchData(context.component, context);\n      }\n\n      // only when the directives have been discovered then update the monkey-patch\n      if (directives && context.directives === undefined) {\n        context.directives = directives;\n        for (let i = 0; i < directives.length; i++) {\n          attachPatchData(directives[i], context);\n        }\n      }\n\n      attachPatchData(context.native, context);\n      mpValue = context;\n    }\n  } else {\n    const rElement = target as RElement;\n    ngDevMode && assertDomNode(rElement);\n\n    // if the context is not found then we need to traverse upwards up the DOM\n    // to find the nearest element that has already been monkey patched with data\n    let parent = rElement as any;\n    while (parent = parent.parentNode) {\n      const parentContext = readPatchedData(parent);\n      if (parentContext) {\n        let lView: LView|null;\n        if (Array.isArray(parentContext)) {\n          lView = parentContext as LView;\n        } else {\n          lView = parentContext.lView;\n        }\n\n        // the edge of the app was also reached here through another means\n        // (maybe because the DOM was changed manually).\n        if (!lView) {\n          return null;\n        }\n\n        const index = findViaNativeElement(lView, rElement);\n        if (index >= 0) {\n          const native = readElementValue(lView[index]);\n          const context = createLContext(lView, index, native);\n          attachPatchData(native, context);\n          mpValue = context;\n          break;\n        }\n      }\n    }\n  }\n  return (mpValue as LContext) || null;\n}\n\n/**\n * Creates an empty instance of a `LContext` context\n */\nfunction createLContext(lView: LView, nodeIndex: number, native: RElement): LContext {\n  return {\n    lView,\n    nodeIndex,\n    native,\n    component: undefined,\n    directives: undefined,\n    localRefs: undefined,\n  };\n}\n\n/**\n * Takes a component instance and returns the view for that component.\n *\n * @param componentInstance\n * @returns The component's view\n */\nexport function getComponentViewByInstance(componentInstance: {}): LView {\n  let lView = readPatchedData(componentInstance);\n  let view: LView;\n\n  if (Array.isArray(lView)) {\n    const nodeIndex = findViaComponent(lView, componentInstance);\n    view = getComponentViewByIndex(nodeIndex, lView);\n    const context = createLContext(lView, nodeIndex, view[HOST] as RElement);\n    context.component = componentInstance;\n    attachPatchData(componentInstance, context);\n    attachPatchData(context.native, context);\n  } else {\n    const context = lView as any as LContext;\n    view = getComponentViewByIndex(context.nodeIndex, context.lView);\n  }\n  return view;\n}\n\n/**\n * Assigns the given data to the given target (which could be a component,\n * directive or DOM node instance) using monkey-patching.\n */\nexport function attachPatchData(target: any, data: LView | LContext) {\n  target[MONKEY_PATCH_KEY_NAME] = data;\n}\n\nexport function isComponentInstance(instance: any): boolean {\n  return instance && instance.constructor && instance.constructor.ngComponentDef;\n}\n\nexport function isDirectiveInstance(instance: any): boolean {\n  return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n}\n\n/**\n * Locates the element within the given LView and returns the matching index\n */\nfunction findViaNativeElement(lView: LView, target: RElement): number {\n  let tNode = lView[TVIEW].firstChild;\n  while (tNode) {\n    const native = getNativeByTNode(tNode, lView) !;\n    if (native === target) {\n      return tNode.index;\n    }\n    tNode = traverseNextElement(tNode);\n  }\n\n  return -1;\n}\n\n/**\n * Locates the next tNode (child, sibling or parent).\n */\nfunction traverseNextElement(tNode: TNode): TNode|null {\n  if (tNode.child) {\n    return tNode.child;\n  } else if (tNode.next) {\n    return tNode.next;\n  } else {\n    // Let's take the following template: <div><span>text</span></div><component/>\n    // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n    // in this case the parent `div`, so that we can find the component.\n    while (tNode.parent && !tNode.parent.next) {\n      tNode = tNode.parent;\n    }\n    return tNode.parent && tNode.parent.next;\n  }\n}\n\n/**\n * Locates the component within the given LView and returns the matching index\n */\nfunction findViaComponent(lView: LView, componentInstance: {}): number {\n  const componentIndices = lView[TVIEW].components;\n  if (componentIndices) {\n    for (let i = 0; i < componentIndices.length; i++) {\n      const elementComponentIndex = componentIndices[i];\n      const componentView = getComponentViewByIndex(elementComponentIndex, lView);\n      if (componentView[CONTEXT] === componentInstance) {\n        return elementComponentIndex;\n      }\n    }\n  } else {\n    const rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n    const rootComponent = rootComponentView[CONTEXT];\n    if (rootComponent === componentInstance) {\n      // we are dealing with the root element here therefore we know that the\n      // element is the very first element after the HEADER data in the lView\n      return HEADER_OFFSET;\n    }\n  }\n  return -1;\n}\n\n/**\n * Locates the directive within the given LView and returns the matching index\n */\nfunction findViaDirective(lView: LView, directiveInstance: {}): number {\n  // if a directive is monkey patched then it will (by default)\n  // have a reference to the LView of the current view. The\n  // element bound to the directive being search lives somewhere\n  // in the view data. We loop through the nodes and check their\n  // list of directives for the instance.\n  let tNode = lView[TVIEW].firstChild;\n  while (tNode) {\n    const directiveIndexStart = tNode.directiveStart;\n    const directiveIndexEnd = tNode.directiveEnd;\n    for (let i = directiveIndexStart; i < directiveIndexEnd; i++) {\n      if (lView[i] === directiveInstance) {\n        return tNode.index;\n      }\n    }\n    tNode = traverseNextElement(tNode);\n  }\n  return -1;\n}\n\n/**\n * Returns a list of directives extracted from the given view based on the\n * provided list of directive index values.\n *\n * @param nodeIndex The node index\n * @param lView The target view data\n * @param includeComponents Whether or not to include components in returned directives\n */\nexport function getDirectivesAtNodeIndex(\n    nodeIndex: number, lView: LView, includeComponents: boolean): any[]|null {\n  const tNode = lView[TVIEW].data[nodeIndex] as TNode;\n  let directiveStartIndex = tNode.directiveStart;\n  if (directiveStartIndex == 0) return EMPTY_ARRAY;\n  const directiveEndIndex = tNode.directiveEnd;\n  if (!includeComponents && tNode.flags & TNodeFlags.isComponent) directiveStartIndex++;\n  return lView.slice(directiveStartIndex, directiveEndIndex);\n}\n\nexport function getComponentAtNodeIndex(nodeIndex: number, lView: LView): {}|null {\n  const tNode = lView[TVIEW].data[nodeIndex] as TNode;\n  let directiveStartIndex = tNode.directiveStart;\n  return tNode.flags & TNodeFlags.isComponent ? lView[directiveStartIndex] : null;\n}\n\n/**\n * Returns a map of local references (local reference name => element or directive instance) that\n * exist on a given element.\n */\nexport function discoverLocalRefs(lView: LView, nodeIndex: number): {[key: string]: any}|null {\n  const tNode = lView[TVIEW].data[nodeIndex] as TNode;\n  if (tNode && tNode.localNames) {\n    const result: {[key: string]: any} = {};\n    for (let i = 0; i < tNode.localNames.length; i += 2) {\n      const localRefName = tNode.localNames[i];\n      const directiveIndex = tNode.localNames[i + 1] as number;\n      result[localRefName] =\n          directiveIndex === -1 ? getNativeByTNode(tNode, lView) ! : lView[directiveIndex];\n    }\n    return result;\n  }\n\n  return null;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\n\nimport {assertDefined} from './assert';\nimport {discoverLocalRefs, getComponentAtNodeIndex, getDirectivesAtNodeIndex, getLContext} from './context_discovery';\nimport {NodeInjector} from './di';\nimport {LContext} from './interfaces/context';\nimport {DirectiveDef} from './interfaces/definition';\nimport {TElementNode, TNode, TNodeProviderIndexes} from './interfaces/node';\nimport {CLEANUP, CONTEXT, FLAGS, HOST, LView, LViewFlags, PARENT, RootContext, TVIEW} from './interfaces/view';\nimport {readElementValue, readPatchedLView, stringify} from './util';\n\n\n\n/**\n * Returns the component instance associated with a given DOM host element.\n * Elements which don't represent components return `null`.\n *\n * @param element Host DOM element from which the component should be retrieved.\n *\n * ```\n * <my-app>\n *   #VIEW\n *     <div>\n *       <child-comp></child-comp>\n *     </div>\n * </mp-app>\n *\n * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n * ```\n *\n * @publicApi\n */\nexport function getComponent<T = {}>(element: Element): T|null {\n  const context = loadLContextFromNode(element);\n\n  if (context.component === undefined) {\n    context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n  }\n\n  return context.component as T;\n}\n\n/**\n * Returns the component instance associated with a given DOM host element.\n * Elements which don't represent components return `null`.\n *\n * @param element Host DOM element from which the component should be retrieved.\n *\n * ```\n * <my-app>\n *   #VIEW\n *     <div>\n *       <child-comp></child-comp>\n *     </div>\n * </mp-app>\n *\n * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n * ```\n *\n * @publicApi\n */\nexport function getContext<T = {}>(element: Element): T|null {\n  const context = loadLContextFromNode(element) !;\n  return context.lView[CONTEXT] as T;\n}\n\n/**\n * Returns the component instance associated with view which owns the DOM element (`null`\n * otherwise).\n *\n * @param element DOM element which is owned by an existing component's view.\n *\n * ```\n * <my-app>\n *   #VIEW\n *     <div>\n *       <child-comp></child-comp>\n *     </div>\n * </mp-app>\n *\n * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n * expect(getViewComponent(<my-app>)).toEqual(null);\n * ```\n *\n * @publicApi\n */\nexport function getViewComponent<T = {}>(element: Element | {}): T|null {\n  const context = loadLContext(element) !;\n  let lView: LView = context.lView;\n  while (lView[PARENT] && lView[HOST] === null) {\n    // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n    lView = lView[PARENT] !;\n  }\n\n  return lView[FLAGS] & LViewFlags.IsRoot ? null : lView[CONTEXT] as T;\n}\n\n\n\n/**\n * Returns the `RootContext` instance that is associated with\n * the application where the target is situated.\n *\n */\nexport function getRootContext(target: LView | {}): RootContext {\n  const lViewData = Array.isArray(target) ? target : loadLContext(target) !.lView;\n  const rootLView = getRootView(lViewData);\n  return rootLView[CONTEXT] as RootContext;\n}\n\n/**\n * Retrieve all root components.\n *\n * Root components are those which have been bootstrapped by Angular.\n *\n * @param target A DOM element, component or directive instance.\n *\n * @publicApi\n */\nexport function getRootComponents(target: {}): any[] {\n  return [...getRootContext(target).components];\n}\n\n/**\n * Retrieves an `Injector` associated with the element, component or directive.\n *\n * @param target A DOM element, component or directive instance.\n *\n * @publicApi\n */\nexport function getInjector(target: {}): Injector {\n  const context = loadLContext(target);\n  const tNode = context.lView[TVIEW].data[context.nodeIndex] as TElementNode;\n  return new NodeInjector(tNode, context.lView);\n}\n\n/**\n * Retrieve a set of injection tokens at a given DOM node.\n *\n * @param element Element for which the injection tokens should be retrieved.\n * @publicApi\n */\nexport function getInjectionTokens(element: Element): any[] {\n  const context = loadLContext(element, false);\n  if (!context) return [];\n  const lView = context.lView;\n  const tView = lView[TVIEW];\n  const tNode = tView.data[context.nodeIndex] as TNode;\n  const providerTokens: any[] = [];\n  const startIndex = tNode.providerIndexes & TNodeProviderIndexes.ProvidersStartIndexMask;\n  const endIndex = tNode.directiveEnd;\n  for (let i = startIndex; i < endIndex; i++) {\n    let value = tView.data[i];\n    if (isDirectiveDefHack(value)) {\n      // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n      // design flaw.  We should always store same type so that we can be monomorphic. The issue\n      // is that for Components/Directives we store the def instead the type. The correct behavior\n      // is that we should always be storing injectable type in this location.\n      value = value.type;\n    }\n    providerTokens.push(value);\n  }\n  return providerTokens;\n}\n\n/**\n * Retrieves directives associated with a given DOM host element.\n *\n * @param target A DOM element, component or directive instance.\n *\n * @publicApi\n */\nexport function getDirectives(target: {}): Array<{}> {\n  const context = loadLContext(target) !;\n\n  if (context.directives === undefined) {\n    context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n  }\n\n  return context.directives || [];\n}\n\n/**\n * Returns LContext associated with a target passed as an argument.\n * Throws if a given target doesn't have associated LContext.\n *\n */\nexport function loadLContext(target: {}): LContext;\nexport function loadLContext(target: {}, throwOnNotFound: false): LContext|null;\nexport function loadLContext(target: {}, throwOnNotFound: boolean = true): LContext|null {\n  const context = getLContext(target);\n  if (!context && throwOnNotFound) {\n    throw new Error(\n        ngDevMode ? `Unable to find context associated with ${stringify(target)}` :\n                    'Invalid ng target');\n  }\n  return context;\n}\n\n/**\n * Retrieve the root view from any component by walking the parent `LView` until\n * reaching the root `LView`.\n *\n * @param componentOrView any component or view\n *\n */\nexport function getRootView(componentOrView: LView | {}): LView {\n  let lView: LView;\n  if (Array.isArray(componentOrView)) {\n    ngDevMode && assertDefined(componentOrView, 'lView');\n    lView = componentOrView as LView;\n  } else {\n    ngDevMode && assertDefined(componentOrView, 'component');\n    lView = readPatchedLView(componentOrView) !;\n  }\n  while (lView && !(lView[FLAGS] & LViewFlags.IsRoot)) {\n    lView = lView[PARENT] !;\n  }\n  return lView;\n}\n\n/**\n * Retrieve map of local references.\n *\n * The references are retrieved as a map of local reference name to element or directive instance.\n *\n * @param target A DOM element, component or directive instance.\n *\n * @publicApi\n */\nexport function getLocalRefs(target: {}): {[key: string]: any} {\n  const context = loadLContext(target) !;\n\n  if (context.localRefs === undefined) {\n    context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n  }\n\n  return context.localRefs || {};\n}\n\n/**\n * Retrieve the host element of the component.\n *\n * Use this function to retrieve the host element of the component. The host\n * element is the element which the component is associated with.\n *\n * @param directive Component or Directive for which the host element should be retrieved.\n *\n * @publicApi\n */\nexport function getHostElement<T>(directive: T): Element {\n  return getLContext(directive) !.native as never as Element;\n}\n\n/**\n * Retrieves the rendered text for a given component.\n *\n * This function retrieves the host element of a component and\n * and then returns the `textContent` for that element. This implies\n * that the text returned will include re-projected content of\n * the component as well.\n *\n * @param component The component to return the content text for.\n */\nexport function getRenderedText(component: any): string {\n  const hostElement = getHostElement(component);\n  return hostElement.textContent || '';\n}\n\nexport function loadLContextFromNode(node: Node): LContext {\n  if (!(node instanceof Node)) throw new Error('Expecting instance of DOM Node');\n  return loadLContext(node) !;\n}\n\nexport interface Listener {\n  name: string;\n  element: Element;\n  callback: (value: any) => any;\n  useCapture: boolean|null;\n}\n\nexport function isBrowserEvents(listener: Listener): boolean {\n  // Browser events are those which don't have `useCapture` as boolean.\n  return typeof listener.useCapture === 'boolean';\n}\n\n\n/**\n * Retrieves a list of DOM listeners.\n *\n * ```\n * <my-app>\n *   #VIEW\n *     <div (click)=\"doSomething()\">\n *     </div>\n * </mp-app>\n *\n * expect(getListeners(<div>)).toEqual({\n *   name: 'click',\n *   element: <div>,\n *   callback: () => doSomething(),\n *   useCapture: false\n * });\n * ```\n *\n * @param element Element for which the DOM listeners should be retrieved.\n * @publicApi\n */\nexport function getListeners(element: Element): Listener[] {\n  const lContext = loadLContextFromNode(element);\n  const lView = lContext.lView;\n  const tView = lView[TVIEW];\n  const lCleanup = lView[CLEANUP];\n  const tCleanup = tView.cleanup;\n  const listeners: Listener[] = [];\n  if (tCleanup && lCleanup) {\n    for (let i = 0; i < tCleanup.length;) {\n      const firstParam = tCleanup[i++];\n      const secondParam = tCleanup[i++];\n      if (typeof firstParam === 'string') {\n        const name: string = firstParam;\n        const listenerElement = readElementValue(lView[secondParam]) as any as Element;\n        const callback: (value: any) => any = lCleanup[tCleanup[i++]];\n        const useCaptureOrIndx = tCleanup[i++];\n        // if useCaptureOrIndx is boolean then report it as is.\n        // if useCaptureOrIndx is positive number then it in unsubscribe method\n        // if useCaptureOrIndx is negative number then it is a Subscription\n        const useCapture = typeof useCaptureOrIndx === 'boolean' ?\n            useCaptureOrIndx :\n            (useCaptureOrIndx >= 0 ? false : null);\n        if (element == listenerElement) {\n          listeners.push({element, name, callback, useCapture});\n        }\n      }\n    }\n  }\n  listeners.sort(sortListeners);\n  return listeners;\n}\n\nfunction sortListeners(a: Listener, b: Listener) {\n  if (a.name == b.name) return 0;\n  return a.name < b.name ? -1 : 1;\n}\n\n/**\n * This function should not exist because it is megamorphic and only mostly correct.\n *\n * See call site for more info.\n */\nfunction isDirectiveDefHack(obj: any): obj is DirectiveDef<any> {\n  return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport function normalizeDebugBindingName(name: string) {\n  // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n  name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n  return `ng-reflect-${name}`;\n}\n\nconst CAMEL_CASE_REGEXP = /([A-Z])/g;\n\nfunction camelCaseToDashCase(input: string): string {\n  return input.replace(CAMEL_CASE_REGEXP, (...m: any[]) => '-' + m[1].toLowerCase());\n}\n\nexport function normalizeDebugBindingValue(value: any): string {\n  try {\n    // Limit the size of the value as otherwise the DOM just gets polluted.\n    return value != null ? value.toString().slice(0, 30) : value;\n  } catch (e) {\n    return '[ERROR] Exception while trying to serialize the value';\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {getSymbolIterator, looseIdentical} from '../util';\n\nexport function devModeEqual(a: any, b: any): boolean {\n  const isListLikeIterableA = isListLikeIterable(a);\n  const isListLikeIterableB = isListLikeIterable(b);\n  if (isListLikeIterableA && isListLikeIterableB) {\n    return areIterablesEqual(a, b, devModeEqual);\n  } else {\n    const isAObject = a && (typeof a === 'object' || typeof a === 'function');\n    const isBObject = b && (typeof b === 'object' || typeof b === 'function');\n    if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n      return true;\n    } else {\n      return looseIdentical(a, b);\n    }\n  }\n}\n\n/**\n * Indicates that the result of a {@link Pipe} transformation has changed even though the\n * reference has not changed.\n *\n * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n * is stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n *\n * @publicApi\n */\nexport class WrappedValue {\n  /** @deprecated from 5.3, use `unwrap()` instead - will switch to protected */\n  wrapped: any;\n\n  constructor(value: any) { this.wrapped = value; }\n\n  /** Creates a wrapped value. */\n  static wrap(value: any): WrappedValue { return new WrappedValue(value); }\n\n  /**\n   * Returns the underlying value of a wrapped value.\n   * Returns the given `value` when it is not wrapped.\n   **/\n  static unwrap(value: any): any { return WrappedValue.isWrapped(value) ? value.wrapped : value; }\n\n  /** Returns true if `value` is a wrapped value. */\n  static isWrapped(value: any): value is WrappedValue { return value instanceof WrappedValue; }\n}\n\n/**\n * Represents a basic change from a previous to a new value.\n *\n * @publicApi\n */\nexport class SimpleChange {\n  constructor(public previousValue: any, public currentValue: any, public firstChange: boolean) {}\n\n  /**\n   * Check whether the new value is the first value assigned.\n   */\n  isFirstChange(): boolean { return this.firstChange; }\n}\n\nexport function isListLikeIterable(obj: any): boolean {\n  if (!isJsObject(obj)) return false;\n  return Array.isArray(obj) ||\n      (!(obj instanceof Map) &&      // JS Map are iterables but return entries as [k, v]\n       getSymbolIterator() in obj);  // JS Iterable have a Symbol.iterator prop\n}\n\nexport function areIterablesEqual(\n    a: any, b: any, comparator: (a: any, b: any) => boolean): boolean {\n  const iterator1 = a[getSymbolIterator()]();\n  const iterator2 = b[getSymbolIterator()]();\n\n  while (true) {\n    const item1 = iterator1.next();\n    const item2 = iterator2.next();\n    if (item1.done && item2.done) return true;\n    if (item1.done || item2.done) return false;\n    if (!comparator(item1.value, item2.value)) return false;\n  }\n}\n\nexport function iterateListLike(obj: any, fn: (p: any) => any) {\n  if (Array.isArray(obj)) {\n    for (let i = 0; i < obj.length; i++) {\n      fn(obj[i]);\n    }\n  } else {\n    const iterator = obj[getSymbolIterator()]();\n    let item: any;\n    while (!((item = iterator.next()).done)) {\n      fn(item.value);\n    }\n  }\n}\n\nexport function isJsObject(o: any): boolean {\n  return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n","\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {TNode} from './interfaces/node';\n\n/** Called when directives inject each other (creating a circular dependency) */\nexport function throwCyclicDependencyError(token: any): never {\n  throw new Error(`Cannot instantiate cyclic dependency! ${token}`);\n}\n\n/** Called when there are multiple component selectors that match a given node */\nexport function throwMultipleComponentError(tNode: TNode): never {\n  throw new Error(`Multiple components match node with tagname ${tNode.tagName}`);\n}\n\n/** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\nexport function throwErrorIfNoChangesMode(\n    creationMode: boolean, oldValue: any, currValue: any): never|void {\n  let msg =\n      `ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '${oldValue}'. Current value: '${currValue}'.`;\n  if (creationMode) {\n    msg +=\n        ` It seems like the view has been created after its parent and its children have been dirty checked.` +\n        ` Has it been created in a change detection hook ?`;\n  }\n  // TODO: include debug context\n  throw new Error(msg);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport interface NO_CHANGE {\n  // This is a brand that ensures that this type can never match anything else\n  brand: 'NO_CHANGE';\n}\n\n/** A special value which designates that a value has not changed. */\nexport const NO_CHANGE = {} as NO_CHANGE;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {devModeEqual} from '../change_detection/change_detection_util';\n\nimport {assertDataInRange, assertLessThan, assertNotEqual} from './assert';\nimport {throwErrorIfNoChangesMode} from './errors';\nimport {BINDING_INDEX, LView} from './interfaces/view';\nimport {getCheckNoChangesMode, isCreationMode} from './state';\nimport {NO_CHANGE} from './tokens';\nimport {isDifferent} from './util';\n\n\n\n// TODO(misko): consider inlining\n/** Updates binding and returns the value. */\nexport function updateBinding(lView: LView, bindingIndex: number, value: any): any {\n  return lView[bindingIndex] = value;\n}\n\n\n/** Gets the current binding value. */\nexport function getBinding(lView: LView, bindingIndex: number): any {\n  ngDevMode && assertDataInRange(lView, lView[bindingIndex]);\n  ngDevMode &&\n      assertNotEqual(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n  return lView[bindingIndex];\n}\n\n/** Updates binding if changed, then returns whether it was updated. */\nexport function bindingUpdated(lView: LView, bindingIndex: number, value: any): boolean {\n  ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n  ngDevMode &&\n      assertLessThan(bindingIndex, lView.length, `Slot should have been initialized to NO_CHANGE`);\n\n  if (lView[bindingIndex] === NO_CHANGE) {\n    // initial pass\n    lView[bindingIndex] = value;\n  } else if (isDifferent(lView[bindingIndex], value)) {\n    if (ngDevMode && getCheckNoChangesMode()) {\n      if (!devModeEqual(lView[bindingIndex], value)) {\n        throwErrorIfNoChangesMode(isCreationMode(lView), lView[bindingIndex], value);\n      }\n    }\n    lView[bindingIndex] = value;\n  } else {\n    return false;\n  }\n  return true;\n}\n\n/** Updates 2 bindings if changed, then returns whether either was updated. */\nexport function bindingUpdated2(lView: LView, bindingIndex: number, exp1: any, exp2: any): boolean {\n  const different = bindingUpdated(lView, bindingIndex, exp1);\n  return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n}\n\n/** Updates 3 bindings if changed, then returns whether any was updated. */\nexport function bindingUpdated3(\n    lView: LView, bindingIndex: number, exp1: any, exp2: any, exp3: any): boolean {\n  const different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n  return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n}\n\n/** Updates 4 bindings if changed, then returns whether any was updated. */\nexport function bindingUpdated4(\n    lView: LView, bindingIndex: number, exp1: any, exp2: any, exp3: any, exp4: any): boolean {\n  const different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n  return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n}\n","\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n/**\n * Expresses a single CSS Selector.\n *\n * Beginning of array\n * - First index: element name\n * - Subsequent odd indices: attr keys\n * - Subsequent even indices: attr values\n *\n * After SelectorFlags.CLASS flag\n * - Class name values\n *\n * SelectorFlags.NOT flag\n * - Changes the mode to NOT\n * - Can be combined with other flags to set the element / attr / class mode\n *\n * e.g. SelectorFlags.NOT | SelectorFlags.ELEMENT\n *\n * Example:\n * Original: `div.foo.bar[attr1=val1][attr2]`\n * Parsed: ['div', 'attr1', 'val1', 'attr2', '', SelectorFlags.CLASS, 'foo', 'bar']\n *\n * Original: 'div[attr1]:not(.foo[attr2])\n * Parsed: [\n *  'div', 'attr1', '',\n *  SelectorFlags.NOT | SelectorFlags.ATTRIBUTE 'attr2', '', SelectorFlags.CLASS, 'foo'\n * ]\n *\n * See more examples in node_selector_matcher_spec.ts\n */\nexport type CssSelector = (string | SelectorFlags)[];\n\n/**\n * A list of CssSelectors.\n *\n * A directive or component can have multiple selectors. This type is used for\n * directive defs so any of the selectors in the list will match that directive.\n *\n * Original: 'form, [ngForm]'\n * Parsed: [['form'], ['', 'ngForm', '']]\n */\nexport type CssSelectorList = CssSelector[];\n\n/** Flags used to build up CssSelectors */\nexport const enum SelectorFlags {\n  /** Indicates this is the beginning of a new negative selector */\n  NOT = 0b0001,\n\n  /** Mode for matching attributes */\n  ATTRIBUTE = 0b0010,\n\n  /** Mode for matching tag names */\n  ELEMENT = 0b0100,\n\n  /** Mode for matching class names */\n  CLASS = 0b1000,\n}\n\nexport const NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\nexport const unusedValueExportToPlacateAjd = 1;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * The goal here is to make sure that the browser DOM API is the Renderer.\n * We do this by defining a subset of DOM API to be the renderer and than\n * use that time for rendering.\n *\n * At runtime we can then use the DOM api directly, in server or web-worker\n * it will be easy to implement such API.\n */\n\nimport {RendererStyleFlags2, RendererType2} from '../../render/api';\n\n\n// TODO: cleanup once the code is merged in angular/angular\nexport enum RendererStyleFlags3 {\n  Important = 1 << 0,\n  DashCase = 1 << 1\n}\n\nexport type Renderer3 = ObjectOrientedRenderer3 | ProceduralRenderer3;\n\n/**\n * Object Oriented style of API needed to create elements and text nodes.\n *\n * This is the native browser API style, e.g. operations are methods on individual objects\n * like HTMLElement. With this style, no additional code is needed as a facade\n * (reducing payload size).\n * */\nexport interface ObjectOrientedRenderer3 {\n  createComment(data: string): RComment;\n  createElement(tagName: string): RElement;\n  createElementNS(namespace: string, tagName: string): RElement;\n  createTextNode(data: string): RText;\n\n  querySelector(selectors: string): RElement|null;\n}\n\n/** Returns whether the `renderer` is a `ProceduralRenderer3` */\nexport function isProceduralRenderer(renderer: ProceduralRenderer3 | ObjectOrientedRenderer3):\n    renderer is ProceduralRenderer3 {\n  return !!((renderer as any).listen);\n}\n\n/**\n * Procedural style of API needed to create elements and text nodes.\n *\n * In non-native browser environments (e.g. platforms such as web-workers), this is the\n * facade that enables element manipulation. This also facilitates backwards compatibility\n * with Renderer2.\n */\nexport interface ProceduralRenderer3 {\n  destroy(): void;\n  createComment(value: string): RComment;\n  createElement(name: string, namespace?: string|null): RElement;\n  createText(value: string): RText;\n  /**\n   * This property is allowed to be null / undefined,\n   * in which case the view engine won't call it.\n   * This is used as a performance optimization for production mode.\n   */\n  destroyNode?: ((node: RNode) => void)|null;\n  appendChild(parent: RElement, newChild: RNode): void;\n  insertBefore(parent: RNode, newChild: RNode, refChild: RNode|null): void;\n  removeChild(parent: RElement, oldChild: RNode): void;\n  selectRootElement(selectorOrNode: string|any): RElement;\n\n  parentNode(node: RNode): RElement|null;\n  nextSibling(node: RNode): RNode|null;\n\n  setAttribute(el: RElement, name: string, value: string, namespace?: string|null): void;\n  removeAttribute(el: RElement, name: string, namespace?: string|null): void;\n  addClass(el: RElement, name: string): void;\n  removeClass(el: RElement, name: string): void;\n  setStyle(\n      el: RElement, style: string, value: any,\n      flags?: RendererStyleFlags2|RendererStyleFlags3): void;\n  removeStyle(el: RElement, style: string, flags?: RendererStyleFlags2|RendererStyleFlags3): void;\n  setProperty(el: RElement, name: string, value: any): void;\n  setValue(node: RText|RComment, value: string): void;\n\n  // TODO(misko): Deprecate in favor of addEventListener/removeEventListener\n  listen(target: RNode, eventName: string, callback: (event: any) => boolean | void): () => void;\n}\n\nexport interface RendererFactory3 {\n  createRenderer(hostElement: RElement|null, rendererType: RendererType2|null): Renderer3;\n  begin?(): void;\n  end?(): void;\n}\n\nexport const domRendererFactory3: RendererFactory3 = {\n  createRenderer: (hostElement: RElement | null, rendererType: RendererType2 | null):\n                      Renderer3 => { return document;}\n};\n\n/** Subset of API needed for appending elements and text nodes. */\nexport interface RNode {\n  parentNode: RNode|null;\n\n  nextSibling: RNode|null;\n\n  removeChild(oldChild: RNode): void;\n\n  /**\n   * Insert a child node.\n   *\n   * Used exclusively for adding View root nodes into ViewAnchor location.\n   */\n  insertBefore(newChild: RNode, refChild: RNode|null, isViewRoot: boolean): void;\n\n  /**\n   * Append a child node.\n   *\n   * Used exclusively for building up DOM which are static (ie not View roots)\n   */\n  appendChild(newChild: RNode): RNode;\n}\n\n/**\n * Subset of API needed for writing attributes, properties, and setting up\n * listeners on Element.\n */\nexport interface RElement extends RNode {\n  style: RCssStyleDeclaration;\n  classList: RDomTokenList;\n  className: string;\n  setAttribute(name: string, value: string): void;\n  removeAttribute(name: string): void;\n  setAttributeNS(namespaceURI: string, qualifiedName: string, value: string): void;\n  addEventListener(type: string, listener: EventListener, useCapture?: boolean): void;\n  removeEventListener(type: string, listener?: EventListener, options?: boolean): void;\n\n  setProperty?(name: string, value: any): void;\n}\n\nexport interface RCssStyleDeclaration {\n  removeProperty(propertyName: string): string;\n  setProperty(propertyName: string, value: string|null, priority?: string): void;\n}\n\nexport interface RDomTokenList {\n  add(token: string): void;\n  remove(token: string): void;\n}\n\nexport interface RText extends RNode { textContent: string|null; }\n\nexport interface RComment extends RNode { textContent: string|null; }\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\nexport const unusedValueExportToPlacateAjd = 1;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {assertDefined} from './assert';\nimport {attachPatchData} from './context_discovery';\nimport {callHooks} from './hooks';\nimport {LContainer, NATIVE, RENDER_PARENT, VIEWS, unusedValueExportToPlacateAjd as unused1} from './interfaces/container';\nimport {TContainerNode, TElementContainerNode, TElementNode, TNode, TNodeFlags, TNodeType, TViewNode, unusedValueExportToPlacateAjd as unused2} from './interfaces/node';\nimport {unusedValueExportToPlacateAjd as unused3} from './interfaces/projection';\nimport {ProceduralRenderer3, RComment, RElement, RNode, RText, Renderer3, isProceduralRenderer, unusedValueExportToPlacateAjd as unused4} from './interfaces/renderer';\nimport {CLEANUP, CONTAINER_INDEX, FLAGS, HEADER_OFFSET, HOST_NODE, HookData, LView, LViewFlags, NEXT, PARENT, QUERIES, RENDERER, TVIEW, unusedValueExportToPlacateAjd as unused5} from './interfaces/view';\nimport {assertNodeType} from './node_assert';\nimport {findComponentView, getNativeByTNode, isLContainer, isRootView, readElementValue, stringify} from './util';\n\nconst unusedValueToPlacateAjd = unused1 + unused2 + unused3 + unused4 + unused5;\n\n/** Retrieves the parent element of a given node. */\nexport function getParentNative(tNode: TNode, currentView: LView): RElement|RComment|null {\n  if (tNode.parent == null) {\n    return getHostNative(currentView);\n  } else {\n    const parentTNode = getFirstParentNative(tNode);\n    return getNativeByTNode(parentTNode, currentView);\n  }\n}\n\n/**\n * Get the first parent of a node that isn't an IcuContainer TNode\n */\nfunction getFirstParentNative(tNode: TNode): TNode {\n  let parent = tNode.parent;\n  while (parent && parent.type === TNodeType.IcuContainer) {\n    parent = parent.parent;\n  }\n  return parent !;\n}\n\n/**\n * Gets the host element given a view. Will return null if the current view is an embedded view,\n * which does not have a host element.\n */\nexport function getHostNative(currentView: LView): RElement|null {\n  const hostTNode = currentView[HOST_NODE] as TElementNode;\n  return hostTNode && hostTNode.type !== TNodeType.View ?\n      (getNativeByTNode(hostTNode, currentView[PARENT] !) as RElement) :\n      null;\n}\n\nexport function getLContainer(tNode: TViewNode, embeddedView: LView): LContainer|null {\n  if (tNode.index === -1) {\n    // This is a dynamically created view inside a dynamic container.\n    // If the host index is -1, the view has not yet been inserted, so it has no parent.\n    const containerHostIndex = embeddedView[CONTAINER_INDEX];\n    return containerHostIndex > -1 ? embeddedView[PARENT] ![containerHostIndex] : null;\n  } else {\n    // This is a inline view node (e.g. embeddedViewStart)\n    return embeddedView[PARENT] ![tNode.parent !.index] as LContainer;\n  }\n}\n\n\n/**\n * Retrieves render parent for a given view.\n * Might be null if a view is not yet attached to any container.\n */\nexport function getContainerRenderParent(tViewNode: TViewNode, view: LView): RElement|null {\n  const container = getLContainer(tViewNode, view);\n  return container ? container[RENDER_PARENT] : null;\n}\n\nconst enum WalkTNodeTreeAction {\n  /** node insert in the native environment */\n  Insert = 0,\n\n  /** node detach from the native environment */\n  Detach = 1,\n\n  /** node destruction using the renderer's API */\n  Destroy = 2,\n}\n\n\n/**\n * Stack used to keep track of projection nodes in walkTNodeTree.\n *\n * This is deliberately created outside of walkTNodeTree to avoid allocating\n * a new array each time the function is called. Instead the array will be\n * re-used by each invocation. This works because the function is not reentrant.\n */\nconst projectionNodeStack: (LView | TNode)[] = [];\n\n/**\n * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n * one found, or on all of them.\n *\n * @param viewToWalk the view to walk\n * @param action identifies the action to be performed on the elements\n * @param renderer the current renderer.\n * @param renderParent Optional the render parent node to be set in all LContainers found,\n * required for action modes Insert and Destroy.\n * @param beforeNode Optional the node before which elements should be added, required for action\n * Insert.\n */\nfunction walkTNodeTree(\n    viewToWalk: LView, action: WalkTNodeTreeAction, renderer: Renderer3,\n    renderParent: RElement | null, beforeNode?: RNode | null) {\n  const rootTNode = viewToWalk[TVIEW].node as TViewNode;\n  let projectionNodeIndex = -1;\n  let currentView = viewToWalk;\n  let tNode: TNode|null = rootTNode.child as TNode;\n  while (tNode) {\n    let nextTNode: TNode|null = null;\n    if (tNode.type === TNodeType.Element) {\n      executeNodeAction(\n          action, renderer, renderParent, getNativeByTNode(tNode, currentView), beforeNode);\n      const nodeOrContainer = currentView[tNode.index];\n      if (isLContainer(nodeOrContainer)) {\n        // This element has an LContainer, and its comment needs to be handled\n        executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], beforeNode);\n      }\n    } else if (tNode.type === TNodeType.Container) {\n      const lContainer = currentView ![tNode.index] as LContainer;\n      executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], beforeNode);\n\n      if (renderParent) lContainer[RENDER_PARENT] = renderParent;\n\n      if (lContainer[VIEWS].length) {\n        currentView = lContainer[VIEWS][0];\n        nextTNode = currentView[TVIEW].node;\n\n        // When the walker enters a container, then the beforeNode has to become the local native\n        // comment node.\n        beforeNode = lContainer[NATIVE];\n      }\n    } else if (tNode.type === TNodeType.Projection) {\n      const componentView = findComponentView(currentView !);\n      const componentHost = componentView[HOST_NODE] as TElementNode;\n      const head: TNode|null =\n          (componentHost.projection as(TNode | null)[])[tNode.projection as number];\n\n      // Must store both the TNode and the view because this projection node could be nested\n      // deeply inside embedded views, and we need to get back down to this particular nested view.\n      projectionNodeStack[++projectionNodeIndex] = tNode;\n      projectionNodeStack[++projectionNodeIndex] = currentView !;\n      if (head) {\n        currentView = componentView[PARENT] !;\n        nextTNode = currentView[TVIEW].data[head.index] as TNode;\n      }\n    } else {\n      // Otherwise, this is a View or an ElementContainer\n      nextTNode = tNode.child;\n    }\n\n    if (nextTNode === null) {\n      // this last node was projected, we need to get back down to its projection node\n      if (tNode.next === null && (tNode.flags & TNodeFlags.isProjected)) {\n        currentView = projectionNodeStack[projectionNodeIndex--] as LView;\n        tNode = projectionNodeStack[projectionNodeIndex--] as TNode;\n      }\n      nextTNode = tNode.next;\n\n      /**\n       * Find the next node in the TNode tree, taking into account the place where a node is\n       * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n       *\n       * If there is no sibling node, then it goes to the next sibling of the parent node...\n       * until it reaches rootNode (at which point null is returned).\n       */\n      while (!nextTNode) {\n        // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n        tNode = tNode.parent || currentView[TVIEW].node;\n\n        if (tNode === null || tNode === rootTNode) return null;\n\n        // When exiting a container, the beforeNode must be restored to the previous value\n        if (tNode.type === TNodeType.Container) {\n          currentView = currentView[PARENT] !;\n          beforeNode = currentView[tNode.index][NATIVE];\n        }\n\n        if (tNode.type === TNodeType.View && currentView[NEXT]) {\n          currentView = currentView[NEXT] as LView;\n          nextTNode = currentView[TVIEW].node;\n        } else {\n          nextTNode = tNode.next;\n        }\n      }\n    }\n    tNode = nextTNode;\n  }\n}\n\n/**\n * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n * being passed as an argument.\n */\nfunction executeNodeAction(\n    action: WalkTNodeTreeAction, renderer: Renderer3, parent: RElement | null,\n    node: RComment | RElement | RText, beforeNode?: RNode | null) {\n  if (action === WalkTNodeTreeAction.Insert) {\n    isProceduralRenderer(renderer !) ?\n        (renderer as ProceduralRenderer3).insertBefore(parent !, node, beforeNode as RNode | null) :\n        parent !.insertBefore(node, beforeNode as RNode | null, true);\n  } else if (action === WalkTNodeTreeAction.Detach) {\n    isProceduralRenderer(renderer !) ?\n        (renderer as ProceduralRenderer3).removeChild(parent !, node) :\n        parent !.removeChild(node);\n  } else if (action === WalkTNodeTreeAction.Destroy) {\n    ngDevMode && ngDevMode.rendererDestroyNode++;\n    (renderer as ProceduralRenderer3).destroyNode !(node);\n  }\n}\n\nexport function createTextNode(value: any, renderer: Renderer3): RText {\n  return isProceduralRenderer(renderer) ? renderer.createText(stringify(value)) :\n                                          renderer.createTextNode(stringify(value));\n}\n\n/**\n * Adds or removes all DOM elements associated with a view.\n *\n * Because some root nodes of the view may be containers, we sometimes need\n * to propagate deeply into the nested containers to remove all elements in the\n * views beneath it.\n *\n * @param viewToWalk The view from which elements should be added or removed\n * @param insertMode Whether or not elements should be added (if false, removing)\n * @param beforeNode The node before which elements should be added, if insert mode\n */\nexport function addRemoveViewFromContainer(\n    viewToWalk: LView, insertMode: true, beforeNode: RNode | null): void;\nexport function addRemoveViewFromContainer(viewToWalk: LView, insertMode: false): void;\nexport function addRemoveViewFromContainer(\n    viewToWalk: LView, insertMode: boolean, beforeNode?: RNode | null): void {\n  const renderParent = getContainerRenderParent(viewToWalk[TVIEW].node as TViewNode, viewToWalk);\n  ngDevMode && assertNodeType(viewToWalk[TVIEW].node as TNode, TNodeType.View);\n  if (renderParent) {\n    const renderer = viewToWalk[RENDERER];\n    walkTNodeTree(\n        viewToWalk, insertMode ? WalkTNodeTreeAction.Insert : WalkTNodeTreeAction.Detach, renderer,\n        renderParent, beforeNode);\n  }\n}\n\n/**\n * Traverses down and up the tree of views and containers to remove listeners and\n * call onDestroy callbacks.\n *\n * Notes:\n *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n *  - Must process containers instead of their views to avoid splicing\n *  when views are destroyed and re-added.\n *  - Using a while loop because it's faster than recursion\n *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n *\n *  @param rootView The view to destroy\n */\nexport function destroyViewTree(rootView: LView): void {\n  // If the view has no children, we can clean it up and return early.\n  if (rootView[TVIEW].childIndex === -1) {\n    return cleanUpView(rootView);\n  }\n  let viewOrContainer: LView|LContainer|null = getLViewChild(rootView);\n\n  while (viewOrContainer) {\n    let next: LView|LContainer|null = null;\n\n    if (viewOrContainer.length >= HEADER_OFFSET) {\n      // If LView, traverse down to child.\n      const view = viewOrContainer as LView;\n      if (view[TVIEW].childIndex > -1) next = getLViewChild(view);\n    } else {\n      // If container, traverse down to its first LView.\n      const container = viewOrContainer as LContainer;\n      if (container[VIEWS].length) next = container[VIEWS][0];\n    }\n\n    if (next == null) {\n      // Only clean up view when moving to the side or up, as destroy hooks\n      // should be called in order from the bottom up.\n      while (viewOrContainer && !viewOrContainer ![NEXT] && viewOrContainer !== rootView) {\n        cleanUpView(viewOrContainer);\n        viewOrContainer = getParentState(viewOrContainer, rootView);\n      }\n      cleanUpView(viewOrContainer || rootView);\n      next = viewOrContainer && viewOrContainer ![NEXT];\n    }\n    viewOrContainer = next;\n  }\n}\n\n/**\n * Inserts a view into a container.\n *\n * This adds the view to the container's array of active views in the correct\n * position. It also adds the view's elements to the DOM if the container isn't a\n * root node of another view (in that case, the view's elements will be added when\n * the container's parent view is added later).\n *\n * @param lView The view to insert\n * @param lContainer The container into which the view should be inserted\n * @param parentView The new parent of the inserted view\n * @param index The index at which to insert the view\n * @param containerIndex The index of the container node, if dynamic\n */\nexport function insertView(\n    lView: LView, lContainer: LContainer, parentView: LView, index: number,\n    containerIndex: number) {\n  const views = lContainer[VIEWS];\n\n  if (index > 0) {\n    // This is a new view, we need to add it to the children.\n    views[index - 1][NEXT] = lView;\n  }\n\n  if (index < views.length) {\n    lView[NEXT] = views[index];\n    views.splice(index, 0, lView);\n  } else {\n    views.push(lView);\n    lView[NEXT] = null;\n  }\n\n  // Dynamically inserted views need a reference to their parent container's host so it's\n  // possible to jump from a view to its container's next when walking the node tree.\n  if (containerIndex > -1) {\n    lView[CONTAINER_INDEX] = containerIndex;\n    lView[PARENT] = parentView;\n  }\n\n  // Notify query that a new view has been added\n  if (lView[QUERIES]) {\n    lView[QUERIES] !.insertView(index);\n  }\n\n  // Sets the attached flag\n  lView[FLAGS] |= LViewFlags.Attached;\n}\n\n/**\n * Detaches a view from a container.\n *\n * This method splices the view from the container's array of active views. It also\n * removes the view's elements from the DOM.\n *\n * @param lContainer The container from which to detach a view\n * @param removeIndex The index of the view to detach\n * @param detached Whether or not this view is already detached.\n * @returns Detached LView instance.\n */\nexport function detachView(lContainer: LContainer, removeIndex: number, detached: boolean): LView {\n  const views = lContainer[VIEWS];\n  const viewToDetach = views[removeIndex];\n  if (removeIndex > 0) {\n    views[removeIndex - 1][NEXT] = viewToDetach[NEXT] as LView;\n  }\n  views.splice(removeIndex, 1);\n  if (!detached) {\n    addRemoveViewFromContainer(viewToDetach, false);\n  }\n\n  if (viewToDetach[QUERIES]) {\n    viewToDetach[QUERIES] !.removeView();\n  }\n  viewToDetach[CONTAINER_INDEX] = -1;\n  viewToDetach[PARENT] = null;\n  // Unsets the attached flag\n  viewToDetach[FLAGS] &= ~LViewFlags.Attached;\n  return viewToDetach;\n}\n\n/**\n * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n *\n * @param lContainer The container from which to remove a view\n * @param tContainer The TContainer node associated with the LContainer\n * @param removeIndex The index of the view to remove\n */\nexport function removeView(\n    lContainer: LContainer, containerHost: TElementNode | TContainerNode | TElementContainerNode,\n    removeIndex: number) {\n  const view = lContainer[VIEWS][removeIndex];\n  detachView(lContainer, removeIndex, !!containerHost.detached);\n  destroyLView(view);\n}\n\n/** Gets the child of the given LView */\nexport function getLViewChild(lView: LView): LView|LContainer|null {\n  const childIndex = lView[TVIEW].childIndex;\n  return childIndex === -1 ? null : lView[childIndex];\n}\n\n/**\n * A standalone function which destroys an LView,\n * conducting cleanup (e.g. removing listeners, calling onDestroys).\n *\n * @param view The view to be destroyed.\n */\nexport function destroyLView(view: LView) {\n  const renderer = view[RENDERER];\n  if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n    walkTNodeTree(view, WalkTNodeTreeAction.Destroy, renderer, null);\n  }\n  destroyViewTree(view);\n  // Sets the destroyed flag\n  view[FLAGS] |= LViewFlags.Destroyed;\n}\n\n/**\n * Determines which LViewOrLContainer to jump to when traversing back up the\n * tree in destroyViewTree.\n *\n * Normally, the view's parent LView should be checked, but in the case of\n * embedded views, the container (which is the view node's parent, but not the\n * LView's parent) needs to be checked for a possible next property.\n *\n * @param state The LViewOrLContainer for which we need a parent state\n * @param rootView The rootView, so we don't propagate too far up the view tree\n * @returns The correct parent LViewOrLContainer\n */\nexport function getParentState(state: LView | LContainer, rootView: LView): LView|LContainer|null {\n  let tNode;\n  if (state.length >= HEADER_OFFSET && (tNode = (state as LView) ![HOST_NODE]) &&\n      tNode.type === TNodeType.View) {\n    // if it's an embedded view, the state needs to go up to the container, in case the\n    // container has a next\n    return getLContainer(tNode as TViewNode, state as LView) as LContainer;\n  } else {\n    // otherwise, use parent view for containers or component views\n    return state[PARENT] === rootView ? null : state[PARENT];\n  }\n}\n\n/**\n * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n * can be propagated to @Output listeners.\n *\n * @param view The LView to clean up\n */\nfunction cleanUpView(viewOrContainer: LView | LContainer): void {\n  if ((viewOrContainer as LView).length >= HEADER_OFFSET) {\n    const view = viewOrContainer as LView;\n    executeOnDestroys(view);\n    executePipeOnDestroys(view);\n    removeListeners(view);\n    const hostTNode = view[HOST_NODE];\n    // For component views only, the local renderer is destroyed as clean up time.\n    if (hostTNode && hostTNode.type === TNodeType.Element && isProceduralRenderer(view[RENDERER])) {\n      ngDevMode && ngDevMode.rendererDestroy++;\n      (view[RENDERER] as ProceduralRenderer3).destroy();\n    }\n  }\n}\n\n/** Removes listeners and unsubscribes from output subscriptions */\nfunction removeListeners(lView: LView): void {\n  const tCleanup = lView[TVIEW].cleanup !;\n  if (tCleanup != null) {\n    const lCleanup = lView[CLEANUP] !;\n    for (let i = 0; i < tCleanup.length - 1; i += 2) {\n      if (typeof tCleanup[i] === 'string') {\n        // This is a listener with the native renderer\n        const idx = tCleanup[i + 1];\n        const listener = lCleanup[tCleanup[i + 2]];\n        const native = readElementValue(lView[idx]);\n        const useCaptureOrSubIdx = tCleanup[i + 3];\n        if (typeof useCaptureOrSubIdx === 'boolean') {\n          // DOM listener\n          native.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n        } else {\n          if (useCaptureOrSubIdx >= 0) {\n            // unregister\n            lCleanup[useCaptureOrSubIdx]();\n          } else {\n            // Subscription\n            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n          }\n        }\n        i += 2;\n      } else if (typeof tCleanup[i] === 'number') {\n        // This is a listener with renderer2 (cleanup fn can be found by index)\n        const cleanupFn = lCleanup[tCleanup[i]];\n        cleanupFn();\n      } else {\n        // This is a cleanup function that is grouped with the index of its context\n        const context = lCleanup[tCleanup[i + 1]];\n        tCleanup[i].call(context);\n      }\n    }\n    lView[CLEANUP] = null;\n  }\n}\n\n/** Calls onDestroy hooks for this view */\nfunction executeOnDestroys(view: LView): void {\n  const tView = view[TVIEW];\n  let destroyHooks: HookData|null;\n  if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n    callHooks(view, destroyHooks);\n  }\n}\n\n/** Calls pipe destroy hooks for this view */\nfunction executePipeOnDestroys(lView: LView): void {\n  const pipeDestroyHooks = lView[TVIEW] && lView[TVIEW].pipeDestroyHooks;\n  if (pipeDestroyHooks) {\n    callHooks(lView !, pipeDestroyHooks);\n  }\n}\n\nexport function getRenderParent(tNode: TNode, currentView: LView): RElement|null {\n  if (canInsertNativeNode(tNode, currentView)) {\n    // If we are asked for a render parent of the root component we need to do low-level DOM\n    // operation as LTree doesn't exist above the topmost host node. We might need to find a render\n    // parent of the topmost host node if the root component injects ViewContainerRef.\n    if (isRootView(currentView)) {\n      return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n    }\n\n    const hostTNode = currentView[HOST_NODE];\n\n    const tNodeParent = tNode.parent;\n    if (tNodeParent != null && tNodeParent.type === TNodeType.ElementContainer) {\n      tNode = getHighestElementContainer(tNodeParent);\n    }\n\n    return tNode.parent == null && hostTNode !.type === TNodeType.View ?\n        getContainerRenderParent(hostTNode as TViewNode, currentView) :\n        getParentNative(tNode, currentView) as RElement;\n  }\n  return null;\n}\n\nfunction canInsertNativeChildOfElement(tNode: TNode): boolean {\n  // If the parent is null, then we are inserting across views. This happens when we\n  // insert a root element of the component view into the component host element and it\n  // should always be eager.\n  if (tNode.parent == null ||\n      // We should also eagerly insert if the parent is a regular, non-component element\n      // since we know that this relationship will never be broken.\n      tNode.parent.type === TNodeType.Element && !(tNode.parent.flags & TNodeFlags.isComponent)) {\n    return true;\n  }\n\n  // Parent is a Component. Component's content nodes are not inserted immediately\n  // because they will be projected, and so doing insert at this point would be wasteful.\n  // Since the projection would than move it to its final destination.\n  return false;\n}\n\n/**\n * We might delay insertion of children for a given view if it is disconnected.\n * This might happen for 2 main reasons:\n * - view is not inserted into any container (view was created but not inserted yet)\n * - view is inserted into a container but the container itself is not inserted into the DOM\n * (container might be part of projection or child of a view that is not inserted yet).\n *\n * In other words we can insert children of a given view if this view was inserted into a container\n * and\n * the container itself has its render parent determined.\n */\nfunction canInsertNativeChildOfView(viewTNode: TViewNode, view: LView): boolean {\n  // Because we are inserting into a `View` the `View` may be disconnected.\n  const container = getLContainer(viewTNode, view) !;\n  if (container == null || container[RENDER_PARENT] == null) {\n    // The `View` is not inserted into a `Container` or the parent `Container`\n    // itself is disconnected. So we have to delay.\n    return false;\n  }\n\n  // The parent `Container` is in inserted state, so we can eagerly insert into\n  // this location.\n  return true;\n}\n\n/**\n * Returns whether a native element can be inserted into the given parent.\n *\n * There are two reasons why we may not be able to insert a element immediately.\n * - Projection: When creating a child content element of a component, we have to skip the\n *   insertion because the content of a component will be projected.\n *   `<component><content>delayed due to projection</content></component>`\n * - Parent container is disconnected: This can happen when we are inserting a view into\n *   parent container, which itself is disconnected. For example the parent container is part\n *   of a View which has not be inserted or is mare for projection but has not been inserted\n *   into destination.\n *\n\n *\n * @param tNode The tNode of the node that we want to insert.\n * @param currentView Current LView being processed.\n * @return boolean Whether the node should be inserted now (or delayed until later).\n */\nexport function canInsertNativeNode(tNode: TNode, currentView: LView): boolean {\n  let currentNode = tNode;\n  let parent: TNode|null = tNode.parent;\n\n  if (tNode.parent) {\n    if (tNode.parent.type === TNodeType.ElementContainer) {\n      currentNode = getHighestElementContainer(tNode);\n      parent = currentNode.parent;\n    } else if (tNode.parent.type === TNodeType.IcuContainer) {\n      currentNode = getFirstParentNative(currentNode);\n      parent = currentNode.parent;\n    }\n  }\n  if (parent === null) parent = currentView[HOST_NODE];\n\n  if (parent && parent.type === TNodeType.View) {\n    return canInsertNativeChildOfView(parent as TViewNode, currentView);\n  } else {\n    // Parent is a regular element or a component\n    return canInsertNativeChildOfElement(currentNode);\n  }\n}\n\n/**\n * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n * This is a utility function that can be used when native nodes were determined - it abstracts an\n * actual renderer being used.\n */\nexport function nativeInsertBefore(\n    renderer: Renderer3, parent: RElement, child: RNode, beforeNode: RNode | null): void {\n  if (isProceduralRenderer(renderer)) {\n    renderer.insertBefore(parent, child, beforeNode);\n  } else {\n    parent.insertBefore(child, beforeNode, true);\n  }\n}\n\n/**\n * Returns a native parent of a given native node.\n */\nexport function nativeParentNode(renderer: Renderer3, node: RNode): RElement|null {\n  return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode) as RElement;\n}\n\n/**\n * Returns a native sibling of a given native node.\n */\nexport function nativeNextSibling(renderer: Renderer3, node: RNode): RNode|null {\n  return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n}\n\n/**\n * Appends the `child` element to the `parent`.\n *\n * The element insertion might be delayed {@link canInsertNativeNode}.\n *\n * @param childEl The child that should be appended\n * @param childTNode The TNode of the child element\n * @param currentView The current LView\n * @returns Whether or not the child was appended\n */\nexport function appendChild(\n    childEl: RNode | null = null, childTNode: TNode, currentView: LView): boolean {\n  if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n    const renderer = currentView[RENDERER];\n    const parentEl = getParentNative(childTNode, currentView);\n    const parentTNode: TNode = childTNode.parent || currentView[HOST_NODE] !;\n\n    if (parentTNode.type === TNodeType.View) {\n      const lContainer = getLContainer(parentTNode as TViewNode, currentView) as LContainer;\n      const views = lContainer[VIEWS];\n      const index = views.indexOf(currentView);\n      nativeInsertBefore(\n          renderer, lContainer[RENDER_PARENT] !, childEl,\n          getBeforeNodeForView(index, views, lContainer[NATIVE]));\n    } else if (parentTNode.type === TNodeType.ElementContainer) {\n      const renderParent = getRenderParent(childTNode, currentView) !;\n      nativeInsertBefore(renderer, renderParent, childEl, parentEl);\n    } else if (parentTNode.type === TNodeType.IcuContainer) {\n      const icuAnchorNode = getNativeByTNode(childTNode.parent !, currentView) !as RElement;\n      nativeInsertBefore(renderer, parentEl as RElement, childEl, icuAnchorNode);\n    } else {\n      isProceduralRenderer(renderer) ? renderer.appendChild(parentEl !as RElement, childEl) :\n                                       parentEl !.appendChild(childEl);\n    }\n    return true;\n  }\n  return false;\n}\n\n/**\n * Gets the top-level ng-container if ng-containers are nested.\n *\n * @param ngContainer The TNode of the starting ng-container\n * @returns tNode The TNode of the highest level ng-container\n */\nfunction getHighestElementContainer(ngContainer: TNode): TNode {\n  while (ngContainer.parent != null && ngContainer.parent.type === TNodeType.ElementContainer) {\n    ngContainer = ngContainer.parent;\n  }\n  return ngContainer;\n}\n\nexport function getBeforeNodeForView(index: number, views: LView[], containerNative: RComment) {\n  if (index + 1 < views.length) {\n    const view = views[index + 1] as LView;\n    const viewTNode = view[HOST_NODE] as TViewNode;\n    return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n  } else {\n    return containerNative;\n  }\n}\n\n/**\n * Removes the `child` element from the DOM if not in view and not projected.\n *\n * @param childTNode The TNode of the child to remove\n * @param childEl The child that should be removed\n * @param currentView The current LView\n * @returns Whether or not the child was removed\n */\nexport function removeChild(childTNode: TNode, childEl: RNode | null, currentView: LView): boolean {\n  // We only remove the element if not in View or not projected.\n  if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n    const parentNative = getParentNative(childTNode, currentView) !as RElement;\n    const renderer = currentView[RENDERER];\n    isProceduralRenderer(renderer) ? renderer.removeChild(parentNative as RElement, childEl) :\n                                     parentNative !.removeChild(childEl);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Appends a projected node to the DOM, or in the case of a projected container,\n * appends the nodes from all of the container's active views to the DOM.\n *\n * @param projectedTNode The TNode to be projected\n * @param tProjectionNode The projection (ng-content) TNode\n * @param currentView Current LView\n * @param projectionView Projection view (view above current)\n */\nexport function appendProjectedNode(\n    projectedTNode: TNode, tProjectionNode: TNode, currentView: LView,\n    projectionView: LView): void {\n  const native = getNativeByTNode(projectedTNode, projectionView);\n  appendChild(native, tProjectionNode, currentView);\n\n  // the projected contents are processed while in the shadow view (which is the currentView)\n  // therefore we need to extract the view where the host element lives since it's the\n  // logical container of the content projected views\n  attachPatchData(native, projectionView);\n\n  const renderParent = getRenderParent(tProjectionNode, currentView);\n\n  const nodeOrContainer = projectionView[projectedTNode.index];\n  if (projectedTNode.type === TNodeType.Container) {\n    // The node we are adding is a container and we are adding it to an element which\n    // is not a component (no more re-projection).\n    // Alternatively a container is projected at the root of a component's template\n    // and can't be re-projected (as not content of any component).\n    // Assign the final projection location in those cases.\n    nodeOrContainer[RENDER_PARENT] = renderParent;\n    const views = nodeOrContainer[VIEWS];\n    for (let i = 0; i < views.length; i++) {\n      addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n    }\n  } else {\n    if (projectedTNode.type === TNodeType.ElementContainer) {\n      let ngContainerChildTNode: TNode|null = projectedTNode.child as TNode;\n      while (ngContainerChildTNode) {\n        appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n        ngContainerChildTNode = ngContainerChildTNode.next;\n      }\n    }\n\n    if (isLContainer(nodeOrContainer)) {\n      nodeOrContainer[RENDER_PARENT] = renderParent;\n      appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport './ng_dev_mode';\n\nimport {assertDefined, assertNotEqual} from './assert';\nimport {AttributeMarker, TAttributes, TNode, TNodeType, unusedValueExportToPlacateAjd as unused1} from './interfaces/node';\nimport {CssSelector, CssSelectorList, NG_PROJECT_AS_ATTR_NAME, SelectorFlags, unusedValueExportToPlacateAjd as unused2} from './interfaces/projection';\n\nconst unusedValueToPlacateAjd = unused1 + unused2;\n\nconst NG_TEMPLATE_SELECTOR = 'ng-template';\n\nfunction isCssClassMatching(nodeClassAttrVal: string, cssClassToMatch: string): boolean {\n  const nodeClassesLen = nodeClassAttrVal.length;\n  const matchIndex = nodeClassAttrVal !.indexOf(cssClassToMatch);\n  const matchEndIdx = matchIndex + cssClassToMatch.length;\n  if (matchIndex === -1                                                  // no match\n      || (matchIndex > 0 && nodeClassAttrVal ![matchIndex - 1] !== ' ')  // no space before\n      ||\n      (matchEndIdx < nodeClassesLen && nodeClassAttrVal ![matchEndIdx] !== ' '))  // no space after\n  {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n *\n * Matching can be perfomed in 2 modes: projection mode (when we project nodes) and regular\n * directive matching mode. In \"projection\" mode, we do not need to check types, so if tag name\n * matches selector, we declare a match. In \"directive matching\" mode, we also check whether tNode\n * is of expected type:\n * - whether tNode has either Element or ElementContainer type\n * - or if we want to match \"ng-template\" tag, we check for Container type\n */\nfunction hasTagAndTypeMatch(\n    tNode: TNode, currentSelector: string, isProjectionMode: boolean): boolean {\n  return currentSelector === tNode.tagName &&\n      (isProjectionMode ||\n       (tNode.type === TNodeType.Element || tNode.type === TNodeType.ElementContainer) ||\n       (tNode.type === TNodeType.Container && currentSelector === NG_TEMPLATE_SELECTOR));\n}\n\n/**\n * A utility function to match an Ivy node static data against a simple CSS selector\n *\n * @param node static data to match\n * @param selector\n * @returns true if node matches the selector.\n */\nexport function isNodeMatchingSelector(\n    tNode: TNode, selector: CssSelector, isProjectionMode: boolean): boolean {\n  ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n\n  let mode: SelectorFlags = SelectorFlags.ELEMENT;\n  const nodeAttrs = tNode.attrs !;\n  const selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(AttributeMarker.SelectOnly) : -1;\n\n  // When processing \":not\" selectors, we skip to the next \":not\" if the\n  // current one doesn't match\n  let skipToNextSelector = false;\n\n  for (let i = 0; i < selector.length; i++) {\n    const current = selector[i];\n    if (typeof current === 'number') {\n      // If we finish processing a :not selector and it hasn't failed, return false\n      if (!skipToNextSelector && !isPositive(mode) && !isPositive(current as number)) {\n        return false;\n      }\n      // If we are skipping to the next :not() and this mode flag is positive,\n      // it's a part of the current :not() selector, and we should keep skipping\n      if (skipToNextSelector && isPositive(current)) continue;\n      skipToNextSelector = false;\n      mode = (current as number) | (mode & SelectorFlags.NOT);\n      continue;\n    }\n\n    if (skipToNextSelector) continue;\n\n    if (mode & SelectorFlags.ELEMENT) {\n      mode = SelectorFlags.ATTRIBUTE | mode & SelectorFlags.NOT;\n      if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n          current === '' && selector.length === 1) {\n        if (isPositive(mode)) return false;\n        skipToNextSelector = true;\n      }\n    } else {\n      const attrName = mode & SelectorFlags.CLASS ? 'class' : current;\n      const attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n\n      if (attrIndexInNode === -1) {\n        if (isPositive(mode)) return false;\n        skipToNextSelector = true;\n        continue;\n      }\n\n      const selectorAttrValue = mode & SelectorFlags.CLASS ? current : selector[++i];\n      if (selectorAttrValue !== '') {\n        let nodeAttrValue: string;\n        const maybeAttrName = nodeAttrs[attrIndexInNode];\n        if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n          nodeAttrValue = '';\n        } else {\n          ngDevMode && assertNotEqual(\n                           maybeAttrName, AttributeMarker.NamespaceURI,\n                           'We do not match directives on namespaced attributes');\n          nodeAttrValue = nodeAttrs[attrIndexInNode + 1] as string;\n        }\n        if (mode & SelectorFlags.CLASS &&\n                !isCssClassMatching(nodeAttrValue as string, selectorAttrValue as string) ||\n            mode & SelectorFlags.ATTRIBUTE && selectorAttrValue !== nodeAttrValue) {\n          if (isPositive(mode)) return false;\n          skipToNextSelector = true;\n        }\n      }\n    }\n  }\n\n  return isPositive(mode) || skipToNextSelector;\n}\n\nfunction isPositive(mode: SelectorFlags): boolean {\n  return (mode & SelectorFlags.NOT) === 0;\n}\n\n/**\n * Examines an attributes definition array from a node to find the index of the\n * attribute with the specified name.\n *\n * NOTE: Will not find namespaced attributes.\n *\n * @param name the name of the attribute to find\n * @param attrs the attribute array to examine\n */\nfunction findAttrIndexInNode(name: string, attrs: TAttributes | null): number {\n  if (attrs === null) return -1;\n  let selectOnlyMode = false;\n  let i = 0;\n  while (i < attrs.length) {\n    const maybeAttrName = attrs[i];\n    if (maybeAttrName === name) {\n      return i;\n    } else if (maybeAttrName === AttributeMarker.NamespaceURI) {\n      // NOTE(benlesh): will not find namespaced attributes. This is by design.\n      i += 4;\n    } else {\n      if (maybeAttrName === AttributeMarker.SelectOnly) {\n        selectOnlyMode = true;\n      }\n      i += selectOnlyMode ? 1 : 2;\n    }\n  }\n\n  return -1;\n}\n\nexport function isNodeMatchingSelectorList(\n    tNode: TNode, selector: CssSelectorList, isProjectionMode: boolean = false): boolean {\n  for (let i = 0; i < selector.length; i++) {\n    if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport function getProjectAsAttrValue(tNode: TNode): string|null {\n  const nodeAttrs = tNode.attrs;\n  if (nodeAttrs != null) {\n    const ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n    // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n    // (attribute names are stored at even indexes)\n    if ((ngProjectAsAttrIdx & 1) === 0) {\n      return nodeAttrs[ngProjectAsAttrIdx + 1] as string;\n    }\n  }\n  return null;\n}\n\n/**\n * Checks a given node against matching selectors and returns\n * selector index (or 0 if none matched).\n *\n * This function takes into account the ngProjectAs attribute: if present its value will be compared\n * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n */\nexport function matchingSelectorIndex(\n    tNode: TNode, selectors: CssSelectorList[], textSelectors: string[]): number {\n  const ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n  for (let i = 0; i < selectors.length; i++) {\n    // if a node has the ngProjectAs attribute match it against unparsed selector\n    // match a node against a parsed selector only if ngProjectAs attribute is not present\n    if (ngProjectAsAttrVal === textSelectors[i] ||\n        ngProjectAsAttrVal === null &&\n            isNodeMatchingSelectorList(tNode, selectors[i], /* isProjectionMode */ true)) {\n      return i + 1;  // first matching selector \"captures\" a given node\n    }\n  }\n  return 0;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {PlayerFactory, PlayerFactoryBuildFn} from '../interfaces/player';\n\n/**\n * Combines the binding value and a factory for an animation player.\n *\n * Used to bind a player to an element template binding (currently only\n * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n * supported). The provided `factoryFn` function will be run once all\n * the associated bindings have been evaluated on the element and is\n * designed to return a player which will then be placed on the element.\n *\n * @param factoryFn The function that is used to create a player\n *   once all the rendering-related (styling values) have been\n *   processed for the element binding.\n * @param value The raw value that will be exposed to the binding\n *   so that the binding can update its internal values when\n *   any changes are evaluated.\n */\nexport function bindPlayerFactory<T>(factoryFn: PlayerFactoryBuildFn, value: T): PlayerFactory {\n  return new BoundPlayerFactory(factoryFn, value) as any;\n}\n\nexport class BoundPlayerFactory<T> {\n  '__brand__': 'Brand for PlayerFactory that nothing will match';\n  constructor(public fn: PlayerFactoryBuildFn, public value: T) {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {PlayState, Player, PlayerHandler} from '../interfaces/player';\n\nexport class CorePlayerHandler implements PlayerHandler {\n  private _players: Player[] = [];\n\n  flushPlayers() {\n    for (let i = 0; i < this._players.length; i++) {\n      const player = this._players[i];\n      if (!player.parent && player.state === PlayState.Pending) {\n        player.play();\n      }\n    }\n    this._players.length = 0;\n  }\n\n  queuePlayer(player: Player) { this._players.push(player); }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport '../ng_dev_mode';\n\nimport {StyleSanitizeFn} from '../../sanitization/style_sanitizer';\nimport {getLContext} from '../context_discovery';\nimport {LContainer} from '../interfaces/container';\nimport {LContext} from '../interfaces/context';\nimport {AttributeMarker, TAttributes, TNode, TNodeFlags} from '../interfaces/node';\nimport {PlayState, Player, PlayerContext, PlayerIndex} from '../interfaces/player';\nimport {RElement} from '../interfaces/renderer';\nimport {InitialStylingValues, StylingContext, StylingFlags, StylingIndex} from '../interfaces/styling';\nimport {HEADER_OFFSET, HOST, LView, RootContext} from '../interfaces/view';\nimport {getTNode} from '../util';\n\nimport {CorePlayerHandler} from './core_player_handler';\n\nconst ANIMATION_PROP_PREFIX = '@';\n\nexport function createEmptyStylingContext(\n    element?: RElement | null, sanitizer?: StyleSanitizeFn | null,\n    initialStyles?: InitialStylingValues | null,\n    initialClasses?: InitialStylingValues | null): StylingContext {\n  return [\n    0,                                     // MasterFlags\n    [null, -1, false, sanitizer || null],  // DirectiveRefs\n    initialStyles || [null],               // InitialStyles\n    initialClasses || [null],              // InitialClasses\n    [0, 0],                                // SinglePropOffsets\n    element || null,                       // Element\n    null,                                  // PreviousMultiClassValue\n    null,                                  // PreviousMultiStyleValue\n    null,                                  // PlayerContext\n  ];\n}\n\n/**\n * Used clone a copy of a pre-computed template of a styling context.\n *\n * A pre-computed template is designed to be computed once for a given element\n * (instructions.ts has logic for caching this).\n */\nexport function allocStylingContext(\n    element: RElement | null, templateStyleContext: StylingContext): StylingContext {\n  // each instance gets a copy\n  const context = templateStyleContext.slice() as any as StylingContext;\n  context[StylingIndex.ElementPosition] = element;\n\n  // this will prevent any other directives from extending the context\n  context[StylingIndex.MasterFlagPosition] |= StylingFlags.BindingAllocationLocked;\n  return context;\n}\n\n/**\n * Retrieve the `StylingContext` at a given index.\n *\n * This method lazily creates the `StylingContext`. This is because in most cases\n * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n * which would create unnecessary memory pressure.\n *\n * @param index Index of the style allocation. See: `elementStyling`.\n * @param viewData The view to search for the styling context\n */\nexport function getStylingContext(index: number, viewData: LView): StylingContext {\n  let storageIndex = index;\n  let slotValue: LContainer|LView|StylingContext|RElement = viewData[storageIndex];\n  let wrapper: LContainer|LView|StylingContext = viewData;\n\n  while (Array.isArray(slotValue)) {\n    wrapper = slotValue;\n    slotValue = slotValue[HOST] as LView | StylingContext | RElement;\n  }\n\n  if (isStylingContext(wrapper)) {\n    return wrapper as StylingContext;\n  } else {\n    // This is an LView or an LContainer\n    const stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n\n    if (wrapper !== viewData) {\n      storageIndex = HOST;\n    }\n\n    return wrapper[storageIndex] = stylingTemplate ?\n        allocStylingContext(slotValue, stylingTemplate) :\n        createEmptyStylingContext(slotValue);\n  }\n}\n\nexport function isStylingContext(value: any): value is StylingContext {\n  // Not an LView or an LContainer\n  return Array.isArray(value) && typeof value[StylingIndex.MasterFlagPosition] === 'number' &&\n      Array.isArray(value[StylingIndex.InitialStyleValuesPosition]);\n}\n\nexport function isAnimationProp(name: string): boolean {\n  return name[0] === ANIMATION_PROP_PREFIX;\n}\n\nexport function addPlayerInternal(\n    playerContext: PlayerContext, rootContext: RootContext, element: HTMLElement,\n    player: Player | null, playerContextIndex: number, ref?: any): boolean {\n  ref = ref || element;\n  if (playerContextIndex) {\n    playerContext[playerContextIndex] = player;\n  } else {\n    playerContext.push(player);\n  }\n\n  if (player) {\n    player.addEventListener(PlayState.Destroyed, () => {\n      const index = playerContext.indexOf(player);\n      const nonFactoryPlayerIndex = playerContext[PlayerIndex.NonBuilderPlayersStart];\n\n      // if the player is being removed from the factory side of the context\n      // (which is where the [style] and [class] bindings do their thing) then\n      // that side of the array cannot be resized since the respective bindings\n      // have pointer index values that point to the associated factory instance\n      if (index) {\n        if (index < nonFactoryPlayerIndex) {\n          playerContext[index] = null;\n        } else {\n          playerContext.splice(index, 1);\n        }\n      }\n      player.destroy();\n    });\n\n    const playerHandler =\n        rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n    playerHandler.queuePlayer(player, ref);\n    return true;\n  }\n\n  return false;\n}\n\nexport function getPlayersInternal(playerContext: PlayerContext): Player[] {\n  const players: Player[] = [];\n  const nonFactoryPlayersStart = playerContext[PlayerIndex.NonBuilderPlayersStart];\n\n  // add all factory-based players (which are apart of [style] and [class] bindings)\n  for (let i = PlayerIndex.PlayerBuildersStartPosition + PlayerIndex.PlayerOffsetPosition;\n       i < nonFactoryPlayersStart; i += PlayerIndex.PlayerAndPlayerBuildersTupleSize) {\n    const player = playerContext[i] as Player | null;\n    if (player) {\n      players.push(player);\n    }\n  }\n\n  // add all custom players (not apart of [style] and [class] bindings)\n  for (let i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n    players.push(playerContext[i] as Player);\n  }\n\n  return players;\n}\n\n\nexport function getOrCreatePlayerContext(target: {}, context?: LContext | null): PlayerContext|\n    null {\n  context = context || getLContext(target) !;\n  if (!context) {\n    ngDevMode && throwInvalidRefError();\n    return null;\n  }\n\n  const {lView, nodeIndex} = context;\n  const stylingContext = getStylingContext(nodeIndex, lView);\n  return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n}\n\nexport function getPlayerContext(stylingContext: StylingContext): PlayerContext|null {\n  return stylingContext[StylingIndex.PlayerContext];\n}\n\nexport function allocPlayerContext(data: StylingContext): PlayerContext {\n  return data[StylingIndex.PlayerContext] =\n             [PlayerIndex.SinglePlayerBuildersStartPosition, null, null, null, null];\n}\n\nexport function throwInvalidRefError() {\n  throw new Error('Only elements that exist in an Angular application can be used for animations');\n}\n\nexport function hasStyling(attrs: TAttributes): boolean {\n  for (let i = 0; i < attrs.length; i++) {\n    const attr = attrs[i];\n    if (attr == AttributeMarker.Classes || attr == AttributeMarker.Styles) return true;\n  }\n  return false;\n}\n\nexport function hasClassInput(tNode: TNode) {\n  return tNode.flags & TNodeFlags.hasClassInput ? true : false;\n}\n","/**\n* @license\n* Copyright Google Inc. All Rights Reserved.\n*\n* Use of this source code is governed by an MIT-style license that can be\n* found in the LICENSE file at https://angular.io/license\n*/\nimport {StyleSanitizeFn} from '../../sanitization/style_sanitizer';\nimport {assertNotEqual} from '../assert';\nimport {EMPTY_ARRAY, EMPTY_OBJ} from '../empty';\nimport {AttributeMarker, TAttributes} from '../interfaces/node';\nimport {BindingStore, BindingType, Player, PlayerBuilder, PlayerFactory, PlayerIndex} from '../interfaces/player';\nimport {RElement, Renderer3, RendererStyleFlags3, isProceduralRenderer} from '../interfaces/renderer';\nimport {DirectiveOwnerAndPlayerBuilderIndex, DirectiveRegistryValues, DirectiveRegistryValuesIndex, InitialStylingValues, InitialStylingValuesIndex, SinglePropOffsetValues, SinglePropOffsetValuesIndex, StylingContext, StylingFlags, StylingIndex} from '../interfaces/styling';\nimport {LView, RootContext} from '../interfaces/view';\nimport {NO_CHANGE} from '../tokens';\nimport {getRootContext} from '../util';\n\nimport {BoundPlayerFactory} from './player_factory';\nimport {addPlayerInternal, allocPlayerContext, createEmptyStylingContext, getPlayerContext} from './util';\n\n\n/**\n * This file includes the code to power all styling-binding operations in Angular.\n *\n * These include:\n * [style]=\"myStyleObj\"\n * [class]=\"myClassObj\"\n * [style.prop]=\"myPropValue\"\n * [class.name]=\"myClassValue\"\n *\n * There are many different ways in which these functions below are called. Please see\n * `interfaces/styles.ts` to get a better idea of how the styling algorithm works.\n */\n\n\n\n/**\n * Creates a new StylingContext an fills it with the provided static styling attribute values.\n */\nexport function initializeStaticContext(attrs: TAttributes) {\n  const context = createEmptyStylingContext();\n  const initialClasses: InitialStylingValues = context[StylingIndex.InitialClassValuesPosition] =\n      [null];\n  const initialStyles: InitialStylingValues = context[StylingIndex.InitialStyleValuesPosition] =\n      [null];\n\n  // The attributes array has marker values (numbers) indicating what the subsequent\n  // values represent. When we encounter a number, we set the mode to that type of attribute.\n  let mode = -1;\n  for (let i = 0; i < attrs.length; i++) {\n    const attr = attrs[i];\n    if (typeof attr == 'number') {\n      mode = attr;\n    } else if (mode === AttributeMarker.Styles) {\n      initialStyles.push(attr as string, attrs[++i] as string);\n    } else if (mode === AttributeMarker.Classes) {\n      initialClasses.push(attr as string, true);\n    } else if (mode === AttributeMarker.SelectOnly) {\n      break;\n    }\n  }\n\n  return context;\n}\n\n/**\n * Designed to update an existing styling context with new static styling\n * data (classes and styles).\n *\n * @param context the existing styling context\n * @param attrs an array of new static styling attributes that will be\n *              assigned to the context\n * @param directive the directive instance with which static data is associated with.\n */\nexport function patchContextWithStaticAttrs(\n    context: StylingContext, attrs: TAttributes, directive: any): void {\n  // If the styling context has already been patched with the given directive's bindings,\n  // then there is no point in doing it again. The reason why this may happen (the directive\n  // styling being patched twice) is because the `stylingBinding` function is called each time\n  // an element is created (both within a template function and within directive host bindings).\n  const directives = context[StylingIndex.DirectiveRegistryPosition];\n  if (getDirectiveRegistryValuesIndexOf(directives, directive) == -1) {\n    // this is a new directive which we have not seen yet.\n    directives.push(directive, -1, false, null);\n\n    let initialClasses: InitialStylingValues|null = null;\n    let initialStyles: InitialStylingValues|null = null;\n\n    let mode = -1;\n    for (let i = 0; i < attrs.length; i++) {\n      const attr = attrs[i];\n      if (typeof attr == 'number') {\n        mode = attr;\n      } else if (mode == AttributeMarker.Classes) {\n        initialClasses = initialClasses || context[StylingIndex.InitialClassValuesPosition];\n        patchInitialStylingValue(initialClasses, attr, true);\n      } else if (mode == AttributeMarker.Styles) {\n        initialStyles = initialStyles || context[StylingIndex.InitialStyleValuesPosition];\n        patchInitialStylingValue(initialStyles, attr, attrs[++i]);\n      }\n    }\n  }\n}\n\n/**\n * Designed to add a style or class value into the existing set of initial styles.\n *\n * The function will search and figure out if a style/class value is already present\n * within the provided initial styling array. If and when a style/class value is not\n * present (or if it's value is falsy) then it will be inserted/updated in the list\n * of initial styling values.\n */\nfunction patchInitialStylingValue(\n    initialStyling: InitialStylingValues, prop: string, value: any): void {\n  // Even values are keys; Odd numbers are values; Search keys only\n  for (let i = InitialStylingValuesIndex.KeyValueStartPosition; i < initialStyling.length;) {\n    const key = initialStyling[i];\n    if (key === prop) {\n      const existingValue = initialStyling[i + InitialStylingValuesIndex.ValueOffset];\n\n      // If there is no previous style value (when `null`) or no previous class\n      // applied (when `false`) then we update the the newly given value.\n      if (existingValue == null || existingValue == false) {\n        initialStyling[i + InitialStylingValuesIndex.ValueOffset] = value;\n      }\n      return;\n    }\n    i = i + InitialStylingValuesIndex.Size;\n  }\n  // We did not find existing key, add a new one.\n  initialStyling.push(prop, value);\n}\n\n/**\n * Runs through the initial styling data present in the context and renders\n * them via the renderer on the element.\n */\nexport function renderInitialStylesAndClasses(\n    element: RElement, context: StylingContext, renderer: Renderer3) {\n  const initialClasses = context[StylingIndex.InitialClassValuesPosition];\n  renderInitialStylingValues(element, renderer, initialClasses, true);\n\n  const initialStyles = context[StylingIndex.InitialStyleValuesPosition];\n  renderInitialStylingValues(element, renderer, initialStyles, false);\n}\n\n/**\n * This is a helper function designed to render each entry present within the\n * provided list of initialStylingValues.\n */\nfunction renderInitialStylingValues(\n    element: RElement, renderer: Renderer3, initialStylingValues: InitialStylingValues,\n    isEntryClassBased: boolean) {\n  for (let i = InitialStylingValuesIndex.KeyValueStartPosition; i < initialStylingValues.length;\n       i += InitialStylingValuesIndex.Size) {\n    const value = initialStylingValues[i + InitialStylingValuesIndex.ValueOffset];\n    if (value) {\n      if (isEntryClassBased) {\n        setClass(\n            element, initialStylingValues[i + InitialStylingValuesIndex.PropOffset] as string, true,\n            renderer, null);\n      } else {\n        setStyle(\n            element, initialStylingValues[i + InitialStylingValuesIndex.PropOffset] as string,\n            value as string, renderer, null);\n      }\n    }\n  }\n}\n\nexport function allowNewBindingsForStylingContext(context: StylingContext): boolean {\n  return (context[StylingIndex.MasterFlagPosition] & StylingFlags.BindingAllocationLocked) === 0;\n}\n\n/**\n * Adds in new binding values to a styling context.\n *\n * If a directive value is provided then all provided class/style binding names will\n * reference the provided directive.\n *\n * @param context the existing styling context\n * @param directiveRef the directive that the new bindings will reference\n * @param classBindingNames an array of class binding names that will be added to the context\n * @param styleBindingNames an array of style binding names that will be added to the context\n * @param styleSanitizer an optional sanitizer that handle all sanitization on for each of\n *    the bindings added to the context. Note that if a directive is provided then the sanitizer\n *    instance will only be active if and when the directive updates the bindings that it owns.\n */\nexport function updateContextWithBindings(\n    context: StylingContext, directiveRef: any | null, classBindingNames?: string[] | null,\n    styleBindingNames?: string[] | null, styleSanitizer?: StyleSanitizeFn | null,\n    onlyProcessSingleClasses?: boolean) {\n  if (context[StylingIndex.MasterFlagPosition] & StylingFlags.BindingAllocationLocked) return;\n\n  // this means the context has already been patched with the directive's bindings\n  const directiveIndex = findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer);\n  if (directiveIndex === -1) {\n    // this means the directive has already been patched in ... No point in doing anything\n    return;\n  }\n\n  // there are alot of variables being used below to track where in the context the new\n  // binding values will be placed. Because the context consists of multiple types of\n  // entries (single classes/styles and multi classes/styles) alot of the index positions\n  // need to be computed ahead of time and the context needs to be extended before the values\n  // are inserted in.\n  const singlePropOffsetValues = context[StylingIndex.SinglePropOffsetPositions];\n  const totalCurrentClassBindings =\n      singlePropOffsetValues[SinglePropOffsetValuesIndex.ClassesCountPosition];\n  const totalCurrentStyleBindings =\n      singlePropOffsetValues[SinglePropOffsetValuesIndex.StylesCountPosition];\n\n  const classesOffset = totalCurrentClassBindings * StylingIndex.Size;\n  const stylesOffset = totalCurrentStyleBindings * StylingIndex.Size;\n\n  const singleStylesStartIndex = StylingIndex.SingleStylesStartPosition;\n  let singleClassesStartIndex = singleStylesStartIndex + stylesOffset;\n  let multiStylesStartIndex = singleClassesStartIndex + classesOffset;\n  let multiClassesStartIndex = multiStylesStartIndex + stylesOffset;\n\n  // because we're inserting more bindings into the context, this means that the\n  // binding values need to be referenced the singlePropOffsetValues array so that\n  // the template/directive can easily find them inside of the `elementStyleProp`\n  // and the `elementClassProp` functions without iterating through the entire context.\n  // The first step to setting up these reference points is to mark how many bindings\n  // are being added. Even if these bindings already exist in the context, the directive\n  // or template code will still call them unknowingly. Therefore the total values need\n  // to be registered so that we know how many bindings are assigned to each directive.\n  const currentSinglePropsLength = singlePropOffsetValues.length;\n  singlePropOffsetValues.push(\n      styleBindingNames ? styleBindingNames.length : 0,\n      classBindingNames ? classBindingNames.length : 0);\n\n  // the code below will check to see if a new style binding already exists in the context\n  // if so then there is no point in inserting it into the context again. Whether or not it\n  // exists the styling offset code will now know exactly where it is\n  let insertionOffset = 0;\n  const filteredStyleBindingNames: string[] = [];\n  if (styleBindingNames && styleBindingNames.length) {\n    for (let i = 0; i < styleBindingNames.length; i++) {\n      const name = styleBindingNames[i];\n      let singlePropIndex =\n          getMatchingBindingIndex(context, name, singleStylesStartIndex, singleClassesStartIndex);\n      if (singlePropIndex == -1) {\n        singlePropIndex = singleClassesStartIndex + insertionOffset;\n        insertionOffset += StylingIndex.Size;\n        filteredStyleBindingNames.push(name);\n      }\n      singlePropOffsetValues.push(singlePropIndex);\n    }\n  }\n\n  // just like with the style binding loop above, the new class bindings get the same treatment...\n  const filteredClassBindingNames: string[] = [];\n  if (classBindingNames && classBindingNames.length) {\n    for (let i = 0; i < classBindingNames.length; i++) {\n      const name = classBindingNames[i];\n      let singlePropIndex =\n          getMatchingBindingIndex(context, name, singleClassesStartIndex, multiStylesStartIndex);\n      if (singlePropIndex == -1) {\n        singlePropIndex = multiStylesStartIndex + insertionOffset;\n        insertionOffset += StylingIndex.Size;\n        filteredClassBindingNames.push(name);\n      } else {\n        singlePropIndex += filteredStyleBindingNames.length * StylingIndex.Size;\n      }\n      singlePropOffsetValues.push(singlePropIndex);\n    }\n  }\n\n  // because new styles are being inserted, this means the existing collection of style offset\n  // index values are incorrect (they point to the wrong values). The code below will run through\n  // the entire offset array and update the existing set of index values to point to their new\n  // locations while taking the new binding values into consideration.\n  let i = SinglePropOffsetValuesIndex.ValueStartPosition;\n  if (filteredStyleBindingNames.length) {\n    while (i < currentSinglePropsLength) {\n      const totalStyles =\n          singlePropOffsetValues[i + SinglePropOffsetValuesIndex.StylesCountPosition];\n      const totalClasses =\n          singlePropOffsetValues[i + SinglePropOffsetValuesIndex.ClassesCountPosition];\n      if (totalClasses) {\n        const start = i + SinglePropOffsetValuesIndex.ValueStartPosition + totalStyles;\n        for (let j = start; j < start + totalClasses; j++) {\n          singlePropOffsetValues[j] += filteredStyleBindingNames.length * StylingIndex.Size;\n        }\n      }\n\n      const total = totalStyles + totalClasses;\n      i += SinglePropOffsetValuesIndex.ValueStartPosition + total;\n    }\n  }\n\n  const totalNewEntries = filteredClassBindingNames.length + filteredStyleBindingNames.length;\n\n  // in the event that there are new style values being inserted, all existing class and style\n  // bindings need to have their pointer values offsetted with the new amount of space that is\n  // used for the new style/class bindings.\n  for (let i = singleStylesStartIndex; i < context.length; i += StylingIndex.Size) {\n    const isMultiBased = i >= multiStylesStartIndex;\n    const isClassBased = i >= (isMultiBased ? multiClassesStartIndex : singleClassesStartIndex);\n    const flag = getPointers(context, i);\n    const staticIndex = getInitialIndex(flag);\n    let singleOrMultiIndex = getMultiOrSingleIndex(flag);\n    if (isMultiBased) {\n      singleOrMultiIndex +=\n          isClassBased ? (filteredStyleBindingNames.length * StylingIndex.Size) : 0;\n    } else {\n      singleOrMultiIndex += (totalNewEntries * StylingIndex.Size) +\n          ((isClassBased ? filteredStyleBindingNames.length : 0) * StylingIndex.Size);\n    }\n    setFlag(context, i, pointers(flag, staticIndex, singleOrMultiIndex));\n  }\n\n  // this is where we make space in the context for the new style bindings\n  for (let i = 0; i < filteredStyleBindingNames.length * StylingIndex.Size; i++) {\n    context.splice(multiClassesStartIndex, 0, null);\n    context.splice(singleClassesStartIndex, 0, null);\n    singleClassesStartIndex++;\n    multiStylesStartIndex++;\n    multiClassesStartIndex += 2;  // both single + multi slots were inserted\n  }\n\n  // this is where we make space in the context for the new class bindings\n  for (let i = 0; i < filteredClassBindingNames.length * StylingIndex.Size; i++) {\n    context.splice(multiStylesStartIndex, 0, null);\n    context.push(null);\n    multiStylesStartIndex++;\n    multiClassesStartIndex++;\n  }\n\n  const initialClasses = context[StylingIndex.InitialClassValuesPosition];\n  const initialStyles = context[StylingIndex.InitialStyleValuesPosition];\n\n  // the code below will insert each new entry into the context and assign the appropriate\n  // flags and index values to them. It's important this runs at the end of this function\n  // because the context, property offset and index values have all been computed just before.\n  for (let i = 0; i < totalNewEntries; i++) {\n    const entryIsClassBased = i >= filteredStyleBindingNames.length;\n    const adjustedIndex = entryIsClassBased ? (i - filteredStyleBindingNames.length) : i;\n    const propName = entryIsClassBased ? filteredClassBindingNames[adjustedIndex] :\n                                         filteredStyleBindingNames[adjustedIndex];\n\n    let multiIndex, singleIndex;\n    if (entryIsClassBased) {\n      multiIndex = multiClassesStartIndex +\n          ((totalCurrentClassBindings + adjustedIndex) * StylingIndex.Size);\n      singleIndex = singleClassesStartIndex +\n          ((totalCurrentClassBindings + adjustedIndex) * StylingIndex.Size);\n    } else {\n      multiIndex =\n          multiStylesStartIndex + ((totalCurrentStyleBindings + adjustedIndex) * StylingIndex.Size);\n      singleIndex = singleStylesStartIndex +\n          ((totalCurrentStyleBindings + adjustedIndex) * StylingIndex.Size);\n    }\n\n    // if a property is not found in the initial style values list then it\n    // is ALWAYS added incase a follow-up directive introduces the same initial\n    // style/class value later on.\n    let initialValuesToLookup = entryIsClassBased ? initialClasses : initialStyles;\n    let indexForInitial = getInitialStylingValuesIndexOf(initialValuesToLookup, propName);\n    if (indexForInitial === -1) {\n      indexForInitial = initialValuesToLookup.length + InitialStylingValuesIndex.ValueOffset;\n      initialValuesToLookup.push(propName, entryIsClassBased ? false : null);\n    } else {\n      indexForInitial += InitialStylingValuesIndex.ValueOffset;\n    }\n\n    const initialFlag =\n        prepareInitialFlag(context, propName, entryIsClassBased, styleSanitizer || null);\n\n    setFlag(context, singleIndex, pointers(initialFlag, indexForInitial, multiIndex));\n    setProp(context, singleIndex, propName);\n    setValue(context, singleIndex, null);\n    setPlayerBuilderIndex(context, singleIndex, 0, directiveIndex);\n\n    setFlag(context, multiIndex, pointers(initialFlag, indexForInitial, singleIndex));\n    setProp(context, multiIndex, propName);\n    setValue(context, multiIndex, null);\n    setPlayerBuilderIndex(context, multiIndex, 0, directiveIndex);\n  }\n\n  // the total classes/style values are updated so the next time the context is patched\n  // additional style/class bindings from another directive then it knows exactly where\n  // to insert them in the context\n  singlePropOffsetValues[SinglePropOffsetValuesIndex.ClassesCountPosition] =\n      totalCurrentClassBindings + filteredClassBindingNames.length;\n  singlePropOffsetValues[SinglePropOffsetValuesIndex.StylesCountPosition] =\n      totalCurrentStyleBindings + filteredStyleBindingNames.length;\n\n  // there is no initial value flag for the master index since it doesn't\n  // reference an initial style value\n  const masterFlag = pointers(0, 0, multiStylesStartIndex) |\n      (onlyProcessSingleClasses ? StylingFlags.OnlyProcessSingleClasses : 0);\n  setFlag(context, StylingIndex.MasterFlagPosition, masterFlag);\n}\n\n/**\n * Searches through the existing registry of directives\n */\nfunction findOrPatchDirectiveIntoRegistry(\n    context: StylingContext, directiveRef: any, styleSanitizer?: StyleSanitizeFn | null) {\n  const directiveRefs = context[StylingIndex.DirectiveRegistryPosition];\n  const nextOffsetInsertionIndex = context[StylingIndex.SinglePropOffsetPositions].length;\n\n  let directiveIndex: number;\n  const detectedIndex = getDirectiveRegistryValuesIndexOf(directiveRefs, directiveRef);\n\n  if (detectedIndex === -1) {\n    directiveIndex = directiveRefs.length / DirectiveRegistryValuesIndex.Size;\n    directiveRefs.push(directiveRef, nextOffsetInsertionIndex, false, styleSanitizer || null);\n  } else {\n    const singlePropStartPosition =\n        detectedIndex + DirectiveRegistryValuesIndex.SinglePropValuesIndexOffset;\n    if (directiveRefs[singlePropStartPosition] ! >= 0) {\n      // the directive has already been patched into the context\n      return -1;\n    }\n\n    directiveIndex = detectedIndex / DirectiveRegistryValuesIndex.Size;\n\n    // because the directive already existed this means that it was set during elementHostAttrs or\n    // elementStart which means that the binding values were not here. Therefore, the values below\n    // need to be applied so that single class and style properties can be assigned later.\n    const singlePropPositionIndex =\n        detectedIndex + DirectiveRegistryValuesIndex.SinglePropValuesIndexOffset;\n    directiveRefs[singlePropPositionIndex] = nextOffsetInsertionIndex;\n\n    // the sanitizer is also apart of the binding process and will be used when bindings are\n    // applied.\n    const styleSanitizerIndex = detectedIndex + DirectiveRegistryValuesIndex.StyleSanitizerOffset;\n    directiveRefs[styleSanitizerIndex] = styleSanitizer || null;\n  }\n\n  return directiveIndex;\n}\n\nfunction getMatchingBindingIndex(\n    context: StylingContext, bindingName: string, start: number, end: number) {\n  for (let j = start; j < end; j += StylingIndex.Size) {\n    if (getProp(context, j) === bindingName) return j;\n  }\n  return -1;\n}\n\n/**\n * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n * applied to the element once `renderStyling` is called.\n *\n * All missing styles/class (any values that are not provided in the new `styles`\n * or `classes` params) will resolve to `null` within their respective positions\n * in the context.\n *\n * @param context The styling context that will be updated with the\n *    newly provided style values.\n * @param classesInput The key/value map of CSS class names that will be used for the update.\n * @param stylesInput The key/value map of CSS styles that will be used for the update.\n */\nexport function updateStylingMap(\n    context: StylingContext, classesInput: {[key: string]: any} | string |\n        BoundPlayerFactory<null|string|{[key: string]: any}>| NO_CHANGE | null,\n    stylesInput?: {[key: string]: any} | BoundPlayerFactory<null|{[key: string]: any}>| NO_CHANGE |\n        null,\n    directiveRef?: any): void {\n  stylesInput = stylesInput || null;\n\n  const directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n  const element = context[StylingIndex.ElementPosition] !as HTMLElement;\n  const classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n      new ClassAndStylePlayerBuilder(classesInput as any, element, BindingType.Class) :\n      null;\n  const stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n      new ClassAndStylePlayerBuilder(stylesInput as any, element, BindingType.Style) :\n      null;\n\n  const classesValue = classesPlayerBuilder ?\n      (classesInput as BoundPlayerFactory<{[key: string]: any}|string>) !.value :\n      classesInput;\n  const stylesValue = stylesPlayerBuilder ? stylesInput !['value'] : stylesInput;\n  // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n  const ignoreAllClassUpdates = limitToSingleClasses(context) || classesValue === NO_CHANGE ||\n      classesValue === context[StylingIndex.CachedClassValueOrInitialClassString];\n  const ignoreAllStyleUpdates =\n      stylesValue === NO_CHANGE || stylesValue === context[StylingIndex.CachedStyleValue];\n  if (ignoreAllClassUpdates && ignoreAllStyleUpdates) return;\n\n  context[StylingIndex.CachedClassValueOrInitialClassString] = classesValue;\n  context[StylingIndex.CachedStyleValue] = stylesValue;\n\n  let classNames: string[] = EMPTY_ARRAY;\n  let applyAllClasses = false;\n  let playerBuildersAreDirty = false;\n\n  const classesPlayerBuilderIndex =\n      classesPlayerBuilder ? PlayerIndex.ClassMapPlayerBuilderPosition : 0;\n  if (hasPlayerBuilderChanged(\n          context, classesPlayerBuilder, PlayerIndex.ClassMapPlayerBuilderPosition)) {\n    setPlayerBuilder(context, classesPlayerBuilder, PlayerIndex.ClassMapPlayerBuilderPosition);\n    playerBuildersAreDirty = true;\n  }\n\n  const stylesPlayerBuilderIndex =\n      stylesPlayerBuilder ? PlayerIndex.StyleMapPlayerBuilderPosition : 0;\n  if (hasPlayerBuilderChanged(\n          context, stylesPlayerBuilder, PlayerIndex.StyleMapPlayerBuilderPosition)) {\n    setPlayerBuilder(context, stylesPlayerBuilder, PlayerIndex.StyleMapPlayerBuilderPosition);\n    playerBuildersAreDirty = true;\n  }\n\n  // each time a string-based value pops up then it shouldn't require a deep\n  // check of what's changed.\n  if (!ignoreAllClassUpdates) {\n    if (typeof classesValue == 'string') {\n      classNames = classesValue.split(/\\s+/);\n      // this boolean is used to avoid having to create a key/value map of `true` values\n      // since a classname string implies that all those classes are added\n      applyAllClasses = true;\n    } else {\n      classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARRAY;\n    }\n  }\n\n  const classes = (classesValue || EMPTY_OBJ) as{[key: string]: any};\n  const styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARRAY;\n  const styles = stylesValue || EMPTY_OBJ;\n\n  const classesStartIndex = styleProps.length;\n  let multiStartIndex = getMultiStartIndex(context);\n\n  let dirty = false;\n  let ctxIndex = multiStartIndex;\n\n  let propIndex = 0;\n  const propLimit = styleProps.length + classNames.length;\n\n  // the main loop here will try and figure out how the shape of the provided\n  // styles differ with respect to the context. Later if the context/styles/classes\n  // are off-balance then they will be dealt in another loop after this one\n  while (ctxIndex < context.length && propIndex < propLimit) {\n    const isClassBased = propIndex >= classesStartIndex;\n    const processValue =\n        (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n\n    // when there is a cache-hit for a string-based class then we should\n    // avoid doing any work diffing any of the changes\n    if (processValue) {\n      const adjustedPropIndex = isClassBased ? propIndex - classesStartIndex : propIndex;\n      const newProp: string =\n          isClassBased ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n      const newValue: string|boolean =\n          isClassBased ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n      const playerBuilderIndex =\n          isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n\n      const prop = getProp(context, ctxIndex);\n      if (prop === newProp) {\n        const value = getValue(context, ctxIndex);\n        const flag = getPointers(context, ctxIndex);\n        setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n\n        if (hasValueChanged(flag, value, newValue)) {\n          setValue(context, ctxIndex, newValue);\n          playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n\n          const initialValue = getInitialValue(context, flag);\n\n          // SKIP IF INITIAL CHECK\n          // If the former `value` is `null` then it means that an initial value\n          // could be being rendered on screen. If that is the case then there is\n          // no point in updating the value incase it matches. In other words if the\n          // new value is the exact same as the previously rendered value (which\n          // happens to be the initial value) then do nothing.\n          if (value != null || hasValueChanged(flag, initialValue, newValue)) {\n            setDirty(context, ctxIndex, true);\n            dirty = true;\n          }\n        }\n      } else {\n        const indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n        if (indexOfEntry > 0) {\n          // it was found at a later point ... just swap the values\n          const valueToCompare = getValue(context, indexOfEntry);\n          const flagToCompare = getPointers(context, indexOfEntry);\n          swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n          if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n            const initialValue = getInitialValue(context, flagToCompare);\n            setValue(context, ctxIndex, newValue);\n\n            // same if statement logic as above (look for SKIP IF INITIAL CHECK).\n            if (valueToCompare != null || hasValueChanged(flagToCompare, initialValue, newValue)) {\n              setDirty(context, ctxIndex, true);\n              playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n              dirty = true;\n            }\n          }\n        } else {\n          // we only care to do this if the insertion is in the middle\n          const newFlag = prepareInitialFlag(\n              context, newProp, isClassBased, getStyleSanitizer(context, directiveIndex));\n          playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n          insertNewMultiProperty(\n              context, ctxIndex, isClassBased, newProp, newFlag, newValue, directiveIndex,\n              playerBuilderIndex);\n          dirty = true;\n        }\n      }\n    }\n\n    ctxIndex += StylingIndex.Size;\n    propIndex++;\n  }\n\n  // this means that there are left-over values in the context that\n  // were not included in the provided styles/classes and in this\n  // case the  goal is to \"remove\" them from the context (by nullifying)\n  while (ctxIndex < context.length) {\n    const flag = getPointers(context, ctxIndex);\n    const isClassBased = (flag & StylingFlags.Class) === StylingFlags.Class;\n    const processValue =\n        (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n    if (processValue) {\n      const value = getValue(context, ctxIndex);\n      const doRemoveValue = valueExists(value, isClassBased);\n      if (doRemoveValue) {\n        setDirty(context, ctxIndex, true);\n        setValue(context, ctxIndex, null);\n\n        // we keep the player factory the same so that the `nulled` value can\n        // be instructed into the player because removing a style and/or a class\n        // is a valid animation player instruction.\n        const playerBuilderIndex =\n            isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n        setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n        dirty = true;\n      }\n    }\n    ctxIndex += StylingIndex.Size;\n  }\n\n  // this means that there are left-over properties in the context that\n  // were not detected in the context during the loop above. In that\n  // case we want to add the new entries into the list\n  const sanitizer = getStyleSanitizer(context, directiveIndex);\n  while (propIndex < propLimit) {\n    const isClassBased = propIndex >= classesStartIndex;\n    const processValue =\n        (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n    if (processValue) {\n      const adjustedPropIndex = isClassBased ? propIndex - classesStartIndex : propIndex;\n      const prop = isClassBased ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n      const value: string|boolean =\n          isClassBased ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n      const flag = prepareInitialFlag(context, prop, isClassBased, sanitizer) | StylingFlags.Dirty;\n      const playerBuilderIndex =\n          isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n      const ctxIndex = context.length;\n      context.push(flag, prop, value, 0);\n      setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n      dirty = true;\n    }\n    propIndex++;\n  }\n\n  if (dirty) {\n    setContextDirty(context, true);\n    setDirectiveDirty(context, directiveIndex, true);\n  }\n\n  if (playerBuildersAreDirty) {\n    setContextPlayersDirty(context, true);\n  }\n}\n\n/**\n * This method will toggle the referenced CSS class (by the provided index)\n * within the given context.\n *\n * @param context The styling context that will be updated with the\n *    newly provided class value.\n * @param offset The index of the CSS class which is being updated.\n * @param addOrRemove Whether or not to add or remove the CSS class\n */\nexport function updateClassProp(\n    context: StylingContext, offset: number, addOrRemove: boolean | BoundPlayerFactory<boolean>,\n    directiveRef?: any): void {\n  _updateSingleStylingValue(context, offset, addOrRemove, true, directiveRef);\n}\n\n/**\n * Sets and resolves a single style value on the provided `StylingContext` so\n * that they can be applied to the element once `renderStyling` is called.\n *\n * Note that prop-level styling values are considered higher priority than any styling that\n * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n * then any styles/classes that have been applied using this function will be considered first\n * (then multi values second and then initial values as a backup).\n *\n * @param context The styling context that will be updated with the\n *    newly provided style value.\n * @param offset The index of the property which is being updated.\n * @param value The CSS style value that will be assigned\n * @param directiveRef an optional reference to the directive responsible\n *    for this binding change. If present then style binding will only\n *    actualize if the directive has ownership over this binding\n *    (see styling.ts#directives for more information about the algorithm).\n */\nexport function updateStyleProp(\n    context: StylingContext, offset: number,\n    input: string | boolean | null | BoundPlayerFactory<string|boolean|null>,\n    directiveRef?: any): void {\n  _updateSingleStylingValue(context, offset, input, false, directiveRef);\n}\n\nfunction _updateSingleStylingValue(\n    context: StylingContext, offset: number,\n    input: string | boolean | null | BoundPlayerFactory<string|boolean|null>, isClassBased: boolean,\n    directiveRef: any): void {\n  const directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n  const singleIndex = getSinglePropIndexValue(context, directiveIndex, offset, isClassBased);\n  const currValue = getValue(context, singleIndex);\n  const currFlag = getPointers(context, singleIndex);\n  const currDirective = getDirectiveIndexFromEntry(context, singleIndex);\n  const value: string|boolean|null = (input instanceof BoundPlayerFactory) ? input.value : input;\n\n  if (hasValueChanged(currFlag, currValue, value) &&\n      allowValueChange(currValue, value, currDirective, directiveIndex)) {\n    const isClassBased = (currFlag & StylingFlags.Class) === StylingFlags.Class;\n    const element = context[StylingIndex.ElementPosition] !as HTMLElement;\n    const playerBuilder = input instanceof BoundPlayerFactory ?\n        new ClassAndStylePlayerBuilder(\n            input as any, element, isClassBased ? BindingType.Class : BindingType.Style) :\n        null;\n    const value = (playerBuilder ? (input as BoundPlayerFactory<any>).value : input) as string |\n        boolean | null;\n    const currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n\n    let playerBuildersAreDirty = false;\n    let playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n    if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n      const newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n      playerBuilderIndex = playerBuilder ? newIndex : 0;\n      playerBuildersAreDirty = true;\n    }\n\n    if (playerBuildersAreDirty || currDirective !== directiveIndex) {\n      setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex, directiveIndex);\n    }\n\n    if (currDirective !== directiveIndex) {\n      const prop = getProp(context, singleIndex);\n      const sanitizer = getStyleSanitizer(context, directiveIndex);\n      setSanitizeFlag(context, singleIndex, (sanitizer && sanitizer(prop)) ? true : false);\n    }\n\n    // the value will always get updated (even if the dirty flag is skipped)\n    setValue(context, singleIndex, value);\n    const indexForMulti = getMultiOrSingleIndex(currFlag);\n\n    // if the value is the same in the multi-area then there's no point in re-assembling\n    const valueForMulti = getValue(context, indexForMulti);\n    if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value)) {\n      let multiDirty = false;\n      let singleDirty = true;\n\n      // only when the value is set to `null` should the multi-value get flagged\n      if (!valueExists(value, isClassBased) && valueExists(valueForMulti, isClassBased)) {\n        multiDirty = true;\n        singleDirty = false;\n      }\n\n      setDirty(context, indexForMulti, multiDirty);\n      setDirty(context, singleIndex, singleDirty);\n      setDirectiveDirty(context, directiveIndex, true);\n      setContextDirty(context, true);\n    }\n\n    if (playerBuildersAreDirty) {\n      setContextPlayersDirty(context, true);\n    }\n  }\n}\n\n\n/**\n * Renders all queued styling using a renderer onto the given element.\n *\n * This function works by rendering any styles (that have been applied\n * using `updateStylingMap`) and any classes (that have been applied using\n * `updateStyleProp`) onto the provided element using the provided renderer.\n * Just before the styles/classes are rendered a final key/value style map\n * will be assembled (if `styleStore` or `classStore` are provided).\n *\n * @param lElement the element that the styles will be rendered on\n * @param context The styling context that will be used to determine\n *      what styles will be rendered\n * @param renderer the renderer that will be used to apply the styling\n * @param classesStore if provided, the updated class values will be applied\n *    to this key/value map instead of being renderered via the renderer.\n * @param stylesStore if provided, the updated style values will be applied\n *    to this key/value map instead of being renderered via the renderer.\n * @param directiveRef an optional directive that will be used to target which\n *    styling values are rendered. If left empty, only the bindings that are\n *    registered on the template will be rendered.\n * @returns number the total amount of players that got queued for animation (if any)\n */\nexport function renderStyling(\n    context: StylingContext, renderer: Renderer3, rootOrView: RootContext | LView,\n    isFirstRender: boolean, classesStore?: BindingStore | null, stylesStore?: BindingStore | null,\n    directiveRef?: any): number {\n  let totalPlayersQueued = 0;\n  const targetDirectiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n\n  if (isContextDirty(context) && isDirectiveDirty(context, targetDirectiveIndex)) {\n    const flushPlayerBuilders: any =\n        context[StylingIndex.MasterFlagPosition] & StylingFlags.PlayerBuildersDirty;\n    const native = context[StylingIndex.ElementPosition] !;\n    const multiStartIndex = getMultiStartIndex(context);\n    const onlySingleClasses = limitToSingleClasses(context);\n\n    let stillDirty = false;\n    for (let i = StylingIndex.SingleStylesStartPosition; i < context.length;\n         i += StylingIndex.Size) {\n      // there is no point in rendering styles that have not changed on screen\n      if (isDirty(context, i)) {\n        const flag = getPointers(context, i);\n        const directiveIndex = getDirectiveIndexFromEntry(context, i);\n        if (targetDirectiveIndex !== directiveIndex) {\n          stillDirty = true;\n          continue;\n        }\n\n        const prop = getProp(context, i);\n        const value = getValue(context, i);\n        const styleSanitizer =\n            (flag & StylingFlags.Sanitize) ? getStyleSanitizer(context, directiveIndex) : null;\n        const playerBuilder = getPlayerBuilder(context, i);\n        const isClassBased = flag & StylingFlags.Class ? true : false;\n        const isInSingleRegion = i < multiStartIndex;\n        const readInitialValue = !isClassBased || !onlySingleClasses;\n\n        let valueToApply: string|boolean|null = value;\n\n        // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n        // this check implies that a single value was removed and we\n        // should now defer to a multi value and use that (if set).\n        if (isInSingleRegion && !valueExists(valueToApply, isClassBased)) {\n          // single values ALWAYS have a reference to a multi index\n          const multiIndex = getMultiOrSingleIndex(flag);\n          valueToApply = getValue(context, multiIndex);\n        }\n\n        // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n        // the initial value will always be a string or null,\n        // therefore we can safely adopt it incase there's nothing else\n        // note that this should always be a falsy check since `false` is used\n        // for both class and style comparisons (styles can't be false and false\n        // classes are turned off and should therefore defer to their initial values)\n        // Note that we ignore class-based deferals because otherwise a class can never\n        // be removed in the case that it exists as true in the initial classes list...\n        if (!isClassBased && !valueExists(valueToApply, isClassBased) && readInitialValue) {\n          valueToApply = getInitialValue(context, flag);\n        }\n\n        // if the first render is true then we do not want to start applying falsy\n        // values to the DOM element's styling. Otherwise then we know there has\n        // been a change and even if it's falsy then it's removing something that\n        // was truthy before.\n        const doApplyValue = isFirstRender ? valueToApply : true;\n        if (doApplyValue) {\n          if (isClassBased) {\n            setClass(\n                native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n          } else {\n            setStyle(\n                native, prop, valueToApply as string | null, renderer, styleSanitizer, stylesStore,\n                playerBuilder);\n          }\n        }\n\n        setDirty(context, i, false);\n      }\n    }\n\n    if (flushPlayerBuilders) {\n      const rootContext =\n          Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView as RootContext;\n      const playerContext = getPlayerContext(context) !;\n      const playersStartIndex = playerContext[PlayerIndex.NonBuilderPlayersStart];\n      for (let i = PlayerIndex.PlayerBuildersStartPosition; i < playersStartIndex;\n           i += PlayerIndex.PlayerAndPlayerBuildersTupleSize) {\n        const builder = playerContext[i] as ClassAndStylePlayerBuilder<any>| null;\n        const playerInsertionIndex = i + PlayerIndex.PlayerOffsetPosition;\n        const oldPlayer = playerContext[playerInsertionIndex] as Player | null;\n        if (builder) {\n          const player = builder.buildPlayer(oldPlayer, isFirstRender);\n          if (player !== undefined) {\n            if (player != null) {\n              const wasQueued = addPlayerInternal(\n                  playerContext, rootContext, native as HTMLElement, player, playerInsertionIndex);\n              wasQueued && totalPlayersQueued++;\n            }\n            if (oldPlayer) {\n              oldPlayer.destroy();\n            }\n          }\n        } else if (oldPlayer) {\n          // the player builder has been removed ... therefore we should delete the associated\n          // player\n          oldPlayer.destroy();\n        }\n      }\n      setContextPlayersDirty(context, false);\n    }\n\n    setDirectiveDirty(context, targetDirectiveIndex, false);\n    setContextDirty(context, stillDirty);\n  }\n\n  return totalPlayersQueued;\n}\n\n/**\n * This function renders a given CSS prop/value entry using the\n * provided renderer. If a `store` value is provided then\n * that will be used a render context instead of the provided\n * renderer.\n *\n * @param native the DOM Element\n * @param prop the CSS style property that will be rendered\n * @param value the CSS style value that will be rendered\n * @param renderer\n * @param store an optional key/value map that will be used as a context to render styles on\n */\nexport function setStyle(\n    native: any, prop: string, value: string | null, renderer: Renderer3,\n    sanitizer: StyleSanitizeFn | null, store?: BindingStore | null,\n    playerBuilder?: ClassAndStylePlayerBuilder<any>| null) {\n  value = sanitizer && value ? sanitizer(prop, value) : value;\n  if (store || playerBuilder) {\n    if (store) {\n      store.setValue(prop, value);\n    }\n    if (playerBuilder) {\n      playerBuilder.setValue(prop, value);\n    }\n  } else if (value) {\n    value = value.toString();  // opacity, z-index and flexbox all have number values which may not\n                               // assign as numbers\n    ngDevMode && ngDevMode.rendererSetStyle++;\n    isProceduralRenderer(renderer) ?\n        renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n        native['style'].setProperty(prop, value);\n  } else {\n    ngDevMode && ngDevMode.rendererRemoveStyle++;\n    isProceduralRenderer(renderer) ?\n        renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n        native['style'].removeProperty(prop);\n  }\n}\n\n/**\n * This function renders a given CSS class value using the provided\n * renderer (by adding or removing it from the provided element).\n * If a `store` value is provided then that will be used a render\n * context instead of the provided renderer.\n *\n * @param native the DOM Element\n * @param prop the CSS style property that will be rendered\n * @param value the CSS style value that will be rendered\n * @param renderer\n * @param store an optional key/value map that will be used as a context to render styles on\n */\nfunction setClass(\n    native: any, className: string, add: boolean, renderer: Renderer3, store?: BindingStore | null,\n    playerBuilder?: ClassAndStylePlayerBuilder<any>| null) {\n  if (store || playerBuilder) {\n    if (store) {\n      store.setValue(className, add);\n    }\n    if (playerBuilder) {\n      playerBuilder.setValue(className, add);\n    }\n  } else if (add) {\n    ngDevMode && ngDevMode.rendererAddClass++;\n    isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                                     native['classList'].add(className);\n  } else {\n    ngDevMode && ngDevMode.rendererRemoveClass++;\n    isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                                     native['classList'].remove(className);\n  }\n}\n\nfunction setSanitizeFlag(context: StylingContext, index: number, sanitizeYes: boolean) {\n  if (sanitizeYes) {\n    (context[index] as number) |= StylingFlags.Sanitize;\n  } else {\n    (context[index] as number) &= ~StylingFlags.Sanitize;\n  }\n}\n\nfunction setDirty(context: StylingContext, index: number, isDirtyYes: boolean) {\n  const adjustedIndex =\n      index >= StylingIndex.SingleStylesStartPosition ? (index + StylingIndex.FlagsOffset) : index;\n  if (isDirtyYes) {\n    (context[adjustedIndex] as number) |= StylingFlags.Dirty;\n  } else {\n    (context[adjustedIndex] as number) &= ~StylingFlags.Dirty;\n  }\n}\n\nfunction isDirty(context: StylingContext, index: number): boolean {\n  const adjustedIndex =\n      index >= StylingIndex.SingleStylesStartPosition ? (index + StylingIndex.FlagsOffset) : index;\n  return ((context[adjustedIndex] as number) & StylingFlags.Dirty) == StylingFlags.Dirty;\n}\n\nexport function isClassBasedValue(context: StylingContext, index: number): boolean {\n  const adjustedIndex =\n      index >= StylingIndex.SingleStylesStartPosition ? (index + StylingIndex.FlagsOffset) : index;\n  return ((context[adjustedIndex] as number) & StylingFlags.Class) == StylingFlags.Class;\n}\n\nfunction isSanitizable(context: StylingContext, index: number): boolean {\n  const adjustedIndex =\n      index >= StylingIndex.SingleStylesStartPosition ? (index + StylingIndex.FlagsOffset) : index;\n  return ((context[adjustedIndex] as number) & StylingFlags.Sanitize) == StylingFlags.Sanitize;\n}\n\nfunction pointers(configFlag: number, staticIndex: number, dynamicIndex: number) {\n  return (configFlag & StylingFlags.BitMask) | (staticIndex << StylingFlags.BitCountSize) |\n      (dynamicIndex << (StylingIndex.BitCountSize + StylingFlags.BitCountSize));\n}\n\nfunction getInitialValue(context: StylingContext, flag: number): string|boolean|null {\n  const index = getInitialIndex(flag);\n  const entryIsClassBased = flag & StylingFlags.Class;\n  const initialValues = entryIsClassBased ? context[StylingIndex.InitialClassValuesPosition] :\n                                            context[StylingIndex.InitialStyleValuesPosition];\n  return initialValues[index];\n}\n\nfunction getInitialIndex(flag: number): number {\n  return (flag >> StylingFlags.BitCountSize) & StylingIndex.BitMask;\n}\n\nfunction getMultiOrSingleIndex(flag: number): number {\n  const index =\n      (flag >> (StylingIndex.BitCountSize + StylingFlags.BitCountSize)) & StylingIndex.BitMask;\n  return index >= StylingIndex.SingleStylesStartPosition ? index : -1;\n}\n\nfunction getMultiStartIndex(context: StylingContext): number {\n  return getMultiOrSingleIndex(context[StylingIndex.MasterFlagPosition]) as number;\n}\n\nfunction setProp(context: StylingContext, index: number, prop: string) {\n  context[index + StylingIndex.PropertyOffset] = prop;\n}\n\nfunction setValue(context: StylingContext, index: number, value: string | null | boolean) {\n  context[index + StylingIndex.ValueOffset] = value;\n}\n\nfunction hasPlayerBuilderChanged(\n    context: StylingContext, builder: ClassAndStylePlayerBuilder<any>| null, index: number) {\n  const playerContext = context[StylingIndex.PlayerContext] !;\n  if (builder) {\n    if (!playerContext || index === 0) {\n      return true;\n    }\n  } else if (!playerContext) {\n    return false;\n  }\n  return playerContext[index] !== builder;\n}\n\nfunction setPlayerBuilder(\n    context: StylingContext, builder: ClassAndStylePlayerBuilder<any>| null,\n    insertionIndex: number): number {\n  let playerContext = context[StylingIndex.PlayerContext] || allocPlayerContext(context);\n  if (insertionIndex > 0) {\n    playerContext[insertionIndex] = builder;\n  } else {\n    insertionIndex = playerContext[PlayerIndex.NonBuilderPlayersStart];\n    playerContext.splice(insertionIndex, 0, builder, null);\n    playerContext[PlayerIndex.NonBuilderPlayersStart] +=\n        PlayerIndex.PlayerAndPlayerBuildersTupleSize;\n  }\n  return insertionIndex;\n}\n\nexport function directiveOwnerPointers(directiveIndex: number, playerIndex: number) {\n  return (playerIndex << DirectiveOwnerAndPlayerBuilderIndex.BitCountSize) | directiveIndex;\n}\n\nfunction setPlayerBuilderIndex(\n    context: StylingContext, index: number, playerBuilderIndex: number, directiveIndex: number) {\n  const value = directiveOwnerPointers(directiveIndex, playerBuilderIndex);\n  context[index + StylingIndex.PlayerBuilderIndexOffset] = value;\n}\n\nfunction getPlayerBuilderIndex(context: StylingContext, index: number): number {\n  const flag = context[index + StylingIndex.PlayerBuilderIndexOffset] as number;\n  const playerBuilderIndex = (flag >> DirectiveOwnerAndPlayerBuilderIndex.BitCountSize) &\n      DirectiveOwnerAndPlayerBuilderIndex.BitMask;\n  return playerBuilderIndex;\n}\n\nfunction getPlayerBuilder(context: StylingContext, index: number): ClassAndStylePlayerBuilder<any>|\n    null {\n  const playerBuilderIndex = getPlayerBuilderIndex(context, index);\n  if (playerBuilderIndex) {\n    const playerContext = context[StylingIndex.PlayerContext];\n    if (playerContext) {\n      return playerContext[playerBuilderIndex] as ClassAndStylePlayerBuilder<any>| null;\n    }\n  }\n  return null;\n}\n\nfunction setFlag(context: StylingContext, index: number, flag: number) {\n  const adjustedIndex =\n      index === StylingIndex.MasterFlagPosition ? index : (index + StylingIndex.FlagsOffset);\n  context[adjustedIndex] = flag;\n}\n\nfunction getPointers(context: StylingContext, index: number): number {\n  const adjustedIndex =\n      index === StylingIndex.MasterFlagPosition ? index : (index + StylingIndex.FlagsOffset);\n  return context[adjustedIndex] as number;\n}\n\nexport function getValue(context: StylingContext, index: number): string|boolean|null {\n  return context[index + StylingIndex.ValueOffset] as string | boolean | null;\n}\n\nexport function getProp(context: StylingContext, index: number): string {\n  return context[index + StylingIndex.PropertyOffset] as string;\n}\n\nexport function isContextDirty(context: StylingContext): boolean {\n  return isDirty(context, StylingIndex.MasterFlagPosition);\n}\n\nexport function limitToSingleClasses(context: StylingContext) {\n  return context[StylingIndex.MasterFlagPosition] & StylingFlags.OnlyProcessSingleClasses;\n}\n\nexport function setContextDirty(context: StylingContext, isDirtyYes: boolean): void {\n  setDirty(context, StylingIndex.MasterFlagPosition, isDirtyYes);\n}\n\nexport function setContextPlayersDirty(context: StylingContext, isDirtyYes: boolean): void {\n  if (isDirtyYes) {\n    (context[StylingIndex.MasterFlagPosition] as number) |= StylingFlags.PlayerBuildersDirty;\n  } else {\n    (context[StylingIndex.MasterFlagPosition] as number) &= ~StylingFlags.PlayerBuildersDirty;\n  }\n}\n\nfunction findEntryPositionByProp(\n    context: StylingContext, prop: string, startIndex?: number): number {\n  for (let i = (startIndex || 0) + StylingIndex.PropertyOffset; i < context.length;\n       i += StylingIndex.Size) {\n    const thisProp = context[i];\n    if (thisProp == prop) {\n      return i - StylingIndex.PropertyOffset;\n    }\n  }\n  return -1;\n}\n\nfunction swapMultiContextEntries(context: StylingContext, indexA: number, indexB: number) {\n  const tmpValue = getValue(context, indexA);\n  const tmpProp = getProp(context, indexA);\n  const tmpFlag = getPointers(context, indexA);\n  const tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n\n  let flagA = tmpFlag;\n  let flagB = getPointers(context, indexB);\n\n  const singleIndexA = getMultiOrSingleIndex(flagA);\n  if (singleIndexA >= 0) {\n    const _flag = getPointers(context, singleIndexA);\n    const _initial = getInitialIndex(_flag);\n    setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n  }\n\n  const singleIndexB = getMultiOrSingleIndex(flagB);\n  if (singleIndexB >= 0) {\n    const _flag = getPointers(context, singleIndexB);\n    const _initial = getInitialIndex(_flag);\n    setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n  }\n\n  setValue(context, indexA, getValue(context, indexB));\n  setProp(context, indexA, getProp(context, indexB));\n  setFlag(context, indexA, getPointers(context, indexB));\n  const playerIndexA = getPlayerBuilderIndex(context, indexB);\n  const directiveIndexA = 0;\n  setPlayerBuilderIndex(context, indexA, playerIndexA, directiveIndexA);\n\n  setValue(context, indexB, tmpValue);\n  setProp(context, indexB, tmpProp);\n  setFlag(context, indexB, tmpFlag);\n  setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex, directiveIndexA);\n}\n\nfunction updateSinglePointerValues(context: StylingContext, indexStartPosition: number) {\n  for (let i = indexStartPosition; i < context.length; i += StylingIndex.Size) {\n    const multiFlag = getPointers(context, i);\n    const singleIndex = getMultiOrSingleIndex(multiFlag);\n    if (singleIndex > 0) {\n      const singleFlag = getPointers(context, singleIndex);\n      const initialIndexForSingle = getInitialIndex(singleFlag);\n      const flagValue = (isDirty(context, singleIndex) ? StylingFlags.Dirty : StylingFlags.None) |\n          (isClassBasedValue(context, singleIndex) ? StylingFlags.Class : StylingFlags.None) |\n          (isSanitizable(context, singleIndex) ? StylingFlags.Sanitize : StylingFlags.None);\n      const updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n      setFlag(context, singleIndex, updatedFlag);\n    }\n  }\n}\n\nfunction insertNewMultiProperty(\n    context: StylingContext, index: number, classBased: boolean, name: string, flag: number,\n    value: string | boolean, directiveIndex: number, playerIndex: number): void {\n  const doShift = index < context.length;\n\n  // prop does not exist in the list, add it in\n  context.splice(\n      index, 0, flag | StylingFlags.Dirty | (classBased ? StylingFlags.Class : StylingFlags.None),\n      name, value, 0);\n  setPlayerBuilderIndex(context, index, playerIndex, directiveIndex);\n\n  if (doShift) {\n    // because the value was inserted midway into the array then we\n    // need to update all the shifted multi values' single value\n    // pointers to point to the newly shifted location\n    updateSinglePointerValues(context, index + StylingIndex.Size);\n  }\n}\n\nfunction valueExists(value: string | null | boolean, isClassBased?: boolean) {\n  if (isClassBased) {\n    return value ? true : false;\n  }\n  return value !== null;\n}\n\nfunction prepareInitialFlag(\n    context: StylingContext, prop: string, entryIsClassBased: boolean,\n    sanitizer?: StyleSanitizeFn | null) {\n  let flag = (sanitizer && sanitizer(prop)) ? StylingFlags.Sanitize : StylingFlags.None;\n\n  let initialIndex: number;\n  if (entryIsClassBased) {\n    flag |= StylingFlags.Class;\n    initialIndex =\n        getInitialStylingValuesIndexOf(context[StylingIndex.InitialClassValuesPosition], prop);\n  } else {\n    initialIndex =\n        getInitialStylingValuesIndexOf(context[StylingIndex.InitialStyleValuesPosition], prop);\n  }\n\n  initialIndex = initialIndex > 0 ? (initialIndex + InitialStylingValuesIndex.ValueOffset) : 0;\n  return pointers(flag, initialIndex, 0);\n}\n\nfunction hasValueChanged(\n    flag: number, a: string | boolean | null, b: string | boolean | null): boolean {\n  const isClassBased = flag & StylingFlags.Class;\n  const hasValues = a && b;\n  const usesSanitizer = flag & StylingFlags.Sanitize;\n  // the toString() comparison ensures that a value is checked\n  // ... otherwise (during sanitization bypassing) the === comparsion\n  // would fail since a new String() instance is created\n  if (!isClassBased && hasValues && usesSanitizer) {\n    // we know for sure we're dealing with strings at this point\n    return (a as string).toString() !== (b as string).toString();\n  }\n\n  // everything else is safe to check with a normal equality check\n  return a !== b;\n}\n\nexport class ClassAndStylePlayerBuilder<T> implements PlayerBuilder {\n  private _values: {[key: string]: string | null} = {};\n  private _dirty = false;\n  private _factory: BoundPlayerFactory<T>;\n\n  constructor(factory: PlayerFactory, private _element: HTMLElement, private _type: BindingType) {\n    this._factory = factory as any;\n  }\n\n  setValue(prop: string, value: any) {\n    if (this._values[prop] !== value) {\n      this._values[prop] = value;\n      this._dirty = true;\n    }\n  }\n\n  buildPlayer(currentPlayer: Player|null, isFirstRender: boolean): Player|undefined|null {\n    // if no values have been set here then this means the binding didn't\n    // change and therefore the binding values were not updated through\n    // `setValue` which means no new player will be provided.\n    if (this._dirty) {\n      const player = this._factory.fn(\n          this._element, this._type, this._values !, isFirstRender, currentPlayer || null);\n      this._values = {};\n      this._dirty = false;\n      return player;\n    }\n\n    return undefined;\n  }\n}\n\n/**\n * Used to provide a summary of the state of the styling context.\n *\n * This is an internal interface that is only used inside of test tooling to\n * help summarize what's going on within the styling context. None of this code\n * is designed to be exported publicly and will, therefore, be tree-shaken away\n * during runtime.\n */\nexport interface LogSummary {\n  name: string;          //\n  staticIndex: number;   //\n  dynamicIndex: number;  //\n  value: number;         //\n  flags: {\n    dirty: boolean;                     //\n    class: boolean;                     //\n    sanitize: boolean;                  //\n    playerBuildersDirty: boolean;       //\n    onlyProcessSingleClasses: boolean;  //\n    bindingAllocationLocked: boolean;   //\n  };\n}\n\n/**\n * This function is not designed to be used in production.\n * It is a utility tool for debugging and testing and it\n * will automatically be tree-shaken away during production.\n */\nexport function generateConfigSummary(source: number): LogSummary;\nexport function generateConfigSummary(source: StylingContext): LogSummary;\nexport function generateConfigSummary(source: StylingContext, index: number): LogSummary;\nexport function generateConfigSummary(source: number | StylingContext, index?: number): LogSummary {\n  let flag, name = 'config value for ';\n  if (Array.isArray(source)) {\n    if (index) {\n      name += 'index: ' + index;\n    } else {\n      name += 'master config';\n    }\n    index = index || StylingIndex.MasterFlagPosition;\n    flag = source[index] as number;\n  } else {\n    flag = source;\n    name += 'index: ' + flag;\n  }\n  const dynamicIndex = getMultiOrSingleIndex(flag);\n  const staticIndex = getInitialIndex(flag);\n  return {\n    name,\n    staticIndex,\n    dynamicIndex,\n    value: flag,\n    flags: {\n      dirty: flag & StylingFlags.Dirty ? true : false,\n      class: flag & StylingFlags.Class ? true : false,\n      sanitize: flag & StylingFlags.Sanitize ? true : false,\n      playerBuildersDirty: flag & StylingFlags.PlayerBuildersDirty ? true : false,\n      onlyProcessSingleClasses: flag & StylingFlags.OnlyProcessSingleClasses ? true : false,\n      bindingAllocationLocked: flag & StylingFlags.BindingAllocationLocked ? true : false,\n    }\n  };\n}\n\nexport function getDirectiveIndexFromEntry(context: StylingContext, index: number) {\n  const value = context[index + StylingIndex.PlayerBuilderIndexOffset] as number;\n  return value & DirectiveOwnerAndPlayerBuilderIndex.BitMask;\n}\n\nfunction getDirectiveIndexFromRegistry(context: StylingContext, directive: any) {\n  const index =\n      getDirectiveRegistryValuesIndexOf(context[StylingIndex.DirectiveRegistryPosition], directive);\n  ngDevMode &&\n      assertNotEqual(\n          index, -1,\n          `The provided directive ${directive} has not been allocated to the element\\'s style/class bindings`);\n  return index > 0 ? index / DirectiveRegistryValuesIndex.Size : 0;\n  // return index / DirectiveRegistryValuesIndex.Size;\n}\n\nfunction getDirectiveRegistryValuesIndexOf(\n    directives: DirectiveRegistryValues, directive: {}): number {\n  for (let i = 0; i < directives.length; i += DirectiveRegistryValuesIndex.Size) {\n    if (directives[i] === directive) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction getInitialStylingValuesIndexOf(keyValues: InitialStylingValues, key: string): number {\n  for (let i = InitialStylingValuesIndex.KeyValueStartPosition; i < keyValues.length;\n       i += InitialStylingValuesIndex.Size) {\n    if (keyValues[i] === key) return i;\n  }\n  return -1;\n}\n\nexport function compareLogSummaries(a: LogSummary, b: LogSummary) {\n  const log: string[] = [];\n  const diffs: [string, any, any][] = [];\n  diffSummaryValues(diffs, 'staticIndex', 'staticIndex', a, b);\n  diffSummaryValues(diffs, 'dynamicIndex', 'dynamicIndex', a, b);\n  Object.keys(a.flags).forEach(\n      name => { diffSummaryValues(diffs, 'flags.' + name, name, a.flags, b.flags); });\n\n  if (diffs.length) {\n    log.push('Log Summaries for:');\n    log.push('  A: ' + a.name);\n    log.push('  B: ' + b.name);\n    log.push('\\n  Differ in the following way (A !== B):');\n    diffs.forEach(result => {\n      const [name, aVal, bVal] = result;\n      log.push('    => ' + name);\n      log.push('    => ' + aVal + ' !== ' + bVal + '\\n');\n    });\n  }\n\n  return log;\n}\n\nfunction diffSummaryValues(result: any[], name: string, prop: string, a: any, b: any) {\n  const aVal = a[prop];\n  const bVal = b[prop];\n  if (aVal !== bVal) {\n    result.push([name, aVal, bVal]);\n  }\n}\n\nfunction getSinglePropIndexValue(\n    context: StylingContext, directiveIndex: number, offset: number, isClassBased: boolean) {\n  const singlePropOffsetRegistryIndex =\n      context[StylingIndex.DirectiveRegistryPosition]\n             [(directiveIndex * DirectiveRegistryValuesIndex.Size) +\n              DirectiveRegistryValuesIndex.SinglePropValuesIndexOffset] as number;\n  const offsets = context[StylingIndex.SinglePropOffsetPositions];\n  const indexForOffset = singlePropOffsetRegistryIndex +\n      SinglePropOffsetValuesIndex.ValueStartPosition +\n      (isClassBased ?\n           offsets\n               [singlePropOffsetRegistryIndex + SinglePropOffsetValuesIndex.StylesCountPosition] :\n           0) +\n      offset;\n  return offsets[indexForOffset];\n}\n\nfunction getStyleSanitizer(context: StylingContext, directiveIndex: number): StyleSanitizeFn|null {\n  const dirs = context[StylingIndex.DirectiveRegistryPosition];\n  const value = dirs\n                    [directiveIndex * DirectiveRegistryValuesIndex.Size +\n                     DirectiveRegistryValuesIndex.StyleSanitizerOffset] ||\n      dirs[DirectiveRegistryValuesIndex.StyleSanitizerOffset] || null;\n  return value as StyleSanitizeFn | null;\n}\n\nfunction isDirectiveDirty(context: StylingContext, directiveIndex: number): boolean {\n  const dirs = context[StylingIndex.DirectiveRegistryPosition];\n  return dirs\n      [directiveIndex * DirectiveRegistryValuesIndex.Size +\n       DirectiveRegistryValuesIndex.DirtyFlagOffset] as boolean;\n}\n\nfunction setDirectiveDirty(\n    context: StylingContext, directiveIndex: number, dirtyYes: boolean): void {\n  const dirs = context[StylingIndex.DirectiveRegistryPosition];\n  dirs\n      [directiveIndex * DirectiveRegistryValuesIndex.Size +\n       DirectiveRegistryValuesIndex.DirtyFlagOffset] = dirtyYes;\n}\n\nfunction allowValueChange(\n    currentValue: string | boolean | null, newValue: string | boolean | null,\n    currentDirectiveOwner: number, newDirectiveOwner: number) {\n  // the code below relies the importance of directive's being tied to their\n  // index value. The index values for each directive are derived from being\n  // registered into the styling context directive registry. The most important\n  // directive is the parent component directive (the template) and each directive\n  // that is added after is considered less important than the previous entry. This\n  // prioritization of directives enables the styling algorithm to decide if a style\n  // or class should be allowed to be updated/replaced incase an earlier directive\n  // already wrote to the exact same style-property or className value. In other words\n  // ... this decides what to do if and when there is a collision.\n  if (currentValue) {\n    if (newValue) {\n      // if a directive index is lower than it always has priority over the\n      // previous directive's value...\n      return newDirectiveOwner <= currentDirectiveOwner;\n    } else {\n      // only write a null value incase it's the same owner writing it.\n      // this avoids having a higher-priority directive write to null\n      // only to have a lesser-priority directive change right to a\n      // non-null value immediately afterwards.\n      return currentDirectiveOwner === newDirectiveOwner;\n    }\n  }\n  return true;\n}\n\n/**\n * This function is only designed to be called for `[class]` bindings when\n * `[ngClass]` (or something that uses `class` as an input) is present. Once\n * directive host bindings fully work for `[class]` and `[style]` inputs\n * then this can be deleted.\n */\nexport function getInitialClassNameValue(context: StylingContext): string {\n  let className = context[StylingIndex.CachedClassValueOrInitialClassString] as string;\n  if (className == null) {\n    className = '';\n    const initialClassValues = context[StylingIndex.InitialClassValuesPosition];\n    for (let i = InitialStylingValuesIndex.KeyValueStartPosition; i < initialClassValues.length;\n         i += InitialStylingValuesIndex.Size) {\n      const isPresent = initialClassValues[i + 1];\n      if (isPresent) {\n        className += (className.length ? ' ' : '') + initialClassValues[i];\n      }\n    }\n    context[StylingIndex.CachedClassValueOrInitialClassString] = className;\n  }\n  return className;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {resolveForwardRef} from '../di/forward_ref';\nimport {InjectionToken} from '../di/injection_token';\nimport {Injector} from '../di/injector';\nimport {InjectFlags} from '../di/injector_compatibility';\nimport {QueryList} from '../linker';\nimport {Sanitizer} from '../sanitization/security';\nimport {StyleSanitizeFn} from '../sanitization/style_sanitizer';\nimport {Type} from '../type';\nimport {normalizeDebugBindingName, normalizeDebugBindingValue} from '../util/ng_reflect';\n\nimport {assertDataInRange, assertDefined, assertEqual, assertHasParent, assertLessThan, assertNotEqual, assertPreviousIsParent} from './assert';\nimport {bindingUpdated, bindingUpdated2, bindingUpdated3, bindingUpdated4} from './bindings';\nimport {attachPatchData, getComponentViewByInstance} from './context_discovery';\nimport {diPublicInInjector, getNodeInjectable, getOrCreateInjectable, getOrCreateNodeInjectorForNode, injectAttributeImpl} from './di';\nimport {throwMultipleComponentError} from './errors';\nimport {executeHooks, executeInitHooks, queueInitHooks, queueLifecycleHooks} from './hooks';\nimport {ACTIVE_INDEX, LContainer, VIEWS} from './interfaces/container';\nimport {ComponentDef, ComponentQuery, ComponentTemplate, DirectiveDef, DirectiveDefListOrFactory, PipeDefListOrFactory, RenderFlags} from './interfaces/definition';\nimport {INJECTOR_BLOOM_PARENT_SIZE, NodeInjectorFactory} from './interfaces/injector';\nimport {AttributeMarker, InitialInputData, InitialInputs, LocalRefExtractor, PropertyAliasValue, PropertyAliases, TAttributes, TContainerNode, TElementContainerNode, TElementNode, TIcuContainerNode, TNode, TNodeFlags, TNodeProviderIndexes, TNodeType, TProjectionNode, TViewNode} from './interfaces/node';\nimport {PlayerFactory} from './interfaces/player';\nimport {CssSelectorList, NG_PROJECT_AS_ATTR_NAME} from './interfaces/projection';\nimport {LQueries} from './interfaces/query';\nimport {ProceduralRenderer3, RComment, RElement, RText, Renderer3, RendererFactory3, isProceduralRenderer} from './interfaces/renderer';\nimport {SanitizerFn} from './interfaces/sanitization';\nimport {BINDING_INDEX, CLEANUP, CONTAINER_INDEX, CONTENT_QUERIES, CONTEXT, DECLARATION_VIEW, FLAGS, HEADER_OFFSET, HOST, HOST_NODE, INJECTOR, LView, LViewFlags, NEXT, OpaqueViewState, PARENT, QUERIES, RENDERER, RENDERER_FACTORY, RootContext, RootContextFlags, SANITIZER, TAIL, TVIEW, TView} from './interfaces/view';\nimport {assertNodeOfPossibleTypes, assertNodeType} from './node_assert';\nimport {appendChild, appendProjectedNode, createTextNode, getLViewChild, getRenderParent, insertView, removeView} from './node_manipulation';\nimport {isNodeMatchingSelectorList, matchingSelectorIndex} from './node_selector_matcher';\nimport {decreaseElementDepthCount, enterView, getBindingsEnabled, getCheckNoChangesMode, getContextLView, getCurrentDirectiveDef, getElementDepthCount, getFirstTemplatePass, getIsParent, getLView, getPreviousOrParentTNode, increaseElementDepthCount, isCreationMode, leaveView, nextContextImpl, resetComponentState, setBindingRoot, setCheckNoChangesMode, setCurrentDirectiveDef, setFirstTemplatePass, setIsParent, setPreviousOrParentTNode} from './state';\nimport {getInitialClassNameValue, initializeStaticContext as initializeStaticStylingContext, patchContextWithStaticAttrs, renderInitialStylesAndClasses, renderStyling, updateClassProp as updateElementClassProp, updateContextWithBindings, updateStyleProp as updateElementStyleProp, updateStylingMap} from './styling/class_and_style_bindings';\nimport {BoundPlayerFactory} from './styling/player_factory';\nimport {createEmptyStylingContext, getStylingContext, hasClassInput, hasStyling, isAnimationProp} from './styling/util';\nimport {NO_CHANGE} from './tokens';\nimport {findComponentView, getComponentViewByIndex, getNativeByIndex, getNativeByTNode, getRootContext, getRootView, getTNode, isComponent, isComponentDef, loadInternal, readElementValue, readPatchedLView, stringify} from './util';\n\n\n\n/**\n * A permanent marker promise which signifies that the current CD tree is\n * clean.\n */\nconst _CLEAN_PROMISE = Promise.resolve(null);\n\nconst enum BindingDirection {\n  Input,\n  Output,\n}\n\n/**\n * Refreshes the view, executing the following steps in that order:\n * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n * bindings, refreshes child components.\n * Note: view hooks are triggered later when leaving the view.\n */\nexport function refreshDescendantViews(lView: LView) {\n  const tView = lView[TVIEW];\n  // This needs to be set before children are processed to support recursive components\n  tView.firstTemplatePass = false;\n  setFirstTemplatePass(false);\n\n  // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\n  // This will be done in the update pass.\n  if (!isCreationMode(lView)) {\n    const checkNoChangesMode = getCheckNoChangesMode();\n\n    executeInitHooks(lView, tView, checkNoChangesMode);\n\n    refreshDynamicEmbeddedViews(lView);\n\n    // Content query results must be refreshed before content hooks are called.\n    refreshContentQueries(tView);\n\n    executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode);\n\n    setHostBindings(tView, lView);\n  }\n\n  refreshChildComponents(tView.components);\n}\n\n\n/** Sets the host bindings for the current view. */\nexport function setHostBindings(tView: TView, viewData: LView): void {\n  if (tView.expandoInstructions) {\n    let bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n    setBindingRoot(bindingRootIndex);\n    let currentDirectiveIndex = -1;\n    let currentElementIndex = -1;\n    for (let i = 0; i < tView.expandoInstructions.length; i++) {\n      const instruction = tView.expandoInstructions[i];\n      if (typeof instruction === 'number') {\n        if (instruction <= 0) {\n          // Negative numbers mean that we are starting new EXPANDO block and need to update\n          // the current element and directive index.\n          currentElementIndex = -instruction;\n          // Injector block and providers are taken into account.\n          const providerCount = (tView.expandoInstructions[++i] as number);\n          bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n\n          currentDirectiveIndex = bindingRootIndex;\n        } else {\n          // This is either the injector size (so the binding root can skip over directives\n          // and get to the first set of host bindings on this node) or the host var count\n          // (to get to the next set of host bindings on this node).\n          bindingRootIndex += instruction;\n        }\n        setBindingRoot(bindingRootIndex);\n      } else {\n        // If it's not a number, it's a host binding function that needs to be executed.\n        if (instruction !== null) {\n          viewData[BINDING_INDEX] = bindingRootIndex;\n          instruction(\n              RenderFlags.Update, readElementValue(viewData[currentDirectiveIndex]),\n              currentElementIndex);\n        }\n        currentDirectiveIndex++;\n      }\n    }\n  }\n}\n\n/** Refreshes content queries for all directives in the given view. */\nfunction refreshContentQueries(tView: TView): void {\n  if (tView.contentQueries != null) {\n    for (let i = 0; i < tView.contentQueries.length; i += 2) {\n      const directiveDefIdx = tView.contentQueries[i];\n      const directiveDef = tView.data[directiveDefIdx] as DirectiveDef<any>;\n\n      directiveDef.contentQueriesRefresh !(\n          directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n    }\n  }\n}\n\n/** Refreshes child components in the current view. */\nfunction refreshChildComponents(components: number[] | null): void {\n  if (components != null) {\n    for (let i = 0; i < components.length; i++) {\n      componentRefresh(components[i]);\n    }\n  }\n}\n\nexport function createLView<T>(\n    parentLView: LView | null, tView: TView, context: T | null, flags: LViewFlags,\n    rendererFactory?: RendererFactory3 | null, renderer?: Renderer3 | null,\n    sanitizer?: Sanitizer | null, injector?: Injector | null): LView {\n  const lView = tView.blueprint.slice() as LView;\n  lView[FLAGS] = flags | LViewFlags.CreationMode | LViewFlags.Attached | LViewFlags.RunInit |\n      LViewFlags.FirstLViewPass;\n  lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n  lView[CONTEXT] = context;\n  lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]) !;\n  ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n  lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]) !;\n  ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n  lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null !;\n  lView[INJECTOR as any] = injector || parentLView && parentLView[INJECTOR] || null;\n  return lView;\n}\n\n/**\n * Create and stores the TNode, and hooks it up to the tree.\n *\n * @param index The index at which the TNode should be saved (null if view, since they are not\n * saved).\n * @param type The type of TNode to create\n * @param native The native element for this node, if applicable\n * @param name The tag name of the associated native element, if applicable\n * @param attrs Any attrs for the native element, if applicable\n */\nexport function createNodeAtIndex(\n    index: number, type: TNodeType.Element, native: RElement | RText | null, name: string | null,\n    attrs: TAttributes | null): TElementNode;\nexport function createNodeAtIndex(\n    index: number, type: TNodeType.Container, native: RComment, name: string | null,\n    attrs: TAttributes | null): TContainerNode;\nexport function createNodeAtIndex(\n    index: number, type: TNodeType.Projection, native: null, name: null,\n    attrs: TAttributes | null): TProjectionNode;\nexport function createNodeAtIndex(\n    index: number, type: TNodeType.ElementContainer, native: RComment, name: string | null,\n    attrs: TAttributes | null): TElementContainerNode;\nexport function createNodeAtIndex(\n    index: number, type: TNodeType.IcuContainer, native: RComment, name: null,\n    attrs: TAttributes | null): TElementContainerNode;\nexport function createNodeAtIndex(\n    index: number, type: TNodeType, native: RText | RElement | RComment | null, name: string | null,\n    attrs: TAttributes | null): TElementNode&TContainerNode&TElementContainerNode&TProjectionNode&\n    TIcuContainerNode {\n  const lView = getLView();\n  const tView = lView[TVIEW];\n  const adjustedIndex = index + HEADER_OFFSET;\n  ngDevMode &&\n      assertLessThan(adjustedIndex, lView.length, `Slot should have been initialized with null`);\n  lView[adjustedIndex] = native;\n\n  let tNode = tView.data[adjustedIndex] as TNode;\n  if (tNode == null) {\n    // TODO(misko): Refactor createTNode so that it does not depend on LView.\n    tNode = tView.data[adjustedIndex] = createTNode(lView, type, adjustedIndex, name, attrs, null);\n  }\n\n  // Now link ourselves into the tree.\n  // We need this even if tNode exists, otherwise we might end up pointing to unexisting tNodes when\n  // we use i18n (especially with ICU expressions that update the DOM during the update phase).\n  const previousOrParentTNode = getPreviousOrParentTNode();\n  const isParent = getIsParent();\n  if (previousOrParentTNode) {\n    if (isParent && previousOrParentTNode.child == null &&\n        (tNode.parent !== null || previousOrParentTNode.type === TNodeType.View)) {\n      // We are in the same view, which means we are adding content node to the parent view.\n      previousOrParentTNode.child = tNode;\n    } else if (!isParent) {\n      previousOrParentTNode.next = tNode;\n    }\n  }\n\n  if (tView.firstChild == null) {\n    tView.firstChild = tNode;\n  }\n\n  setPreviousOrParentTNode(tNode);\n  setIsParent(true);\n  return tNode as TElementNode & TViewNode & TContainerNode & TElementContainerNode &\n      TProjectionNode & TIcuContainerNode;\n}\n\nexport function createViewNode(index: number, view: LView) {\n  // View nodes are not stored in data because they can be added / removed at runtime (which\n  // would cause indices to change). Their TNodes are instead stored in tView.node.\n  if (view[TVIEW].node == null) {\n    view[TVIEW].node = createTNode(view, TNodeType.View, index, null, null, null) as TViewNode;\n  }\n\n  return view[HOST_NODE] = view[TVIEW].node as TViewNode;\n}\n\n\n/**\n * When elements are created dynamically after a view blueprint is created (e.g. through\n * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n * template passes.\n */\nexport function allocExpando(view: LView) {\n  const tView = view[TVIEW];\n  if (tView.firstTemplatePass) {\n    tView.expandoStartIndex++;\n    tView.blueprint.push(null);\n    tView.data.push(null);\n    view.push(null);\n  }\n}\n\n\n//////////////////////////\n//// Render\n//////////////////////////\n\n/**\n *\n * @param hostNode Existing node to render into.\n * @param templateFn Template function with the instructions.\n * @param consts The number of nodes, local refs, and pipes in this template\n * @param context to pass into the template.\n * @param providedRendererFactory renderer factory to use\n * @param host The host element node to use\n * @param directives Directive defs that should be used for matching\n * @param pipes Pipe defs that should be used for matching\n */\nexport function renderTemplate<T>(\n    hostNode: RElement, templateFn: ComponentTemplate<T>, consts: number, vars: number, context: T,\n    providedRendererFactory: RendererFactory3, hostView: LView | null,\n    directives?: DirectiveDefListOrFactory | null, pipes?: PipeDefListOrFactory | null,\n    sanitizer?: Sanitizer | null): LView {\n  if (hostView == null) {\n    resetComponentState();\n    const renderer = providedRendererFactory.createRenderer(null, null);\n\n    // We need to create a root view so it's possible to look up the host element through its index\n    const hostLView = createLView(\n        null, createTView(-1, null, 1, 0, null, null, null), {},\n        LViewFlags.CheckAlways | LViewFlags.IsRoot, providedRendererFactory, renderer);\n    enterView(hostLView, null);  // SUSPECT! why do we need to enter the View?\n\n    const componentTView =\n        getOrCreateTView(templateFn, consts, vars, directives || null, pipes || null, null);\n    hostView = createLView(\n        hostLView, componentTView, context, LViewFlags.CheckAlways, providedRendererFactory,\n        renderer, sanitizer);\n    hostView[HOST_NODE] = createNodeAtIndex(0, TNodeType.Element, hostNode, null, null);\n  }\n  renderComponentOrTemplate(hostView, context, templateFn);\n  return hostView;\n}\n\n/**\n * Used for creating the LViewNode of a dynamic embedded view,\n * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n */\nexport function createEmbeddedViewAndNode<T>(\n    tView: TView, context: T, declarationView: LView, renderer: Renderer3, queries: LQueries | null,\n    injectorIndex: number): LView {\n  const _isParent = getIsParent();\n  const _previousOrParentTNode = getPreviousOrParentTNode();\n  setIsParent(true);\n  setPreviousOrParentTNode(null !);\n\n  const lView = createLView(declarationView, tView, context, LViewFlags.CheckAlways);\n  lView[DECLARATION_VIEW] = declarationView;\n\n  if (queries) {\n    lView[QUERIES] = queries.createView();\n  }\n  createViewNode(-1, lView);\n\n  if (tView.firstTemplatePass) {\n    tView.node !.injectorIndex = injectorIndex;\n  }\n\n  setIsParent(_isParent);\n  setPreviousOrParentTNode(_previousOrParentTNode);\n  return lView;\n}\n\n/**\n * Used for rendering embedded views (e.g. dynamically created views)\n *\n * Dynamically created views must store/retrieve their TViews differently from component views\n * because their template functions are nested in the template functions of their hosts, creating\n * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n * TView for dynamically created views on their host TNode, which only has one instance.\n */\nexport function renderEmbeddedTemplate<T>(viewToRender: LView, tView: TView, context: T) {\n  const _isParent = getIsParent();\n  const _previousOrParentTNode = getPreviousOrParentTNode();\n  setIsParent(true);\n  setPreviousOrParentTNode(null !);\n  let oldView: LView;\n  if (viewToRender[FLAGS] & LViewFlags.IsRoot) {\n    // This is a root view inside the view tree\n    tickRootContext(getRootContext(viewToRender));\n  } else {\n    try {\n      setIsParent(true);\n      setPreviousOrParentTNode(null !);\n\n      oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n      namespaceHTML();\n      tView.template !(getRenderFlags(viewToRender), context);\n      // This must be set to false immediately after the first creation run because in an\n      // ngFor loop, all the views will be created together before update mode runs and turns\n      // off firstTemplatePass. If we don't set it here, instances will perform directive\n      // matching, etc again and again.\n      viewToRender[TVIEW].firstTemplatePass = false;\n      setFirstTemplatePass(false);\n\n      refreshDescendantViews(viewToRender);\n    } finally {\n      leaveView(oldView !);\n      setIsParent(_isParent);\n      setPreviousOrParentTNode(_previousOrParentTNode);\n    }\n  }\n}\n\n/**\n * Retrieves a context at the level specified and saves it as the global, contextViewData.\n * Will get the next level up if level is not specified.\n *\n * This is used to save contexts of parent views so they can be bound in embedded views, or\n * in conjunction with reference() to bind a ref from a parent view.\n *\n * @param level The relative level of the view from which to grab context compared to contextVewData\n * @returns context\n */\nexport function nextContext<T = any>(level: number = 1): T {\n  return nextContextImpl(level);\n}\n\nfunction renderComponentOrTemplate<T>(\n    hostView: LView, context: T, templateFn?: ComponentTemplate<T>) {\n  const rendererFactory = hostView[RENDERER_FACTORY];\n  const oldView = enterView(hostView, hostView[HOST_NODE]);\n  const normalExecutionPath = !getCheckNoChangesMode();\n  try {\n    if (normalExecutionPath && rendererFactory.begin) {\n      rendererFactory.begin();\n    }\n\n    if (isCreationMode(hostView)) {\n      // creation mode pass\n      if (templateFn) {\n        namespaceHTML();\n        templateFn(RenderFlags.Create, context !);\n      }\n\n      refreshDescendantViews(hostView);\n      hostView[FLAGS] &= ~LViewFlags.CreationMode;\n    }\n\n    // update mode pass\n    templateFn && templateFn(RenderFlags.Update, context !);\n    refreshDescendantViews(hostView);\n  } finally {\n    if (normalExecutionPath && rendererFactory.end) {\n      rendererFactory.end();\n    }\n    leaveView(oldView);\n  }\n}\n\n/**\n * This function returns the default configuration of rendering flags depending on when the\n * template is in creation mode or update mode. Update block and create block are\n * always run separately.\n */\nfunction getRenderFlags(view: LView): RenderFlags {\n  return isCreationMode(view) ? RenderFlags.Create : RenderFlags.Update;\n}\n\n//////////////////////////\n//// Namespace\n//////////////////////////\n\nlet _currentNamespace: string|null = null;\n\nexport function namespaceSVG() {\n  _currentNamespace = 'http://www.w3.org/2000/svg';\n}\n\nexport function namespaceMathML() {\n  _currentNamespace = 'http://www.w3.org/1998/MathML/';\n}\n\nexport function namespaceHTML() {\n  _currentNamespace = null;\n}\n\n//////////////////////////\n//// Element\n//////////////////////////\n\n/**\n * Creates an empty element using {@link elementStart} and {@link elementEnd}\n *\n * @param index Index of the element in the data array\n * @param name Name of the DOM Node\n * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n * @param localRefs A set of local reference bindings on the element.\n */\nexport function element(\n    index: number, name: string, attrs?: TAttributes | null, localRefs?: string[] | null): void {\n  elementStart(index, name, attrs, localRefs);\n  elementEnd();\n}\n\n/**\n * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n * The instruction must later be followed by `elementContainerEnd()` call.\n *\n * @param index Index of the element in the LView array\n * @param attrs Set of attributes to be used when matching directives.\n * @param localRefs A set of local reference bindings on the element.\n *\n * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n * matching purposes and setting initial inputs of directives.\n */\nexport function elementContainerStart(\n    index: number, attrs?: TAttributes | null, localRefs?: string[] | null): void {\n  const lView = getLView();\n  const tView = lView[TVIEW];\n  const renderer = lView[RENDERER];\n  const tagName = 'ng-container';\n  ngDevMode && assertEqual(\n                   lView[BINDING_INDEX], tView.bindingStartIndex,\n                   'element containers should be created before any bindings');\n\n  ngDevMode && ngDevMode.rendererCreateComment++;\n  const native = renderer.createComment(ngDevMode ? tagName : '');\n\n  ngDevMode && assertDataInRange(lView, index - 1);\n  const tNode =\n      createNodeAtIndex(index, TNodeType.ElementContainer, native, tagName, attrs || null);\n\n  appendChild(native, tNode, lView);\n  createDirectivesAndLocals(tView, lView, localRefs);\n  attachPatchData(native, lView);\n}\n\n/** Mark the end of the <ng-container>. */\nexport function elementContainerEnd(): void {\n  let previousOrParentTNode = getPreviousOrParentTNode();\n  const lView = getLView();\n  const tView = lView[TVIEW];\n  if (getIsParent()) {\n    setIsParent(false);\n  } else {\n    ngDevMode && assertHasParent(getPreviousOrParentTNode());\n    previousOrParentTNode = previousOrParentTNode.parent !;\n    setPreviousOrParentTNode(previousOrParentTNode);\n  }\n\n  ngDevMode && assertNodeType(previousOrParentTNode, TNodeType.ElementContainer);\n  const currentQueries = lView[QUERIES];\n  if (currentQueries) {\n    lView[QUERIES] = currentQueries.addNode(previousOrParentTNode as TElementContainerNode);\n  }\n\n  queueLifecycleHooks(tView, previousOrParentTNode);\n}\n\n/**\n * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n *\n * @param index Index of the element in the LView array\n * @param name Name of the DOM Node\n * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n * @param localRefs A set of local reference bindings on the element.\n *\n * Attributes and localRefs are passed as an array of strings where elements with an even index\n * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n * ['id', 'warning5', 'class', 'alert']\n */\nexport function elementStart(\n    index: number, name: string, attrs?: TAttributes | null, localRefs?: string[] | null): void {\n  const lView = getLView();\n  const tView = lView[TVIEW];\n  ngDevMode && assertEqual(\n                   lView[BINDING_INDEX], tView.bindingStartIndex,\n                   'elements should be created before any bindings ');\n\n  ngDevMode && ngDevMode.rendererCreateElement++;\n\n  const native = elementCreate(name);\n\n  ngDevMode && assertDataInRange(lView, index - 1);\n\n  const tNode = createNodeAtIndex(index, TNodeType.Element, native !, name, attrs || null);\n\n  if (attrs) {\n    // it's important to only prepare styling-related datastructures once for a given\n    // tNode and not each time an element is created. Also, the styling code is designed\n    // to be patched and constructed at various points, but only up until the first element\n    // is created. Then the styling context is locked and can only be instantiated for each\n    // successive element that is created.\n    if (tView.firstTemplatePass && !tNode.stylingTemplate && hasStyling(attrs)) {\n      tNode.stylingTemplate = initializeStaticStylingContext(attrs);\n    }\n    setUpAttributes(native, attrs);\n  }\n\n  appendChild(native, tNode, lView);\n  createDirectivesAndLocals(tView, lView, localRefs);\n\n  // any immediate children of a component or template container must be pre-emptively\n  // monkey-patched with the component view data so that the element can be inspected\n  // later on using any element discovery utility methods (see `element_discovery.ts`)\n  if (getElementDepthCount() === 0) {\n    attachPatchData(native, lView);\n  }\n  increaseElementDepthCount();\n\n  // if a directive contains a host binding for \"class\" then all class-based data will\n  // flow through that (except for `[class.prop]` bindings). This also includes initial\n  // static class values as well. (Note that this will be fixed once map-based `[style]`\n  // and `[class]` bindings work for multiple directives.)\n  if (tView.firstTemplatePass) {\n    const inputData = initializeTNodeInputs(tNode);\n    if (inputData && inputData.hasOwnProperty('class')) {\n      tNode.flags |= TNodeFlags.hasClassInput;\n    }\n  }\n\n  // There is no point in rendering styles when a class directive is present since\n  // it will take that over for us (this will be removed once #FW-882 is in).\n  if (tNode.stylingTemplate && (tNode.flags & TNodeFlags.hasClassInput) === 0) {\n    renderInitialStylesAndClasses(native, tNode.stylingTemplate, lView[RENDERER]);\n  }\n}\n\n/**\n * Creates a native element from a tag name, using a renderer.\n * @param name the tag name\n * @param overriddenRenderer Optional A renderer to override the default one\n * @returns the element created\n */\nexport function elementCreate(name: string, overriddenRenderer?: Renderer3): RElement {\n  let native: RElement;\n  const rendererToUse = overriddenRenderer || getLView()[RENDERER];\n\n  if (isProceduralRenderer(rendererToUse)) {\n    native = rendererToUse.createElement(name, _currentNamespace);\n  } else {\n    if (_currentNamespace === null) {\n      native = rendererToUse.createElement(name);\n    } else {\n      native = rendererToUse.createElementNS(_currentNamespace, name);\n    }\n  }\n  return native;\n}\n\n/**\n * Creates directive instances and populates local refs.\n *\n * @param localRefs Local refs of the node in question\n * @param localRefExtractor mapping function that extracts local ref value from TNode\n */\nfunction createDirectivesAndLocals(\n    tView: TView, viewData: LView, localRefs: string[] | null | undefined,\n    localRefExtractor: LocalRefExtractor = getNativeByTNode) {\n  if (!getBindingsEnabled()) return;\n  const previousOrParentTNode = getPreviousOrParentTNode();\n  if (getFirstTemplatePass()) {\n    ngDevMode && ngDevMode.firstTemplatePass++;\n\n    resolveDirectives(\n        tView, viewData, findDirectiveMatches(tView, viewData, previousOrParentTNode),\n        previousOrParentTNode, localRefs || null);\n  }\n  instantiateAllDirectives(tView, viewData, previousOrParentTNode);\n  invokeDirectivesHostBindings(tView, viewData, previousOrParentTNode);\n  saveResolvedLocalsInData(viewData, previousOrParentTNode, localRefExtractor);\n}\n\n/**\n * Takes a list of local names and indices and pushes the resolved local variable values\n * to LView in the same order as they are loaded in the template with load().\n */\nfunction saveResolvedLocalsInData(\n    viewData: LView, tNode: TNode, localRefExtractor: LocalRefExtractor): void {\n  const localNames = tNode.localNames;\n  if (localNames) {\n    let localIndex = tNode.index + 1;\n    for (let i = 0; i < localNames.length; i += 2) {\n      const index = localNames[i + 1] as number;\n      const value = index === -1 ?\n          localRefExtractor(\n              tNode as TElementNode | TContainerNode | TElementContainerNode, viewData) :\n          viewData[index];\n      viewData[localIndex++] = value;\n    }\n  }\n}\n\n/**\n * Gets TView from a template function or creates a new TView\n * if it doesn't already exist.\n *\n * @param templateFn The template from which to get static data\n * @param consts The number of nodes, local refs, and pipes in this view\n * @param vars The number of bindings and pure function bindings in this view\n * @param directives Directive defs that should be saved on TView\n * @param pipes Pipe defs that should be saved on TView\n * @returns TView\n */\nexport function getOrCreateTView(\n    templateFn: ComponentTemplate<any>, consts: number, vars: number,\n    directives: DirectiveDefListOrFactory | null, pipes: PipeDefListOrFactory | null,\n    viewQuery: ComponentQuery<any>| null): TView {\n  // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n  // 1. It is a megamorphic call on each invocation.\n  // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n  //    outer template invocation, which means that no such property will exist\n  // Correct solution is to only put `ngPrivateData` on the Component template\n  // and not on embedded templates.\n\n  return templateFn.ngPrivateData ||\n      (templateFn.ngPrivateData =\n           createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery) as never);\n}\n\n/**\n * Creates a TView instance\n *\n * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n * @param templateFn Template function\n * @param consts The number of nodes, local refs, and pipes in this template\n * @param directives Registry of directives for this view\n * @param pipes Registry of pipes for this view\n */\nexport function createTView(\n    viewIndex: number, templateFn: ComponentTemplate<any>| null, consts: number, vars: number,\n    directives: DirectiveDefListOrFactory | null, pipes: PipeDefListOrFactory | null,\n    viewQuery: ComponentQuery<any>| null): TView {\n  ngDevMode && ngDevMode.tView++;\n  const bindingStartIndex = HEADER_OFFSET + consts;\n  // This length does not yet contain host bindings from child directives because at this point,\n  // we don't know which directives are active on this template. As soon as a directive is matched\n  // that has a host binding, we will update the blueprint with that def's hostVars count.\n  const initialViewLength = bindingStartIndex + vars;\n  const blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n  return blueprint[TVIEW as any] = {\n    id: viewIndex,\n    blueprint: blueprint,\n    template: templateFn,\n    viewQuery: viewQuery,\n    node: null !,\n    data: blueprint.slice(),  // Fill in to match HEADER_OFFSET in LView\n    childIndex: -1,           // Children set in addToViewTree(), if any\n    bindingStartIndex: bindingStartIndex,\n    expandoStartIndex: initialViewLength,\n    expandoInstructions: null,\n    firstTemplatePass: true,\n    initHooks: null,\n    checkHooks: null,\n    contentHooks: null,\n    contentCheckHooks: null,\n    viewHooks: null,\n    viewCheckHooks: null,\n    destroyHooks: null,\n    pipeDestroyHooks: null,\n    cleanup: null,\n    contentQueries: null,\n    components: null,\n    directiveRegistry: typeof directives === 'function' ? directives() : directives,\n    pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n    firstChild: null,\n  };\n}\n\nfunction createViewBlueprint(bindingStartIndex: number, initialViewLength: number): LView {\n  const blueprint = new Array(initialViewLength)\n                        .fill(null, 0, bindingStartIndex)\n                        .fill(NO_CHANGE, bindingStartIndex) as LView;\n  blueprint[CONTAINER_INDEX] = -1;\n  blueprint[BINDING_INDEX] = bindingStartIndex;\n  return blueprint;\n}\n\nfunction setUpAttributes(native: RElement, attrs: TAttributes): void {\n  const renderer = getLView()[RENDERER];\n  const isProc = isProceduralRenderer(renderer);\n  let i = 0;\n\n  while (i < attrs.length) {\n    const attrName = attrs[i++];\n    if (typeof attrName == 'number') {\n      if (attrName === AttributeMarker.NamespaceURI) {\n        // Namespaced attributes\n        const namespaceURI = attrs[i++] as string;\n        const attrName = attrs[i++] as string;\n        const attrVal = attrs[i++] as string;\n        ngDevMode && ngDevMode.rendererSetAttribute++;\n        isProc ?\n            (renderer as ProceduralRenderer3)\n                .setAttribute(native, attrName, attrVal, namespaceURI) :\n            native.setAttributeNS(namespaceURI, attrName, attrVal);\n      } else {\n        // All other `AttributeMarker`s are ignored here.\n        break;\n      }\n    } else {\n      /// attrName is string;\n      const attrVal = attrs[i++];\n      if (attrName !== NG_PROJECT_AS_ATTR_NAME) {\n        // Standard attributes\n        ngDevMode && ngDevMode.rendererSetAttribute++;\n        if (isAnimationProp(attrName)) {\n          if (isProc) {\n            (renderer as ProceduralRenderer3).setProperty(native, attrName, attrVal);\n          }\n        } else {\n          isProc ?\n              (renderer as ProceduralRenderer3)\n                  .setAttribute(native, attrName as string, attrVal as string) :\n              native.setAttribute(attrName as string, attrVal as string);\n        }\n      }\n    }\n  }\n}\n\nexport function createError(text: string, token: any) {\n  return new Error(`Renderer: ${text} [${stringify(token)}]`);\n}\n\n\n/**\n * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n *\n * @param elementOrSelector Render element or CSS selector to locate the element.\n */\nexport function locateHostElement(\n    factory: RendererFactory3, elementOrSelector: RElement | string): RElement|null {\n  const defaultRenderer = factory.createRenderer(null, null);\n  const rNode = typeof elementOrSelector === 'string' ?\n      (isProceduralRenderer(defaultRenderer) ?\n           defaultRenderer.selectRootElement(elementOrSelector) :\n           defaultRenderer.querySelector(elementOrSelector)) :\n      elementOrSelector;\n  if (ngDevMode && !rNode) {\n    if (typeof elementOrSelector === 'string') {\n      throw createError('Host node with selector not found:', elementOrSelector);\n    } else {\n      throw createError('Host node is required:', elementOrSelector);\n    }\n  }\n  return rNode;\n}\n\n/**\n * Adds an event listener to the current node.\n *\n * If an output exists on one of the node's directives, it also subscribes to the output\n * and saves the subscription for later cleanup.\n *\n * @param eventName Name of the event\n * @param listenerFn The function to be called when event emits\n * @param useCapture Whether or not to use capture in event listener.\n */\nexport function listener(\n    eventName: string, listenerFn: (e?: any) => any, useCapture = false): void {\n  const lView = getLView();\n  const tNode = getPreviousOrParentTNode();\n  const tView = lView[TVIEW];\n  const firstTemplatePass = tView.firstTemplatePass;\n  const tCleanup: false|any[] = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n  ngDevMode && assertNodeOfPossibleTypes(\n                   tNode, TNodeType.Element, TNodeType.Container, TNodeType.ElementContainer);\n\n  // add native event listener - applicable to elements only\n  if (tNode.type === TNodeType.Element) {\n    const native = getNativeByTNode(tNode, lView) as RElement;\n    ngDevMode && ngDevMode.rendererAddEventListener++;\n    const renderer = lView[RENDERER];\n    const lCleanup = getCleanup(lView);\n    const lCleanupIndex = lCleanup.length;\n    let useCaptureOrSubIdx: boolean|number = useCapture;\n\n    // In order to match current behavior, native DOM event listeners must be added for all\n    // events (including outputs).\n    if (isProceduralRenderer(renderer)) {\n      const cleanupFn = renderer.listen(native, eventName, listenerFn);\n      lCleanup.push(listenerFn, cleanupFn);\n      useCaptureOrSubIdx = lCleanupIndex + 1;\n    } else {\n      const wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n      native.addEventListener(eventName, wrappedListener, useCapture);\n      lCleanup.push(wrappedListener);\n    }\n    tCleanup && tCleanup.push(eventName, tNode.index, lCleanupIndex, useCaptureOrSubIdx);\n  }\n\n  // subscribe to directive outputs\n  if (tNode.outputs === undefined) {\n    // if we create TNode here, inputs must be undefined so we know they still need to be\n    // checked\n    tNode.outputs = generatePropertyAliases(tNode, BindingDirection.Output);\n  }\n\n  const outputs = tNode.outputs;\n  let props: PropertyAliasValue|undefined;\n  if (outputs && (props = outputs[eventName])) {\n    const propsLength = props.length;\n    if (propsLength) {\n      const lCleanup = getCleanup(lView);\n      for (let i = 0; i < propsLength; i += 2) {\n        ngDevMode && assertDataInRange(lView, props[i] as number);\n        const subscription = lView[props[i] as number][props[i + 1]].subscribe(listenerFn);\n        const idx = lCleanup.length;\n        lCleanup.push(listenerFn, subscription);\n        tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n      }\n    }\n  }\n}\n\n/**\n * Saves context for this cleanup function in LView.cleanupInstances.\n *\n * On the first template pass, saves in TView:\n * - Cleanup function\n * - Index of context we just saved in LView.cleanupInstances\n */\nexport function storeCleanupWithContext(lView: LView, context: any, cleanupFn: Function): void {\n  const lCleanup = getCleanup(lView);\n  lCleanup.push(context);\n\n  if (lView[TVIEW].firstTemplatePass) {\n    getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n  }\n}\n\n/**\n * Saves the cleanup function itself in LView.cleanupInstances.\n *\n * This is necessary for functions that are wrapped with their contexts, like in renderer2\n * listeners.\n *\n * On the first template pass, the index of the cleanup function is saved in TView.\n */\nexport function storeCleanupFn(view: LView, cleanupFn: Function): void {\n  getCleanup(view).push(cleanupFn);\n\n  if (view[TVIEW].firstTemplatePass) {\n    getTViewCleanup(view).push(view[CLEANUP] !.length - 1, null);\n  }\n}\n\n/** Mark the end of the element. */\nexport function elementEnd(): void {\n  let previousOrParentTNode = getPreviousOrParentTNode();\n  if (getIsParent()) {\n    setIsParent(false);\n  } else {\n    ngDevMode && assertHasParent(getPreviousOrParentTNode());\n    previousOrParentTNode = previousOrParentTNode.parent !;\n    setPreviousOrParentTNode(previousOrParentTNode);\n  }\n  ngDevMode && assertNodeType(previousOrParentTNode, TNodeType.Element);\n  const lView = getLView();\n  const currentQueries = lView[QUERIES];\n  if (currentQueries) {\n    lView[QUERIES] = currentQueries.addNode(previousOrParentTNode as TElementNode);\n  }\n\n  queueLifecycleHooks(getLView()[TVIEW], previousOrParentTNode);\n  decreaseElementDepthCount();\n\n  // this is fired at the end of elementEnd because ALL of the stylingBindings code\n  // (for directives and the template) have now executed which means the styling\n  // context can be instantiated properly.\n  if (hasClassInput(previousOrParentTNode)) {\n    const stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n    setInputsForProperty(\n        lView, previousOrParentTNode.inputs !['class'] !, getInitialClassNameValue(stylingContext));\n  }\n}\n\n/**\n * Updates the value of removes an attribute on an Element.\n *\n * @param number index The index of the element in the data array\n * @param name name The name of the attribute.\n * @param value value The attribute is removed when value is `null` or `undefined`.\n *                  Otherwise the attribute value is set to the stringified value.\n * @param sanitizer An optional function used to sanitize the value.\n */\nexport function elementAttribute(\n    index: number, name: string, value: any, sanitizer?: SanitizerFn | null): void {\n  if (value !== NO_CHANGE) {\n    const lView = getLView();\n    const renderer = lView[RENDERER];\n    const element = getNativeByIndex(index, lView);\n    if (value == null) {\n      ngDevMode && ngDevMode.rendererRemoveAttribute++;\n      isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name) :\n                                       element.removeAttribute(name);\n    } else {\n      ngDevMode && ngDevMode.rendererSetAttribute++;\n      const strValue = sanitizer == null ? stringify(value) : sanitizer(value);\n      isProceduralRenderer(renderer) ? renderer.setAttribute(element, name, strValue) :\n                                       element.setAttribute(name, strValue);\n    }\n  }\n}\n\n/**\n * Update a property on an element.\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n *\n * @param index The index of the element to update in the data array\n * @param propName Name of property. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param value New value to write.\n * @param sanitizer An optional function used to sanitize the value.\n * @param nativeOnly Whether or not we should only set native properties and skip input check\n * (this is necessary for host property bindings)\n */\nexport function elementProperty<T>(\n    index: number, propName: string, value: T | NO_CHANGE, sanitizer?: SanitizerFn | null,\n    nativeOnly?: boolean): void {\n  elementPropertyInternal(index, propName, value, sanitizer, nativeOnly);\n}\n\n/**\n * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n *\n * This instruction is for compatibility purposes and is designed to ensure that a\n * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n * the component's renderer. Normally all host bindings are evaluated with the parent\n * component's renderer, but, in the case of animation @triggers, they need to be\n * evaluated with the sub components renderer (because that's where the animation\n * triggers are defined).\n *\n * Do not use this instruction as a replacement for `elementProperty`. This instruction\n * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n *\n * @param index The index of the element to update in the data array\n * @param propName Name of property. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param value New value to write.\n * @param sanitizer An optional function used to sanitize the value.\n * @param nativeOnly Whether or not we should only set native properties and skip input check\n * (this is necessary for host property bindings)\n */\nexport function componentHostSyntheticProperty<T>(\n    index: number, propName: string, value: T | NO_CHANGE, sanitizer?: SanitizerFn | null,\n    nativeOnly?: boolean) {\n  elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadComponentRenderer);\n}\n\nfunction loadComponentRenderer(tNode: TNode, lView: LView): Renderer3 {\n  const componentLView = lView[tNode.index] as LView;\n  return componentLView[RENDERER];\n}\n\nfunction elementPropertyInternal<T>(\n    index: number, propName: string, value: T | NO_CHANGE, sanitizer?: SanitizerFn | null,\n    nativeOnly?: boolean,\n    loadRendererFn?: ((tNode: TNode, lView: LView) => Renderer3) | null): void {\n  if (value === NO_CHANGE) return;\n  const lView = getLView();\n  const element = getNativeByIndex(index, lView) as RElement | RComment;\n  const tNode = getTNode(index, lView);\n  let inputData: PropertyAliases|null|undefined;\n  let dataValue: PropertyAliasValue|undefined;\n  if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n      (dataValue = inputData[propName])) {\n    setInputsForProperty(lView, dataValue, value);\n    if (isComponent(tNode)) markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n    if (ngDevMode) {\n      if (tNode.type === TNodeType.Element || tNode.type === TNodeType.Container) {\n        setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n      }\n    }\n  } else if (tNode.type === TNodeType.Element) {\n    const renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n    // It is assumed that the sanitizer is only added when the compiler determines that the property\n    // is risky, so sanitization can be done without further checks.\n    value = sanitizer != null ? (sanitizer(value) as any) : value;\n    ngDevMode && ngDevMode.rendererSetProperty++;\n    if (isProceduralRenderer(renderer)) {\n      renderer.setProperty(element as RElement, propName, value);\n    } else if (!isAnimationProp(propName)) {\n      (element as RElement).setProperty ? (element as any).setProperty(propName, value) :\n                                          (element as any)[propName] = value;\n    }\n  }\n}\n\n/**\n * Constructs a TNode object from the arguments.\n *\n * @param type The type of the node\n * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n * @param tagName The tag name of the node\n * @param attrs The attributes defined on this node\n * @param tViews Any TViews attached to this node\n * @returns the TNode object\n */\nexport function createTNode(\n    lView: LView, type: TNodeType, adjustedIndex: number, tagName: string | null,\n    attrs: TAttributes | null, tViews: TView[] | null): TNode {\n  const previousOrParentTNode = getPreviousOrParentTNode();\n  ngDevMode && ngDevMode.tNode++;\n  const parent =\n      getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n\n  // Parents cannot cross component boundaries because components will be used in multiple places,\n  // so it's only set if the view is the same.\n  const parentInSameView = parent && lView && parent !== lView[HOST_NODE];\n  const tParent = parentInSameView ? parent as TElementNode | TContainerNode : null;\n\n  return {\n    type: type,\n    index: adjustedIndex,\n    injectorIndex: tParent ? tParent.injectorIndex : -1,\n    directiveStart: -1,\n    directiveEnd: -1,\n    flags: 0,\n    providerIndexes: 0,\n    tagName: tagName,\n    attrs: attrs,\n    localNames: null,\n    initialInputs: undefined,\n    inputs: undefined,\n    outputs: undefined,\n    tViews: tViews,\n    next: null,\n    child: null,\n    parent: tParent,\n    detached: null,\n    stylingTemplate: null,\n    projection: null\n  };\n}\n\n/**\n * Given a list of directive indices and minified input names, sets the\n * input properties on the corresponding directives.\n */\nfunction setInputsForProperty(lView: LView, inputs: PropertyAliasValue, value: any): void {\n  for (let i = 0; i < inputs.length; i += 2) {\n    ngDevMode && assertDataInRange(lView, inputs[i] as number);\n    lView[inputs[i] as number][inputs[i + 1]] = value;\n  }\n}\n\nfunction setNgReflectProperties(\n    lView: LView, element: RElement | RComment, type: TNodeType, inputs: PropertyAliasValue,\n    value: any) {\n  for (let i = 0; i < inputs.length; i += 2) {\n    const renderer = lView[RENDERER];\n    const attrName = normalizeDebugBindingName(inputs[i + 1] as string);\n    const debugValue = normalizeDebugBindingValue(value);\n    if (type === TNodeType.Element) {\n      isProceduralRenderer(renderer) ?\n          renderer.setAttribute((element as RElement), attrName, debugValue) :\n          (element as RElement).setAttribute(attrName, debugValue);\n    } else if (value !== undefined) {\n      const value = `bindings=${JSON.stringify({[attrName]: debugValue}, null, 2)}`;\n      if (isProceduralRenderer(renderer)) {\n        renderer.setValue((element as RComment), value);\n      } else {\n        (element as RComment).textContent = value;\n      }\n    }\n  }\n}\n\n/**\n * Consolidates all inputs or outputs of all directives on this logical node.\n *\n * @param tNodeFlags node flags\n * @param direction whether to consider inputs or outputs\n * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n */\nfunction generatePropertyAliases(tNode: TNode, direction: BindingDirection): PropertyAliases|null {\n  const tView = getLView()[TVIEW];\n  let propStore: PropertyAliases|null = null;\n  const start = tNode.directiveStart;\n  const end = tNode.directiveEnd;\n\n  if (end > start) {\n    const isInput = direction === BindingDirection.Input;\n    const defs = tView.data;\n\n    for (let i = start; i < end; i++) {\n      const directiveDef = defs[i] as DirectiveDef<any>;\n      const propertyAliasMap: {[publicName: string]: string} =\n          isInput ? directiveDef.inputs : directiveDef.outputs;\n      for (let publicName in propertyAliasMap) {\n        if (propertyAliasMap.hasOwnProperty(publicName)) {\n          propStore = propStore || {};\n          const internalName = propertyAliasMap[publicName];\n          const hasProperty = propStore.hasOwnProperty(publicName);\n          hasProperty ? propStore[publicName].push(i, internalName) :\n                        (propStore[publicName] = [i, internalName]);\n        }\n      }\n    }\n  }\n  return propStore;\n}\n\n/**\n * Assign any inline style values to the element during creation mode.\n *\n * This instruction is meant to be called during creation mode to register all\n * dynamic style and class bindings on the element. Note for static values (no binding)\n * see `elementStart` and `elementHostAttrs`.\n *\n * @param classBindingNames An array containing bindable class names.\n *        The `elementClassProp` refers to the class name by index in this array.\n *        (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n * @param styleBindingNames An array containing bindable style properties.\n *        The `elementStyleProp` refers to the class name by index in this array.\n *        (i.e. `['width', 'height']` means `width=0` and `height=1`).\n * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n *        property values that are applied to the element (during rendering).\n *        Note that the sanitizer instance itself is tied to the `directive` (if  provided).\n * @param directive A directive instance the styling is associated with. If not provided\n *        current view's controller instance is assumed.\n *\n * @publicApi\n */\nexport function elementStyling(\n    classBindingNames?: string[] | null, styleBindingNames?: string[] | null,\n    styleSanitizer?: StyleSanitizeFn | null, directive?: {}): void {\n  const tNode = getPreviousOrParentTNode();\n  if (!tNode.stylingTemplate) {\n    tNode.stylingTemplate = createEmptyStylingContext();\n  }\n  updateContextWithBindings(\n      tNode.stylingTemplate !, directive || null, classBindingNames, styleBindingNames,\n      styleSanitizer, hasClassInput(tNode));\n}\n\n/**\n * Assign static styling values to a host element.\n *\n * NOTE: This instruction is meant to used from `hostBindings` function only.\n *\n * @param directive A directive instance the styling is associated with.\n * @param attrs An array containing class and styling information. The values must be marked with\n *              `AttributeMarker`.\n *\n *        ```\n *        var attrs = [AttributeMarker.Classes, 'foo', 'bar',\n *                     AttributeMarker.Styles, 'width', '100px', 'height, '200px']\n *        elementHostAttrs(directive, attrs);\n *        ```\n *\n * @publicApi\n */\nexport function elementHostAttrs(directive: any, attrs: TAttributes) {\n  const tNode = getPreviousOrParentTNode();\n  if (!tNode.stylingTemplate) {\n    tNode.stylingTemplate = initializeStaticStylingContext(attrs);\n  }\n  patchContextWithStaticAttrs(tNode.stylingTemplate, attrs, directive);\n}\n\n/**\n * Apply styling binding to the element.\n *\n * This instruction is meant to be run after `elementStyle` and/or `elementStyleProp`.\n * if any styling bindings have changed then the changes are flushed to the element.\n *\n *\n * @param index Index of the element's with which styling is associated.\n * @param directive Directive instance that is attempting to change styling. (Defaults to the\n *        component of the current view).\ncomponents\n *\n * @publicApi\n */\nexport function elementStylingApply(index: number, directive?: any): void {\n  const lView = getLView();\n  const isFirstRender = (lView[FLAGS] & LViewFlags.FirstLViewPass) !== 0;\n  const totalPlayersQueued = renderStyling(\n      getStylingContext(index + HEADER_OFFSET, lView), lView[RENDERER], lView, isFirstRender, null,\n      null, directive);\n  if (totalPlayersQueued > 0) {\n    const rootContext = getRootContext(lView);\n    scheduleTick(rootContext, RootContextFlags.FlushPlayers);\n  }\n}\n\n/**\n * Update a style bindings value on an element.\n *\n * If the style value is `null` then it will be removed from the element\n * (or assigned a different value depending if there are any styles placed\n * on the element with `elementStyle` or any styles that are present\n * from when the element was created (with `elementStyling`).\n *\n * (Note that the styling element is updated as part of `elementStylingApply`.)\n *\n * @param index Index of the element's with which styling is associated.\n * @param styleIndex Index of style to update. This index value refers to the\n *        index of the style in the style bindings array that was passed into\n *        `elementStlyingBindings`.\n * @param value New value to write (null to remove). Note that if a directive also\n *        attempts to write to the same binding value then it will only be able to\n *        do so if the template binding value is `null` (or doesn't exist at all).\n * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n *        Note that when a suffix is provided then the underlying sanitizer will\n *        be ignored.\n * @param directive Directive instance that is attempting to change styling. (Defaults to the\n *        component of the current view).\ncomponents\n *\n * @publicApi\n */\nexport function elementStyleProp(\n    index: number, styleIndex: number, value: string | number | String | PlayerFactory | null,\n    suffix?: string | null, directive?: {}): void {\n  let valueToAdd: string|null = null;\n  if (value !== null) {\n    if (suffix) {\n      // when a suffix is applied then it will bypass\n      // sanitization entirely (b/c a new string is created)\n      valueToAdd = stringify(value) + suffix;\n    } else {\n      // sanitization happens by dealing with a String value\n      // this means that the string value will be passed through\n      // into the style rendering later (which is where the value\n      // will be sanitized before it is applied)\n      valueToAdd = value as any as string;\n    }\n  }\n  updateElementStyleProp(\n      getStylingContext(index + HEADER_OFFSET, getLView()), styleIndex, valueToAdd, directive);\n}\n\n/**\n * Add or remove a class via a class binding on a DOM element.\n *\n * This instruction is meant to handle the [class.foo]=\"exp\" case and, therefore,\n * the class itself must already be applied using `elementStyling` within\n * the creation block.\n *\n * @param index Index of the element's with which styling is associated.\n * @param classIndex Index of class to toggle. This index value refers to the\n *        index of the class in the class bindings array that was passed into\n *        `elementStlyingBindings` (which is meant to be called before this\n *        function is).\n * @param value A true/false value which will turn the class on or off.\n * @param directive Directive instance that is attempting to change styling. (Defaults to the\n *        component of the current view).\ncomponents\n *\n * @publicApi\n */\nexport function elementClassProp(\n    index: number, classIndex: number, value: boolean | PlayerFactory, directive?: {}): void {\n  const onOrOffClassValue =\n      (value instanceof BoundPlayerFactory) ? (value as BoundPlayerFactory<boolean>) : (!!value);\n  updateElementClassProp(\n      getStylingContext(index + HEADER_OFFSET, getLView()), classIndex, onOrOffClassValue,\n      directive);\n}\n\n/**\n * Update style and/or class bindings using object literal.\n *\n * This instruction is meant apply styling via the `[style]=\"exp\"` and `[class]=\"exp\"` template\n * bindings. When styles are applied to the Element they will then be placed with respect to\n * any styles set with `elementStyleProp`. If any styles are set to `null` then they will be\n * removed from the element.\n *\n * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n *\n * @param index Index of the element's with which styling is associated.\n * @param classes A key/value style map of CSS classes that will be added to the given element.\n *        Any missing classes (that have already been applied to the element beforehand) will be\n *        removed (unset) from the element's list of CSS classes.\n * @param styles A key/value style map of the styles that will be applied to the given element.\n *        Any missing styles (that have already been applied to the element beforehand) will be\n *        removed (unset) from the element's styling.\n * @param directive Directive instance that is attempting to change styling. (Defaults to the\n *        component of the current view).\n *\n * @publicApi\n */\nexport function elementStylingMap<T>(\n    index: number, classes: {[key: string]: any} | string | NO_CHANGE | null,\n    styles?: {[styleName: string]: any} | NO_CHANGE | null, directive?: {}): void {\n  if (directive != undefined)\n    return hackImplementationOfElementStylingMap(\n        index, classes, styles, directive);  // supported in next PR\n  const lView = getLView();\n  const tNode = getTNode(index, lView);\n  const stylingContext = getStylingContext(index + HEADER_OFFSET, lView);\n  if (hasClassInput(tNode) && classes !== NO_CHANGE) {\n    const initialClasses = getInitialClassNameValue(stylingContext);\n    const classInputVal =\n        (initialClasses.length ? (initialClasses + ' ') : '') + (classes as string);\n    setInputsForProperty(lView, tNode.inputs !['class'] !, classInputVal);\n  } else {\n    updateStylingMap(stylingContext, classes, styles);\n  }\n}\n\n/* START OF HACK BLOCK */\nfunction hackImplementationOfElementStylingMap<T>(\n    index: number, classes: {[key: string]: any} | string | NO_CHANGE | null,\n    styles?: {[styleName: string]: any} | NO_CHANGE | null, directive?: {}): void {\n  throw new Error('unimplemented. Should not be needed by ViewEngine compatibility');\n}\n/* END OF HACK BLOCK */\n\n//////////////////////////\n//// Text\n//////////////////////////\n\n/**\n * Create static text node\n *\n * @param index Index of the node in the data array\n * @param value Value to write. This value will be stringified.\n */\nexport function text(index: number, value?: any): void {\n  const lView = getLView();\n  ngDevMode && assertEqual(\n                   lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex,\n                   'text nodes should be created before any bindings');\n  ngDevMode && ngDevMode.rendererCreateTextNode++;\n  const textNative = createTextNode(value, lView[RENDERER]);\n  const tNode = createNodeAtIndex(index, TNodeType.Element, textNative, null, null);\n\n  // Text nodes are self closing.\n  setIsParent(false);\n  appendChild(textNative, tNode, lView);\n}\n\n/**\n * Create text node with binding\n * Bindings should be handled externally with the proper interpolation(1-8) method\n *\n * @param index Index of the node in the data array.\n * @param value Stringified value to write.\n */\nexport function textBinding<T>(index: number, value: T | NO_CHANGE): void {\n  if (value !== NO_CHANGE) {\n    const lView = getLView();\n    ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n    const element = getNativeByIndex(index, lView) as any as RText;\n    ngDevMode && assertDefined(element, 'native element should exist');\n    ngDevMode && ngDevMode.rendererSetText++;\n    const renderer = lView[RENDERER];\n    isProceduralRenderer(renderer) ? renderer.setValue(element, stringify(value)) :\n                                     element.textContent = stringify(value);\n  }\n}\n\n//////////////////////////\n//// Directive\n//////////////////////////\n\n/**\n * Instantiate a root component.\n */\nexport function instantiateRootComponent<T>(\n    tView: TView, viewData: LView, def: ComponentDef<T>): T {\n  const rootTNode = getPreviousOrParentTNode();\n  if (tView.firstTemplatePass) {\n    if (def.providersResolver) def.providersResolver(def);\n    generateExpandoInstructionBlock(tView, rootTNode, 1);\n    baseResolveDirective(tView, viewData, def, def.factory);\n  }\n  const directive =\n      getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode as TElementNode);\n  postProcessBaseDirective(viewData, rootTNode, directive, def as DirectiveDef<T>);\n  return directive;\n}\n\n/**\n * Resolve the matched directives on a node.\n */\nfunction resolveDirectives(\n    tView: TView, viewData: LView, directives: DirectiveDef<any>[] | null, tNode: TNode,\n    localRefs: string[] | null): void {\n  // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n  ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n  const exportsMap: ({[key: string]: number} | null) = localRefs ? {'': -1} : null;\n  if (directives) {\n    initNodeFlags(tNode, tView.data.length, directives.length);\n    // When the same token is provided by several directives on the same node, some rules apply in\n    // the viewEngine:\n    // - viewProviders have priority over providers\n    // - the last directive in NgModule.declarations has priority over the previous one\n    // So to match these rules, the order in which providers are added in the arrays is very\n    // important.\n    for (let i = 0; i < directives.length; i++) {\n      const def = directives[i] as DirectiveDef<any>;\n      if (def.providersResolver) def.providersResolver(def);\n    }\n    generateExpandoInstructionBlock(tView, tNode, directives.length);\n    for (let i = 0; i < directives.length; i++) {\n      const def = directives[i] as DirectiveDef<any>;\n\n      const directiveDefIdx = tView.data.length;\n      baseResolveDirective(tView, viewData, def, def.factory);\n\n      saveNameToExportMap(tView.data !.length - 1, def, exportsMap);\n\n      // Init hooks are queued now so ngOnInit is called in host components before\n      // any projected components.\n      queueInitHooks(directiveDefIdx, def.onInit, def.doCheck, tView);\n    }\n  }\n  if (exportsMap) cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n}\n\n/**\n * Instantiate all the directives that were previously resolved on the current node.\n */\nfunction instantiateAllDirectives(tView: TView, lView: LView, tNode: TNode) {\n  const start = tNode.directiveStart;\n  const end = tNode.directiveEnd;\n  if (!getFirstTemplatePass() && start < end) {\n    getOrCreateNodeInjectorForNode(\n        tNode as TElementNode | TContainerNode | TElementContainerNode, lView);\n  }\n  for (let i = start; i < end; i++) {\n    const def = tView.data[i] as DirectiveDef<any>;\n    if (isComponentDef(def)) {\n      addComponentLogic(lView, tNode, def as ComponentDef<any>);\n    }\n    const directive = getNodeInjectable(tView.data, lView !, i, tNode as TElementNode);\n    postProcessDirective(lView, directive, def, i);\n  }\n}\n\nfunction invokeDirectivesHostBindings(tView: TView, viewData: LView, tNode: TNode) {\n  const start = tNode.directiveStart;\n  const end = tNode.directiveEnd;\n  const expando = tView.expandoInstructions !;\n  const firstTemplatePass = getFirstTemplatePass();\n  for (let i = start; i < end; i++) {\n    const def = tView.data[i] as DirectiveDef<any>;\n    const directive = viewData[i];\n    if (def.hostBindings) {\n      const previousExpandoLength = expando.length;\n      setCurrentDirectiveDef(def);\n      def.hostBindings !(RenderFlags.Create, directive, tNode.index - HEADER_OFFSET);\n      setCurrentDirectiveDef(null);\n      // `hostBindings` function may or may not contain `allocHostVars` call\n      // (e.g. it may not if it only contains host listeners), so we need to check whether\n      // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n      // expando block, to make sure we execute it for DI cycle\n      if (previousExpandoLength === expando.length && firstTemplatePass) {\n        expando.push(def.hostBindings);\n      }\n    } else if (firstTemplatePass) {\n      expando.push(null);\n    }\n  }\n}\n\n/**\n* Generates a new block in TView.expandoInstructions for this node.\n*\n* Each expando block starts with the element index (turned negative so we can distinguish\n* it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n*/\nexport function generateExpandoInstructionBlock(\n    tView: TView, tNode: TNode, directiveCount: number): void {\n  ngDevMode && assertEqual(\n                   tView.firstTemplatePass, true,\n                   'Expando block should only be generated on first template pass.');\n\n  const elementIndex = -(tNode.index - HEADER_OFFSET);\n  const providerStartIndex = tNode.providerIndexes & TNodeProviderIndexes.ProvidersStartIndexMask;\n  const providerCount = tView.data.length - providerStartIndex;\n  (tView.expandoInstructions || (tView.expandoInstructions = [\n   ])).push(elementIndex, providerCount, directiveCount);\n}\n\n/**\n* On the first template pass, we need to reserve space for host binding values\n* after directives are matched (so all directives are saved, then bindings).\n* Because we are updating the blueprint, we only need to do this once.\n*/\nfunction prefillHostVars(tView: TView, lView: LView, totalHostVars: number): void {\n  ngDevMode &&\n      assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n  for (let i = 0; i < totalHostVars; i++) {\n    lView.push(NO_CHANGE);\n    tView.blueprint.push(NO_CHANGE);\n    tView.data.push(null);\n  }\n}\n\n/**\n * Process a directive on the current node after its creation.\n */\nfunction postProcessDirective<T>(\n    viewData: LView, directive: T, def: DirectiveDef<T>, directiveDefIdx: number): void {\n  const previousOrParentTNode = getPreviousOrParentTNode();\n  postProcessBaseDirective(viewData, previousOrParentTNode, directive, def);\n  ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n  if (previousOrParentTNode && previousOrParentTNode.attrs) {\n    setInputsFromAttrs(directiveDefIdx, directive, def.inputs, previousOrParentTNode);\n  }\n\n  if (def.contentQueries) {\n    def.contentQueries(directiveDefIdx);\n  }\n\n  if (isComponentDef(def)) {\n    const componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n    componentView[CONTEXT] = directive;\n  }\n}\n\n/**\n * A lighter version of postProcessDirective() that is used for the root component.\n */\nfunction postProcessBaseDirective<T>(\n    lView: LView, previousOrParentTNode: TNode, directive: T, def: DirectiveDef<T>): void {\n  const native = getNativeByTNode(previousOrParentTNode, lView);\n\n  ngDevMode && assertEqual(\n                   lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex,\n                   'directives should be created before any bindings');\n  ngDevMode && assertPreviousIsParent(getIsParent());\n\n  attachPatchData(directive, lView);\n  if (native) {\n    attachPatchData(native, lView);\n  }\n\n  // TODO(misko): setUpAttributes should be a feature for better treeshakability.\n  if (def.attributes != null && previousOrParentTNode.type == TNodeType.Element) {\n    setUpAttributes(native as RElement, def.attributes as string[]);\n  }\n}\n\n\n\n/**\n* Matches the current node against all available selectors.\n* If a component is matched (at most one), it is returned in first position in the array.\n*/\nfunction findDirectiveMatches(tView: TView, viewData: LView, tNode: TNode): DirectiveDef<any>[]|\n    null {\n  ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n  const registry = tView.directiveRegistry;\n  let matches: any[]|null = null;\n  if (registry) {\n    for (let i = 0; i < registry.length; i++) {\n      const def = registry[i] as ComponentDef<any>| DirectiveDef<any>;\n      if (isNodeMatchingSelectorList(tNode, def.selectors !, /* isProjectionMode */ false)) {\n        matches || (matches = []);\n        diPublicInInjector(\n            getOrCreateNodeInjectorForNode(\n                getPreviousOrParentTNode() as TElementNode | TContainerNode | TElementContainerNode,\n                viewData),\n            viewData, def.type);\n\n        if (isComponentDef(def)) {\n          if (tNode.flags & TNodeFlags.isComponent) throwMultipleComponentError(tNode);\n          tNode.flags = TNodeFlags.isComponent;\n\n          // The component is always stored first with directives after.\n          matches.unshift(def);\n        } else {\n          matches.push(def);\n        }\n      }\n    }\n  }\n  return matches;\n}\n\n/** Stores index of component's host element so it will be queued for view refresh during CD. */\nexport function queueComponentIndexForCheck(previousOrParentTNode: TNode): void {\n  ngDevMode &&\n      assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n  const tView = getLView()[TVIEW];\n  (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n}\n\n/**\n * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n * CD.\n*/\nfunction queueHostBindingForCheck(\n    tView: TView, def: DirectiveDef<any>| ComponentDef<any>, hostVars: number): void {\n  ngDevMode &&\n      assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n  const expando = tView.expandoInstructions !;\n  const length = expando.length;\n  // Check whether a given `hostBindings` function already exists in expandoInstructions,\n  // which can happen in case directive definition was extended from base definition (as a part of\n  // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n  // list, we just increase the number of host vars associated with that function, but do not add it\n  // into the list again.\n  if (length >= 2 && expando[length - 2] === def.hostBindings) {\n    expando[length - 1] = (expando[length - 1] as number) + hostVars;\n  } else {\n    expando.push(def.hostBindings !, hostVars);\n  }\n}\n\n/** Caches local names and their matching directive indices for query and template lookups. */\nfunction cacheMatchingLocalNames(\n    tNode: TNode, localRefs: string[] | null, exportsMap: {[key: string]: number}): void {\n  if (localRefs) {\n    const localNames: (string | number)[] = tNode.localNames = [];\n\n    // Local names must be stored in tNode in the same order that localRefs are defined\n    // in the template to ensure the data is loaded in the same slots as their refs\n    // in the template (for template queries).\n    for (let i = 0; i < localRefs.length; i += 2) {\n      const index = exportsMap[localRefs[i + 1]];\n      if (index == null) throw new Error(`Export of name '${localRefs[i + 1]}' not found!`);\n      localNames.push(localRefs[i], index);\n    }\n  }\n}\n\n/**\n* Builds up an export map as directives are created, so local refs can be quickly mapped\n* to their directive instances.\n*/\nfunction saveNameToExportMap(\n    index: number, def: DirectiveDef<any>| ComponentDef<any>,\n    exportsMap: {[key: string]: number} | null) {\n  if (exportsMap) {\n    if (def.exportAs) exportsMap[def.exportAs] = index;\n    if ((def as ComponentDef<any>).template) exportsMap[''] = index;\n  }\n}\n\n/**\n * Initializes the flags on the current node, setting all indices to the initial index,\n * the directive count to 0, and adding the isComponent flag.\n * @param index the initial index\n */\nexport function initNodeFlags(tNode: TNode, index: number, numberOfDirectives: number) {\n  ngDevMode && assertEqual(getFirstTemplatePass(), true, 'expected firstTemplatePass to be true');\n  const flags = tNode.flags;\n  ngDevMode && assertEqual(\n                   flags === 0 || flags === TNodeFlags.isComponent, true,\n                   'expected node flags to not be initialized');\n\n  ngDevMode && assertNotEqual(\n                   numberOfDirectives, tNode.directiveEnd - tNode.directiveStart,\n                   'Reached the max number of directives');\n  // When the first directive is created on a node, save the index\n  tNode.flags = flags & TNodeFlags.isComponent;\n  tNode.directiveStart = index;\n  tNode.directiveEnd = index + numberOfDirectives;\n  tNode.providerIndexes = index;\n}\n\nfunction baseResolveDirective<T>(\n    tView: TView, viewData: LView, def: DirectiveDef<T>,\n    directiveFactory: (t: Type<T>| null) => any) {\n  tView.data.push(def);\n  const nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n  tView.blueprint.push(nodeInjectorFactory);\n  viewData.push(nodeInjectorFactory);\n}\n\nfunction addComponentLogic<T>(\n    lView: LView, previousOrParentTNode: TNode, def: ComponentDef<T>): void {\n  const native = getNativeByTNode(previousOrParentTNode, lView);\n\n  const tView = getOrCreateTView(\n      def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n\n  // Only component views should be added to the view tree directly. Embedded views are\n  // accessed through their containers because they may be removed / re-added later.\n  const rendererFactory = lView[RENDERER_FACTORY];\n  const componentView = addToViewTree(\n      lView, previousOrParentTNode.index as number,\n      createLView(\n          lView, tView, null, def.onPush ? LViewFlags.Dirty : LViewFlags.CheckAlways,\n          rendererFactory, lView[RENDERER_FACTORY].createRenderer(native as RElement, def)));\n\n  componentView[HOST_NODE] = previousOrParentTNode as TElementNode;\n\n  // Component view will always be created before any injected LContainers,\n  // so this is a regular element, wrap it with the component view\n  componentView[HOST] = lView[previousOrParentTNode.index];\n  lView[previousOrParentTNode.index] = componentView;\n\n  if (getFirstTemplatePass()) {\n    queueComponentIndexForCheck(previousOrParentTNode);\n  }\n}\n\n/**\n * Sets initial input properties on directive instances from attribute data\n *\n * @param directiveIndex Index of the directive in directives array\n * @param instance Instance of the directive on which to set the initial inputs\n * @param inputs The list of inputs from the directive def\n * @param tNode The static data for this node\n */\nfunction setInputsFromAttrs<T>(\n    directiveIndex: number, instance: T, inputs: {[P in keyof T]: string;}, tNode: TNode): void {\n  let initialInputData = tNode.initialInputs as InitialInputData | undefined;\n  if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n    initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n  }\n\n  const initialInputs: InitialInputs|null = initialInputData[directiveIndex];\n  if (initialInputs) {\n    for (let i = 0; i < initialInputs.length; i += 2) {\n      (instance as any)[initialInputs[i]] = initialInputs[i + 1];\n    }\n  }\n}\n\n/**\n * Generates initialInputData for a node and stores it in the template's static storage\n * so subsequent template invocations don't have to recalculate it.\n *\n * initialInputData is an array containing values that need to be set as input properties\n * for directives on this node, but only once on creation. We need this array to support\n * the case where you set an @Input property of a directive using attribute-like syntax.\n * e.g. if you have a `name` @Input, you can set it once like this:\n *\n * <my-component name=\"Bess\"></my-component>\n *\n * @param directiveIndex Index to store the initial input data\n * @param inputs The list of inputs from the directive def\n * @param tNode The static data on this node\n */\nfunction generateInitialInputs(\n    directiveIndex: number, inputs: {[key: string]: string}, tNode: TNode): InitialInputData {\n  const initialInputData: InitialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n  initialInputData[directiveIndex] = null;\n\n  const attrs = tNode.attrs !;\n  let i = 0;\n  while (i < attrs.length) {\n    const attrName = attrs[i];\n    if (attrName === AttributeMarker.SelectOnly) break;\n    if (attrName === AttributeMarker.NamespaceURI) {\n      // We do not allow inputs on namespaced attributes.\n      i += 4;\n      continue;\n    }\n    const minifiedInputName = inputs[attrName];\n    const attrValue = attrs[i + 1];\n\n    if (minifiedInputName !== undefined) {\n      const inputsToStore: InitialInputs =\n          initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n      inputsToStore.push(minifiedInputName, attrValue as string);\n    }\n\n    i += 2;\n  }\n  return initialInputData;\n}\n\n//////////////////////////\n//// ViewContainer & View\n//////////////////////////\n\n/**\n * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n *\n * @param hostNative The host element for the LContainer\n * @param hostTNode The host TNode for the LContainer\n * @param currentView The parent view of the LContainer\n * @param native The native comment element\n * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n * @returns LContainer\n */\nexport function createLContainer(\n    hostNative: RElement | RComment,\n    hostTNode: TElementNode | TContainerNode | TElementContainerNode, currentView: LView,\n    native: RComment, isForViewContainerRef?: boolean): LContainer {\n  return [\n    isForViewContainerRef ? -1 : 0,          // active index\n    [],                                      // views\n    currentView,                             // parent\n    null,                                    // next\n    null,                                    // queries\n    hostNative,                              // host native\n    native,                                  // native\n    getRenderParent(hostTNode, currentView)  // renderParent\n  ];\n}\n\n/**\n * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n *\n * <ng-template #foo>\n *    <div></div>\n * </ng-template>\n *\n * @param index The index of the container in the data array\n * @param templateFn Inline template\n * @param consts The number of nodes, local refs, and pipes for this template\n * @param vars The number of bindings for this template\n * @param tagName The name of the container element, if applicable\n * @param attrs The attrs attached to the container, if applicable\n * @param localRefs A set of local reference bindings on the element.\n * @param localRefExtractor A function which extracts local-refs values from the template.\n *        Defaults to the current element associated with the local-ref.\n */\nexport function template(\n    index: number, templateFn: ComponentTemplate<any>| null, consts: number, vars: number,\n    tagName?: string | null, attrs?: TAttributes | null, localRefs?: string[] | null,\n    localRefExtractor?: LocalRefExtractor) {\n  const lView = getLView();\n  const tView = lView[TVIEW];\n  // TODO: consider a separate node type for templates\n  const tNode = containerInternal(index, tagName || null, attrs || null);\n\n  if (getFirstTemplatePass()) {\n    tNode.tViews = createTView(\n        -1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n  }\n\n  createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n  const currentQueries = lView[QUERIES];\n  const previousOrParentTNode = getPreviousOrParentTNode();\n  const native = getNativeByTNode(previousOrParentTNode, lView);\n  attachPatchData(native, lView);\n  if (currentQueries) {\n    lView[QUERIES] = currentQueries.addNode(previousOrParentTNode as TContainerNode);\n  }\n  queueLifecycleHooks(tView, tNode);\n  setIsParent(false);\n}\n\n/**\n * Creates an LContainer for inline views, e.g.\n *\n * % if (showing) {\n *   <div></div>\n * % }\n *\n * @param index The index of the container in the data array\n */\nexport function container(index: number): void {\n  const tNode = containerInternal(index, null, null);\n  getFirstTemplatePass() && (tNode.tViews = []);\n  setIsParent(false);\n}\n\nfunction containerInternal(\n    index: number, tagName: string | null, attrs: TAttributes | null): TNode {\n  const lView = getLView();\n  ngDevMode && assertEqual(\n                   lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex,\n                   'container nodes should be created before any bindings');\n\n  const adjustedIndex = index + HEADER_OFFSET;\n  const comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n  ngDevMode && ngDevMode.rendererCreateComment++;\n  const tNode = createNodeAtIndex(index, TNodeType.Container, comment, tagName, attrs);\n  const lContainer = lView[adjustedIndex] =\n      createLContainer(lView[adjustedIndex], tNode, lView, comment);\n\n  appendChild(comment, tNode, lView);\n\n  // Containers are added to the current view tree instead of their embedded views\n  // because views can be removed and re-inserted.\n  addToViewTree(lView, index + HEADER_OFFSET, lContainer);\n\n  const currentQueries = lView[QUERIES];\n  if (currentQueries) {\n    // prepare place for matching nodes from views inserted into a given container\n    lContainer[QUERIES] = currentQueries.container();\n  }\n\n  ngDevMode && assertNodeType(getPreviousOrParentTNode(), TNodeType.Container);\n  return tNode;\n}\n\n/**\n * Sets a container up to receive views.\n *\n * @param index The index of the container in the data array\n */\nexport function containerRefreshStart(index: number): void {\n  const lView = getLView();\n  const tView = lView[TVIEW];\n  let previousOrParentTNode = loadInternal(tView.data, index) as TNode;\n  setPreviousOrParentTNode(previousOrParentTNode);\n\n  ngDevMode && assertNodeType(previousOrParentTNode, TNodeType.Container);\n  setIsParent(true);\n\n  lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n\n  // We need to execute init hooks here so ngOnInit hooks are called in top level views\n  // before they are called in embedded views (for backwards compatibility).\n  executeInitHooks(lView, tView, getCheckNoChangesMode());\n}\n\n/**\n * Marks the end of the LContainer.\n *\n * Marking the end of LContainer is the time when to child views get inserted or removed.\n */\nexport function containerRefreshEnd(): void {\n  let previousOrParentTNode = getPreviousOrParentTNode();\n  if (getIsParent()) {\n    setIsParent(false);\n  } else {\n    ngDevMode && assertNodeType(previousOrParentTNode, TNodeType.View);\n    ngDevMode && assertHasParent(previousOrParentTNode);\n    previousOrParentTNode = previousOrParentTNode.parent !;\n    setPreviousOrParentTNode(previousOrParentTNode);\n  }\n\n  ngDevMode && assertNodeType(previousOrParentTNode, TNodeType.Container);\n\n  const lContainer = getLView()[previousOrParentTNode.index];\n  const nextIndex = lContainer[ACTIVE_INDEX];\n\n  // remove extra views at the end of the container\n  while (nextIndex < lContainer[VIEWS].length) {\n    removeView(lContainer, previousOrParentTNode as TContainerNode, nextIndex);\n  }\n}\n\n/**\n * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n * by executing an associated template function.\n */\nfunction refreshDynamicEmbeddedViews(lView: LView) {\n  for (let current = getLViewChild(lView); current !== null; current = current[NEXT]) {\n    // Note: current can be an LView or an LContainer instance, but here we are only interested\n    // in LContainer. We can tell it's an LContainer because its length is less than the LView\n    // header.\n    if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n      const container = current as LContainer;\n      for (let i = 0; i < container[VIEWS].length; i++) {\n        const dynamicViewData = container[VIEWS][i];\n        // The directives and pipes are not needed here as an existing view is only being refreshed.\n        ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n        renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT] !);\n      }\n    }\n  }\n}\n\n\n/**\n * Looks for a view with a given view block id inside a provided LContainer.\n * Removes views that need to be deleted in the process.\n *\n * @param lContainer to search for views\n * @param tContainerNode to search for views\n * @param startIdx starting index in the views array to search from\n * @param viewBlockId exact view block id to look for\n * @returns index of a found view or -1 if not found\n */\nfunction scanForView(\n    lContainer: LContainer, tContainerNode: TContainerNode, startIdx: number,\n    viewBlockId: number): LView|null {\n  const views = lContainer[VIEWS];\n  for (let i = startIdx; i < views.length; i++) {\n    const viewAtPositionId = views[i][TVIEW].id;\n    if (viewAtPositionId === viewBlockId) {\n      return views[i];\n    } else if (viewAtPositionId < viewBlockId) {\n      // found a view that should not be at this position - remove\n      removeView(lContainer, tContainerNode, i);\n    } else {\n      // found a view with id greater than the one we are searching for\n      // which means that required view doesn't exist and can't be found at\n      // later positions in the views array - stop the searchdef.cont here\n      break;\n    }\n  }\n  return null;\n}\n\n/**\n * Marks the start of an embedded view.\n *\n * @param viewBlockId The ID of this view\n * @return boolean Whether or not this view is in creation mode\n */\nexport function embeddedViewStart(viewBlockId: number, consts: number, vars: number): RenderFlags {\n  const lView = getLView();\n  const previousOrParentTNode = getPreviousOrParentTNode();\n  // The previous node can be a view node if we are processing an inline for loop\n  const containerTNode = previousOrParentTNode.type === TNodeType.View ?\n      previousOrParentTNode.parent ! :\n      previousOrParentTNode;\n  const lContainer = lView[containerTNode.index] as LContainer;\n\n  ngDevMode && assertNodeType(containerTNode, TNodeType.Container);\n  let viewToRender = scanForView(\n      lContainer, containerTNode as TContainerNode, lContainer[ACTIVE_INDEX] !, viewBlockId);\n\n  if (viewToRender) {\n    setIsParent(true);\n    enterView(viewToRender, viewToRender[TVIEW].node);\n  } else {\n    // When we create a new LView, we always reset the state of the instructions.\n    viewToRender = createLView(\n        lView,\n        getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode as TContainerNode), null,\n        LViewFlags.CheckAlways);\n\n    if (lContainer[QUERIES]) {\n      viewToRender[QUERIES] = lContainer[QUERIES] !.createView();\n    }\n\n    createViewNode(viewBlockId, viewToRender);\n    enterView(viewToRender, viewToRender[TVIEW].node);\n  }\n  if (lContainer) {\n    if (isCreationMode(viewToRender)) {\n      // it is a new view, insert it into collection of views for a given container\n      insertView(viewToRender, lContainer, lView, lContainer[ACTIVE_INDEX] !, -1);\n    }\n    lContainer[ACTIVE_INDEX] !++;\n  }\n  return isCreationMode(viewToRender) ? RenderFlags.Create | RenderFlags.Update :\n                                        RenderFlags.Update;\n}\n\n/**\n * Initialize the TView (e.g. static data) for the active embedded view.\n *\n * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n * static data for a particular node would overwrite the static data for a node in the view above\n * it with the same index (since it's in the same template).\n *\n * @param viewIndex The index of the TView in TNode.tViews\n * @param consts The number of nodes, local refs, and pipes in this template\n * @param vars The number of bindings and pure function bindings in this template\n * @param container The parent container in which to look for the view's static data\n * @returns TView\n */\nfunction getOrCreateEmbeddedTView(\n    viewIndex: number, consts: number, vars: number, parent: TContainerNode): TView {\n  const tView = getLView()[TVIEW];\n  ngDevMode && assertNodeType(parent, TNodeType.Container);\n  const containerTViews = parent.tViews as TView[];\n  ngDevMode && assertDefined(containerTViews, 'TView expected');\n  ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n  if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n    containerTViews[viewIndex] = createTView(\n        viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n  }\n  return containerTViews[viewIndex];\n}\n\n/** Marks the end of an embedded view. */\nexport function embeddedViewEnd(): void {\n  const lView = getLView();\n  const viewHost = lView[HOST_NODE];\n\n  if (isCreationMode(lView)) {\n    refreshDescendantViews(lView);  // creation mode pass\n    lView[FLAGS] &= ~LViewFlags.CreationMode;\n  }\n  refreshDescendantViews(lView);  // update mode pass\n  leaveView(lView[PARENT] !);\n  setPreviousOrParentTNode(viewHost !);\n  setIsParent(false);\n}\n\n/////////////\n\n/**\n * Refreshes components by entering the component view and processing its bindings, queries, etc.\n *\n * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n */\nexport function componentRefresh<T>(adjustedElementIndex: number): void {\n  const lView = getLView();\n  ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n  const hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n  ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex] as TNode, TNodeType.Element);\n\n  // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n  if (viewAttached(hostView) && hostView[FLAGS] & (LViewFlags.CheckAlways | LViewFlags.Dirty)) {\n    syncViewWithBlueprint(hostView);\n    checkView(hostView, hostView[CONTEXT]);\n  }\n}\n\n/**\n * Syncs an LView instance with its blueprint if they have gotten out of sync.\n *\n * Typically, blueprints and their view instances should always be in sync, so the loop here\n * will be skipped. However, consider this case of two components side-by-side:\n *\n * App template:\n * ```\n * <comp></comp>\n * <comp></comp>\n * ```\n *\n * The following will happen:\n * 1. App template begins processing.\n * 2. First <comp> is matched as a component and its LView is created.\n * 3. Second <comp> is matched as a component and its LView is created.\n * 4. App template completes processing, so it's time to check child templates.\n * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n * <comp> template, but its LView was created before this update, so it is out of sync.\n *\n * Note that embedded views inside ngFor loops will never be out of sync because these views\n * are processed as soon as they are created.\n *\n * @param componentView The view to sync\n */\nfunction syncViewWithBlueprint(componentView: LView) {\n  const componentTView = componentView[TVIEW];\n  for (let i = componentView.length; i < componentTView.blueprint.length; i++) {\n    componentView[i] = componentTView.blueprint[i];\n  }\n}\n\n/** Returns a boolean for whether the view is attached */\nexport function viewAttached(view: LView): boolean {\n  return (view[FLAGS] & LViewFlags.Attached) === LViewFlags.Attached;\n}\n\n/**\n * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n * It takes all the selectors from the entire component's template and decides where\n * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n * backed by a selector).\n *\n * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n * un-parsed form.\n *\n * The parsed form is needed for efficient matching of a node against a given CSS selector.\n * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n *\n * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n * drawbacks:\n * - having only a textual form would require runtime parsing of CSS selectors;\n * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n * template author).\n *\n * @param selectors A collection of parsed CSS selectors\n * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n */\nexport function projectionDef(selectors?: CssSelectorList[], textSelectors?: string[]): void {\n  const componentNode = findComponentView(getLView())[HOST_NODE] as TElementNode;\n\n  if (!componentNode.projection) {\n    const noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n    const pData: (TNode | null)[] = componentNode.projection =\n        new Array(noOfNodeBuckets).fill(null);\n    const tails: (TNode | null)[] = pData.slice();\n\n    let componentChild: TNode|null = componentNode.child;\n\n    while (componentChild !== null) {\n      const bucketIndex =\n          selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors !) : 0;\n      const nextNode = componentChild.next;\n\n      if (tails[bucketIndex]) {\n        tails[bucketIndex] !.next = componentChild;\n      } else {\n        pData[bucketIndex] = componentChild;\n        componentChild.next = null;\n      }\n      tails[bucketIndex] = componentChild;\n\n      componentChild = nextNode;\n    }\n  }\n}\n\n/**\n * Stack used to keep track of projection nodes in projection() instruction.\n *\n * This is deliberately created outside of projection() to avoid allocating\n * a new array each time the function is called. Instead the array will be\n * re-used by each invocation. This works because the function is not reentrant.\n */\nconst projectionNodeStack: (LView | TNode)[] = [];\n\n/**\n * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n * to the projectionDef instruction.\n *\n * @param nodeIndex\n * @param selectorIndex:\n *        - 0 when the selector is `*` (or unspecified as this is the default value),\n *        - 1 based index of the selector from the {@link projectionDef}\n */\nexport function projection(nodeIndex: number, selectorIndex: number = 0, attrs?: string[]): void {\n  const lView = getLView();\n  const tProjectionNode =\n      createNodeAtIndex(nodeIndex, TNodeType.Projection, null, null, attrs || null);\n\n  // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n  if (tProjectionNode.projection === null) tProjectionNode.projection = selectorIndex;\n\n  // `<ng-content>` has no content\n  setIsParent(false);\n\n  // re-distribution of projectable nodes is stored on a component's view level\n  const componentView = findComponentView(lView);\n  const componentNode = componentView[HOST_NODE] as TElementNode;\n  let nodeToProject = (componentNode.projection as(TNode | null)[])[selectorIndex];\n  let projectedView = componentView[PARENT] !;\n  let projectionNodeIndex = -1;\n\n  while (nodeToProject) {\n    if (nodeToProject.type === TNodeType.Projection) {\n      // This node is re-projected, so we must go up the tree to get its projected nodes.\n      const currentComponentView = findComponentView(projectedView);\n      const currentComponentHost = currentComponentView[HOST_NODE] as TElementNode;\n      const firstProjectedNode =\n          (currentComponentHost.projection as(TNode | null)[])[nodeToProject.projection as number];\n\n      if (firstProjectedNode) {\n        projectionNodeStack[++projectionNodeIndex] = nodeToProject;\n        projectionNodeStack[++projectionNodeIndex] = projectedView;\n\n        nodeToProject = firstProjectedNode;\n        projectedView = currentComponentView[PARENT] !;\n        continue;\n      }\n    } else {\n      // This flag must be set now or we won't know that this node is projected\n      // if the nodes are inserted into a container later.\n      nodeToProject.flags |= TNodeFlags.isProjected;\n      appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n    }\n\n    // If we are finished with a list of re-projected nodes, we need to get\n    // back to the root projection node that was re-projected.\n    if (nodeToProject.next === null && projectedView !== componentView[PARENT] !) {\n      projectedView = projectionNodeStack[projectionNodeIndex--] as LView;\n      nodeToProject = projectionNodeStack[projectionNodeIndex--] as TNode;\n    }\n    nodeToProject = nodeToProject.next;\n  }\n}\n\n/**\n * Adds LView or LContainer to the end of the current view tree.\n *\n * This structure will be used to traverse through nested views to remove listeners\n * and call onDestroy callbacks.\n *\n * @param lView The view where LView or LContainer should be added\n * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n * @param state The LView or LContainer to add to the view tree\n * @returns The state passed in\n */\nexport function addToViewTree<T extends LView|LContainer>(\n    lView: LView, adjustedHostIndex: number, state: T): T {\n  const tView = lView[TVIEW];\n  const firstTemplatePass = getFirstTemplatePass();\n  if (lView[TAIL]) {\n    lView[TAIL] ![NEXT] = state;\n  } else if (firstTemplatePass) {\n    tView.childIndex = adjustedHostIndex;\n  }\n  lView[TAIL] = state;\n  return state;\n}\n\n///////////////////////////////\n//// Change detection\n///////////////////////////////\n\n/** If node is an OnPush component, marks its LView dirty. */\nfunction markDirtyIfOnPush(lView: LView, viewIndex: number): void {\n  const childComponentLView = getComponentViewByIndex(viewIndex, lView);\n  if (!(childComponentLView[FLAGS] & LViewFlags.CheckAlways)) {\n    childComponentLView[FLAGS] |= LViewFlags.Dirty;\n  }\n}\n\n/** Wraps an event listener with preventDefault behavior. */\nfunction wrapListenerWithPreventDefault(listenerFn: (e?: any) => any): EventListener {\n  return function wrapListenerIn_preventDefault(e: Event) {\n    if (listenerFn(e) === false) {\n      e.preventDefault();\n      // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n      e.returnValue = false;\n    }\n  };\n}\n\n/** Marks current view and all ancestors dirty */\nexport function markViewDirty(lView: LView): void {\n  while (lView && !(lView[FLAGS] & LViewFlags.IsRoot)) {\n    lView[FLAGS] |= LViewFlags.Dirty;\n    lView = lView[PARENT] !;\n  }\n  lView[FLAGS] |= LViewFlags.Dirty;\n  ngDevMode && assertDefined(lView[CONTEXT], 'rootContext should be defined');\n\n  const rootContext = lView[CONTEXT] as RootContext;\n  scheduleTick(rootContext, RootContextFlags.DetectChanges);\n}\n\n/**\n * Used to schedule change detection on the whole application.\n *\n * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n * It is usually called indirectly by calling `markDirty` when the view needs to be\n * re-rendered.\n *\n * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n * `scheduleTick` requests. The scheduling function can be overridden in\n * `renderComponent`'s `scheduler` option.\n */\nexport function scheduleTick<T>(rootContext: RootContext, flags: RootContextFlags) {\n  const nothingScheduled = rootContext.flags === RootContextFlags.Empty;\n  rootContext.flags |= flags;\n\n  if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n    let res: null|((val: null) => void);\n    rootContext.clean = new Promise<null>((r) => res = r);\n    rootContext.scheduler(() => {\n      if (rootContext.flags & RootContextFlags.DetectChanges) {\n        rootContext.flags &= ~RootContextFlags.DetectChanges;\n        tickRootContext(rootContext);\n      }\n\n      if (rootContext.flags & RootContextFlags.FlushPlayers) {\n        rootContext.flags &= ~RootContextFlags.FlushPlayers;\n        const playerHandler = rootContext.playerHandler;\n        if (playerHandler) {\n          playerHandler.flushPlayers();\n        }\n      }\n\n      rootContext.clean = _CLEAN_PROMISE;\n      res !(null);\n    });\n  }\n}\n\n/**\n * Used to perform change detection on the whole application.\n *\n * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n * executes lifecycle hooks and conditionally checks components based on their\n * `ChangeDetectionStrategy` and dirtiness.\n *\n * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n * be changed when calling `renderComponent` and providing the `scheduler` option.\n */\nexport function tick<T>(component: T): void {\n  const rootView = getRootView(component);\n  const rootContext = rootView[CONTEXT] as RootContext;\n  tickRootContext(rootContext);\n}\n\nfunction tickRootContext(rootContext: RootContext) {\n  for (let i = 0; i < rootContext.components.length; i++) {\n    const rootComponent = rootContext.components[i];\n    renderComponentOrTemplate(readPatchedLView(rootComponent) !, rootComponent);\n  }\n}\n\n/**\n * Synchronously perform change detection on a component (and possibly its sub-components).\n *\n * This function triggers change detection in a synchronous way on a component. There should\n * be very little reason to call this function directly since a preferred way to do change\n * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n * at some future point in time. This is because a single user action often results in many\n * components being invalidated and calling change detection on each component synchronously\n * would be inefficient. It is better to wait until all components are marked as dirty and\n * then perform single change detection across all of the components\n *\n * @param component The component which the change detection should be performed on.\n */\nexport function detectChanges<T>(component: T): void {\n  const view = getComponentViewByInstance(component) !;\n  detectChangesInternal<T>(view, component);\n}\n\nexport function detectChangesInternal<T>(view: LView, context: T) {\n  const rendererFactory = view[RENDERER_FACTORY];\n\n  if (rendererFactory.begin) rendererFactory.begin();\n\n  if (isCreationMode(view)) {\n    checkView(view, context);  // creation mode pass\n  }\n  checkView(view, context);  // update mode pass\n\n  if (rendererFactory.end) rendererFactory.end();\n}\n\n/**\n * Synchronously perform change detection on a root view and its components.\n *\n * @param lView The view which the change detection should be performed on.\n */\nexport function detectChangesInRootView(lView: LView): void {\n  tickRootContext(lView[CONTEXT] as RootContext);\n}\n\n\n/**\n * Checks the change detector and its children, and throws if any changes are detected.\n *\n * This is used in development mode to verify that running change detection doesn't\n * introduce other changes.\n */\nexport function checkNoChanges<T>(component: T): void {\n  setCheckNoChangesMode(true);\n  try {\n    detectChanges(component);\n  } finally {\n    setCheckNoChangesMode(false);\n  }\n}\n\n/**\n * Checks the change detector on a root view and its components, and throws if any changes are\n * detected.\n *\n * This is used in development mode to verify that running change detection doesn't\n * introduce other changes.\n *\n * @param lView The view which the change detection should be checked on.\n */\nexport function checkNoChangesInRootView(lView: LView): void {\n  setCheckNoChangesMode(true);\n  try {\n    detectChangesInRootView(lView);\n  } finally {\n    setCheckNoChangesMode(false);\n  }\n}\n\n/** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\nexport function checkView<T>(hostView: LView, component: T) {\n  const hostTView = hostView[TVIEW];\n  const oldView = enterView(hostView, hostView[HOST_NODE]);\n  const templateFn = hostTView.template !;\n  const viewQuery = hostTView.viewQuery;\n\n  try {\n    namespaceHTML();\n    createViewQuery(viewQuery, hostView, component);\n    templateFn(getRenderFlags(hostView), component);\n    refreshDescendantViews(hostView);\n    updateViewQuery(viewQuery, hostView, component);\n  } finally {\n    leaveView(oldView);\n  }\n}\n\nfunction createViewQuery<T>(viewQuery: ComponentQuery<{}>| null, view: LView, component: T): void {\n  if (viewQuery && isCreationMode(view)) {\n    viewQuery(RenderFlags.Create, component);\n  }\n}\n\nfunction updateViewQuery<T>(viewQuery: ComponentQuery<{}>| null, view: LView, component: T): void {\n  if (viewQuery && !isCreationMode(view)) {\n    viewQuery(RenderFlags.Update, component);\n  }\n}\n\n\n/**\n * Mark the component as dirty (needing change detection).\n *\n * Marking a component dirty will schedule a change detection on this\n * component at some point in the future. Marking an already dirty\n * component as dirty is a noop. Only one outstanding change detection\n * can be scheduled per component tree. (Two components bootstrapped with\n * separate `renderComponent` will have separate schedulers)\n *\n * When the root component is bootstrapped with `renderComponent`, a scheduler\n * can be provided.\n *\n * @param component Component to mark as dirty.\n *\n * @publicApi\n */\nexport function markDirty<T>(component: T) {\n  ngDevMode && assertDefined(component, 'component');\n  markViewDirty(getComponentViewByInstance(component));\n}\n\n///////////////////////////////\n//// Bindings & interpolations\n///////////////////////////////\n\n/**\n * Creates a single value binding.\n *\n * @param value Value to diff\n */\nexport function bind<T>(value: T): T|NO_CHANGE {\n  const lView = getLView();\n  return bindingUpdated(lView, lView[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n}\n\n/**\n * Allocates the necessary amount of slots for host vars.\n *\n * @param count Amount of vars to be allocated\n */\nexport function allocHostVars(count: number): void {\n  if (!getFirstTemplatePass()) return;\n  const lView = getLView();\n  const tView = lView[TVIEW];\n  queueHostBindingForCheck(tView, getCurrentDirectiveDef() !, count);\n  prefillHostVars(tView, lView, count);\n}\n\n/**\n * Create interpolation bindings with a variable number of expressions.\n *\n * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n * Those are faster because there is no need to create an array of expressions and iterate over it.\n *\n * `values`:\n * - has static text at even indexes,\n * - has evaluated expressions at odd indexes.\n *\n * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nexport function interpolationV(values: any[]): string|NO_CHANGE {\n  ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n  ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n  let different = false;\n  const lView = getLView();\n\n  let bindingIndex = lView[BINDING_INDEX];\n  for (let i = 1; i < values.length; i += 2) {\n    // Check if bindings (odd indexes) have changed\n    bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n  }\n  lView[BINDING_INDEX] = bindingIndex;\n\n  if (!different) {\n    return NO_CHANGE;\n  }\n\n  // Build the updated content\n  let content = values[0];\n  for (let i = 1; i < values.length; i += 2) {\n    content += stringify(values[i]) + values[i + 1];\n  }\n\n  return content;\n}\n\n/**\n * Creates an interpolation binding with 1 expression.\n *\n * @param prefix static value used for concatenation only.\n * @param v0 value checked for change.\n * @param suffix static value used for concatenation only.\n */\nexport function interpolation1(prefix: string, v0: any, suffix: string): string|NO_CHANGE {\n  const lView = getLView();\n  const different = bindingUpdated(lView, lView[BINDING_INDEX], v0);\n  lView[BINDING_INDEX] += 1;\n  return different ? prefix + stringify(v0) + suffix : NO_CHANGE;\n}\n\n/** Creates an interpolation binding with 2 expressions. */\nexport function interpolation2(\n    prefix: string, v0: any, i0: string, v1: any, suffix: string): string|NO_CHANGE {\n  const lView = getLView();\n  const different = bindingUpdated2(lView, lView[BINDING_INDEX], v0, v1);\n  lView[BINDING_INDEX] += 2;\n\n  return different ? prefix + stringify(v0) + i0 + stringify(v1) + suffix : NO_CHANGE;\n}\n\n/** Creates an interpolation binding with 3 expressions. */\nexport function interpolation3(\n    prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, suffix: string): string|\n    NO_CHANGE {\n  const lView = getLView();\n  const different = bindingUpdated3(lView, lView[BINDING_INDEX], v0, v1, v2);\n  lView[BINDING_INDEX] += 3;\n\n  return different ? prefix + stringify(v0) + i0 + stringify(v1) + i1 + stringify(v2) + suffix :\n                     NO_CHANGE;\n}\n\n/** Create an interpolation binding with 4 expressions. */\nexport function interpolation4(\n    prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string, v3: any,\n    suffix: string): string|NO_CHANGE {\n  const lView = getLView();\n  const different = bindingUpdated4(lView, lView[BINDING_INDEX], v0, v1, v2, v3);\n  lView[BINDING_INDEX] += 4;\n\n  return different ?\n      prefix + stringify(v0) + i0 + stringify(v1) + i1 + stringify(v2) + i2 + stringify(v3) +\n          suffix :\n      NO_CHANGE;\n}\n\n/** Creates an interpolation binding with 5 expressions. */\nexport function interpolation5(\n    prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string, v3: any,\n    i3: string, v4: any, suffix: string): string|NO_CHANGE {\n  const lView = getLView();\n  const bindingIndex = lView[BINDING_INDEX];\n  let different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n  different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n  lView[BINDING_INDEX] += 5;\n\n  return different ?\n      prefix + stringify(v0) + i0 + stringify(v1) + i1 + stringify(v2) + i2 + stringify(v3) + i3 +\n          stringify(v4) + suffix :\n      NO_CHANGE;\n}\n\n/** Creates an interpolation binding with 6 expressions. */\nexport function interpolation6(\n    prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string, v3: any,\n    i3: string, v4: any, i4: string, v5: any, suffix: string): string|NO_CHANGE {\n  const lView = getLView();\n  const bindingIndex = lView[BINDING_INDEX];\n  let different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n  different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n  lView[BINDING_INDEX] += 6;\n\n  return different ?\n      prefix + stringify(v0) + i0 + stringify(v1) + i1 + stringify(v2) + i2 + stringify(v3) + i3 +\n          stringify(v4) + i4 + stringify(v5) + suffix :\n      NO_CHANGE;\n}\n\n/** Creates an interpolation binding with 7 expressions. */\nexport function interpolation7(\n    prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string, v3: any,\n    i3: string, v4: any, i4: string, v5: any, i5: string, v6: any, suffix: string): string|\n    NO_CHANGE {\n  const lView = getLView();\n  const bindingIndex = lView[BINDING_INDEX];\n  let different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n  different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n  lView[BINDING_INDEX] += 7;\n\n  return different ?\n      prefix + stringify(v0) + i0 + stringify(v1) + i1 + stringify(v2) + i2 + stringify(v3) + i3 +\n          stringify(v4) + i4 + stringify(v5) + i5 + stringify(v6) + suffix :\n      NO_CHANGE;\n}\n\n/** Creates an interpolation binding with 8 expressions. */\nexport function interpolation8(\n    prefix: string, v0: any, i0: string, v1: any, i1: string, v2: any, i2: string, v3: any,\n    i3: string, v4: any, i4: string, v5: any, i5: string, v6: any, i6: string, v7: any,\n    suffix: string): string|NO_CHANGE {\n  const lView = getLView();\n  const bindingIndex = lView[BINDING_INDEX];\n  let different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n  different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n  lView[BINDING_INDEX] += 8;\n\n  return different ?\n      prefix + stringify(v0) + i0 + stringify(v1) + i1 + stringify(v2) + i2 + stringify(v3) + i3 +\n          stringify(v4) + i4 + stringify(v5) + i5 + stringify(v6) + i6 + stringify(v7) + suffix :\n      NO_CHANGE;\n}\n\n/** Store a value in the `data` at a given `index`. */\nexport function store<T>(index: number, value: T): void {\n  const lView = getLView();\n  const tView = lView[TVIEW];\n  // We don't store any static data for local variables, so the first time\n  // we see the template, we should store as null to avoid a sparse array\n  const adjustedIndex = index + HEADER_OFFSET;\n  if (adjustedIndex >= tView.data.length) {\n    tView.data[adjustedIndex] = null;\n  }\n  lView[adjustedIndex] = value;\n}\n\n/**\n * Retrieves a local reference from the current contextViewData.\n *\n * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n *\n * @param index The index of the local ref in contextViewData.\n */\nexport function reference<T>(index: number) {\n  const contextLView = getContextLView();\n  return loadInternal<T>(contextLView, index);\n}\n\nexport function loadQueryList<T>(queryListIdx: number): QueryList<T> {\n  const lView = getLView();\n  ngDevMode &&\n      assertDefined(\n          lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n  ngDevMode && assertDataInRange(lView[CONTENT_QUERIES] !, queryListIdx);\n\n  return lView[CONTENT_QUERIES] ![queryListIdx];\n}\n\n/** Retrieves a value from current `viewData`. */\nexport function load<T>(index: number): T {\n  return loadInternal<T>(getLView(), index);\n}\n\n\n\n///////////////////////////////\n//// DI\n///////////////////////////////\n\n/**\n * Returns the value associated to the given token from the injectors.\n *\n * `directiveInject` is intended to be used for directive, component and pipe factories.\n *  All other injection use `inject` which does not walk the node injector tree.\n *\n * Usage example (in factory function):\n *\n * class SomeDirective {\n *   constructor(directive: DirectiveA) {}\n *\n *   static ngDirectiveDef = defineDirective({\n *     type: SomeDirective,\n *     factory: () => new SomeDirective(directiveInject(DirectiveA))\n *   });\n * }\n *\n * @param token the type or token to inject\n * @param flags Injection flags\n * @returns the value from the injector or `null` when not found\n */\nexport function directiveInject<T>(token: Type<T>| InjectionToken<T>): T;\nexport function directiveInject<T>(token: Type<T>| InjectionToken<T>, flags: InjectFlags): T;\nexport function directiveInject<T>(\n    token: Type<T>| InjectionToken<T>, flags = InjectFlags.Default): T|null {\n  token = resolveForwardRef(token);\n  return getOrCreateInjectable<T>(\n      getPreviousOrParentTNode() as TElementNode | TContainerNode | TElementContainerNode,\n      getLView(), token, flags);\n}\n\n/**\n * Facade for the attribute injection from DI.\n */\nexport function injectAttribute(attrNameToInject: string): string|null {\n  return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n}\n\n/**\n * Registers a QueryList, associated with a content query, for later refresh (part of a view\n * refresh).\n */\nexport function registerContentQuery<Q>(\n    queryList: QueryList<Q>, currentDirectiveIndex: number): void {\n  const viewData = getLView();\n  const tView = viewData[TVIEW];\n  const savedContentQueriesLength =\n      (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n  if (getFirstTemplatePass()) {\n    const tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n    const lastSavedDirectiveIndex =\n        tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n    if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n      tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n    }\n  }\n}\n\nexport const CLEAN_PROMISE = _CLEAN_PROMISE;\n\nfunction initializeTNodeInputs(tNode: TNode | null) {\n  // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n  // yet been checked.\n  if (tNode) {\n    if (tNode.inputs === undefined) {\n      // mark inputs as checked\n      tNode.inputs = generatePropertyAliases(tNode, BindingDirection.Input);\n    }\n    return tNode.inputs;\n  }\n  return null;\n}\n\n\n/**\n * Returns the current OpaqueViewState instance.\n *\n * Used in conjunction with the restoreView() instruction to save a snapshot\n * of the current view and restore it when listeners are invoked. This allows\n * walking the declaration view tree in listeners to get vars from parent views.\n */\nexport function getCurrentView(): OpaqueViewState {\n  return getLView() as any as OpaqueViewState;\n}\n\nfunction getCleanup(view: LView): any[] {\n  // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n  return view[CLEANUP] || (view[CLEANUP] = []);\n}\n\nfunction getTViewCleanup(view: LView): any[] {\n  return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport './ng_dev_mode';\n\nimport {getLContext} from './context_discovery';\nimport {getRootContext} from './discovery_utils';\nimport {scheduleTick} from './instructions';\nimport {ComponentInstance, DirectiveInstance, Player} from './interfaces/player';\nimport {HEADER_OFFSET, RootContextFlags} from './interfaces/view';\nimport {addPlayerInternal, getOrCreatePlayerContext, getPlayerContext, getPlayersInternal, getStylingContext, throwInvalidRefError} from './styling/util';\n\n/**\n * Adds a player to an element, directive or component instance that will later be\n * animated once change detection has passed.\n *\n * When a player is added to a reference it will stay active until `player.destroy()`\n * is called. Once called then the player will be removed from the active players\n * present on the associated ref instance.\n *\n * To get a list of all the active players on an element see [getPlayers].\n *\n * @param ref The element, directive or component that the player will be placed on.\n * @param player The player that will be triggered to play once change detection has run.\n */\nexport function addPlayer(\n    ref: ComponentInstance | DirectiveInstance | HTMLElement, player: Player): void {\n  const context = getLContext(ref);\n  if (!context) {\n    ngDevMode && throwInvalidRefError();\n    return;\n  }\n\n  const element = context.native as HTMLElement;\n  const lView = context.lView;\n  const playerContext = getOrCreatePlayerContext(element, context) !;\n  const rootContext = getRootContext(lView);\n  addPlayerInternal(playerContext, rootContext, element, player, 0, ref);\n  scheduleTick(rootContext, RootContextFlags.FlushPlayers);\n}\n\n/**\n * Returns a list of all the active players present on the provided ref instance (which can\n * be an instance of a directive, component or element).\n *\n * This function will only return players that have been added to the ref instance using\n * `addPlayer` or any players that are active through any template styling bindings\n * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n *\n * @publicApi\n */\nexport function getPlayers(ref: ComponentInstance | DirectiveInstance | HTMLElement): Player[] {\n  const context = getLContext(ref);\n  if (!context) {\n    ngDevMode && throwInvalidRefError();\n    return [];\n  }\n\n  const stylingContext = getStylingContext(context.nodeIndex, context.lView);\n  const playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n  return playerContext ? getPlayersInternal(playerContext) : [];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {global} from '../util';\n\nimport {assertDefined} from './assert';\nimport {getComponent, getContext, getDirectives, getHostElement, getInjector, getListeners, getPlayers, getRootComponents, getViewComponent, markDirty} from './global_utils_api';\n\n\n\n/**\n * This file introduces series of globally accessible debug tools\n * to allow for the Angular debugging story to function.\n *\n * To see this in action run the following command:\n *\n *   bazel run --define=compile=aot\n *   //packages/core/test/bundling/todo:devserver\n *\n *  Then load `localhost:5432` and start using the console tools.\n */\n\n/**\n * This value reflects the property on the window where the dev\n * tools are patched (window.ng).\n * */\nexport const GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n\n/*\n * Publishes a collection of default debug tools onto `window._ng_`.\n *\n * These functions are available globally when Angular is in development\n * mode and are automatically stripped away from prod mode is on.\n */\nlet _published = false;\nexport function publishDefaultGlobalUtils() {\n  if (!_published) {\n    _published = true;\n    publishGlobalUtil('getComponent', getComponent);\n    publishGlobalUtil('getContext', getContext);\n    publishGlobalUtil('getListeners', getListeners);\n    publishGlobalUtil('getViewComponent', getViewComponent);\n    publishGlobalUtil('getHostElement', getHostElement);\n    publishGlobalUtil('getInjector', getInjector);\n    publishGlobalUtil('getRootComponents', getRootComponents);\n    publishGlobalUtil('getDirectives', getDirectives);\n    publishGlobalUtil('getPlayers', getPlayers);\n    publishGlobalUtil('markDirty', markDirty);\n  }\n}\n\nexport declare type GlobalDevModeContainer = {\n  [GLOBAL_PUBLISH_EXPANDO_KEY]: {[fnName: string]: Function};\n};\n\n/**\n * Publishes the given function to `window.ngDevMode` so that it can be\n * used from the browser console when an application is not in production.\n */\nexport function publishGlobalUtil(name: string, fn: Function): void {\n  const w = global as any as GlobalDevModeContainer;\n  ngDevMode && assertDefined(fn, 'function not defined');\n  if (w) {\n    let container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n    if (!container) {\n      container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n    }\n    container[name] = fn;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// We are temporarily importing the existing viewEngine from core so we can be sure we are\n// correctly implementing its interfaces for backwards compatibility.\nimport {Type} from '../core';\nimport {Injector} from '../di/injector';\nimport {Sanitizer} from '../sanitization/security';\n\nimport {assertComponentType, assertDefined} from './assert';\nimport {getComponentDef} from './definition';\nimport {diPublicInInjector, getOrCreateNodeInjectorForNode} from './di';\nimport {publishDefaultGlobalUtils} from './global_utils';\nimport {queueInitHooks, queueLifecycleHooks} from './hooks';\nimport {CLEAN_PROMISE, createLView, createNodeAtIndex, createTNode, createTView, getOrCreateTView, initNodeFlags, instantiateRootComponent, locateHostElement, queueComponentIndexForCheck, refreshDescendantViews} from './instructions';\nimport {ComponentDef, ComponentType, RenderFlags} from './interfaces/definition';\nimport {TElementNode, TNode, TNodeFlags, TNodeType} from './interfaces/node';\nimport {PlayerHandler} from './interfaces/player';\nimport {RElement, Renderer3, RendererFactory3, domRendererFactory3} from './interfaces/renderer';\nimport {CONTEXT, FLAGS, HEADER_OFFSET, HOST, HOST_NODE, LView, LViewFlags, RootContext, RootContextFlags, TVIEW} from './interfaces/view';\nimport {enterView, getPreviousOrParentTNode, leaveView, resetComponentState, setCurrentDirectiveDef} from './state';\nimport {defaultScheduler, getRootView, readPatchedLView, stringify} from './util';\n\n\n\n/** Options that control how the component should be bootstrapped. */\nexport interface CreateComponentOptions {\n  /** Which renderer factory to use. */\n  rendererFactory?: RendererFactory3;\n\n  /** A custom sanitizer instance */\n  sanitizer?: Sanitizer;\n\n  /** A custom animation player handler */\n  playerHandler?: PlayerHandler;\n\n  /**\n   * Host element on which the component will be bootstrapped. If not specified,\n   * the component definition's `tag` is used to query the existing DOM for the\n   * element to bootstrap.\n   */\n  host?: RElement|string;\n\n  /** Module injector for the component. If unspecified, the injector will be NULL_INJECTOR. */\n  injector?: Injector;\n\n  /**\n   * List of features to be applied to the created component. Features are simply\n   * functions that decorate a component with a certain behavior.\n   *\n   * Typically, the features in this list are features that cannot be added to the\n   * other features list in the component definition because they rely on other factors.\n   *\n   * Example: `RootLifecycleHooks` is a function that adds lifecycle hook capabilities\n   * to root components in a tree-shakable way. It cannot be added to the component\n   * features list because there's no way of knowing when the component will be used as\n   * a root component.\n   */\n  hostFeatures?: HostFeature[];\n\n  /**\n   * A function which is used to schedule change detection work in the future.\n   *\n   * When marking components as dirty, it is necessary to schedule the work of\n   * change detection in the future. This is done to coalesce multiple\n   * {@link markDirty} calls into a single changed detection processing.\n   *\n   * The default value of the scheduler is the `requestAnimationFrame` function.\n   *\n   * It is also useful to override this function for testing purposes.\n   */\n  scheduler?: (work: () => void) => void;\n}\n\n/** See CreateComponentOptions.hostFeatures */\ntype HostFeature = (<T>(component: T, componentDef: ComponentDef<T>) => void);\n\n// TODO: A hack to not pull in the NullInjector from @angular/core.\nexport const NULL_INJECTOR: Injector = {\n  get: (token: any, notFoundValue?: any) => {\n    throw new Error('NullInjector: Not found: ' + stringify(token));\n  }\n};\n\n/**\n * Bootstraps a Component into an existing host element and returns an instance\n * of the component.\n *\n * Use this function to bootstrap a component into the DOM tree. Each invocation\n * of this function will create a separate tree of components, injectors and\n * change detection cycles and lifetimes. To dynamically insert a new component\n * into an existing tree such that it shares the same injection, change detection\n * and object lifetime, use {@link ViewContainer#createComponent}.\n *\n * @param componentType Component to bootstrap\n * @param options Optional parameters which control bootstrapping\n */\nexport function renderComponent<T>(\n    componentType: ComponentType<T>|\n        Type<T>/* Type as workaround for: Microsoft/TypeScript/issues/4881 */\n    ,\n    opts: CreateComponentOptions = {}): T {\n  ngDevMode && publishDefaultGlobalUtils();\n  ngDevMode && assertComponentType(componentType);\n  const rendererFactory = opts.rendererFactory || domRendererFactory3;\n  const sanitizer = opts.sanitizer || null;\n  const componentDef = getComponentDef<T>(componentType) !;\n  if (componentDef.type != componentType) componentDef.type = componentType;\n\n  // The first index of the first selector is the tag name.\n  const componentTag = componentDef.selectors ![0] ![0] as string;\n  const hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n  const rootFlags = componentDef.onPush ? LViewFlags.Dirty | LViewFlags.IsRoot :\n                                          LViewFlags.CheckAlways | LViewFlags.IsRoot;\n  const rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n\n  const renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n  const rootView: LView = createLView(\n      null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory,\n      renderer, undefined, opts.injector || null);\n\n  const oldView = enterView(rootView, null);\n  let component: T;\n  try {\n    if (rendererFactory.begin) rendererFactory.begin();\n    const componentView = createRootComponentView(\n        hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n    component = createRootComponent(\n        componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n\n    refreshDescendantViews(rootView);  // creation mode pass\n    rootView[FLAGS] &= ~LViewFlags.CreationMode;\n    refreshDescendantViews(rootView);  // update mode pass\n  } finally {\n    leaveView(oldView);\n    if (rendererFactory.end) rendererFactory.end();\n  }\n\n  return component;\n}\n\n/**\n * Creates the root component view and the root component node.\n *\n * @param rNode Render host element.\n * @param def ComponentDef\n * @param rootView The parent view where the host node is stored\n * @param renderer The current renderer\n * @param sanitizer The sanitizer, if provided\n *\n * @returns Component view created\n */\nexport function createRootComponentView(\n    rNode: RElement | null, def: ComponentDef<any>, rootView: LView,\n    rendererFactory: RendererFactory3, renderer: Renderer3, sanitizer?: Sanitizer | null): LView {\n  resetComponentState();\n  const tView = rootView[TVIEW];\n  const componentView = createLView(\n      rootView,\n      getOrCreateTView(\n          def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery),\n      null, def.onPush ? LViewFlags.Dirty : LViewFlags.CheckAlways, rendererFactory, renderer,\n      sanitizer);\n  const tNode = createNodeAtIndex(0, TNodeType.Element, rNode, null, null);\n\n  if (tView.firstTemplatePass) {\n    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n    tNode.flags = TNodeFlags.isComponent;\n    initNodeFlags(tNode, rootView.length, 1);\n    queueComponentIndexForCheck(tNode);\n  }\n\n  // Store component view at node index, with node as the HOST\n  componentView[HOST] = rootView[HEADER_OFFSET];\n  componentView[HOST_NODE] = tNode as TElementNode;\n  return rootView[HEADER_OFFSET] = componentView;\n}\n\n/**\n * Creates a root component and sets it up with features and host bindings. Shared by\n * renderComponent() and ViewContainerRef.createComponent().\n */\nexport function createRootComponent<T>(\n    componentView: LView, componentDef: ComponentDef<T>, rootView: LView, rootContext: RootContext,\n    hostFeatures: HostFeature[] | null): any {\n  const tView = rootView[TVIEW];\n  // Create directive instance with factory() and store at next index in viewData\n  const component = instantiateRootComponent(tView, rootView, componentDef);\n\n  rootContext.components.push(component);\n  componentView[CONTEXT] = component;\n\n  hostFeatures && hostFeatures.forEach((feature) => feature(component, componentDef));\n\n  if (tView.firstTemplatePass && componentDef.hostBindings) {\n    const rootTNode = getPreviousOrParentTNode();\n    setCurrentDirectiveDef(componentDef);\n    componentDef.hostBindings(RenderFlags.Create, component, rootTNode.index - HEADER_OFFSET);\n    setCurrentDirectiveDef(null);\n  }\n\n  return component;\n}\n\n\nexport function createRootContext(\n    scheduler?: (workFn: () => void) => void, playerHandler?: PlayerHandler|null): RootContext {\n  return {\n    components: [],\n    scheduler: scheduler || defaultScheduler,\n    clean: CLEAN_PROMISE,\n    playerHandler: playerHandler || null,\n    flags: RootContextFlags.Empty\n  };\n}\n\n/**\n * Used to enable lifecycle hooks on the root component.\n *\n * Include this feature when calling `renderComponent` if the root component\n * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n * be called properly.\n *\n * Example:\n *\n * ```\n * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n * ```\n */\nexport function LifecycleHooksFeature(component: any, def: ComponentDef<any>): void {\n  const rootTView = readPatchedLView(component) ![TVIEW];\n  const dirIndex = rootTView.data.length - 1;\n\n  queueInitHooks(dirIndex, def.onInit, def.doCheck, rootTView);\n  // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n  // LNode).\n  queueLifecycleHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 } as TNode);\n}\n\n/**\n * Retrieve the root context for any component by walking the parent `LView` until\n * reaching the root `LView`.\n *\n * @param component any component\n */\nfunction getRootContext(component: any): RootContext {\n  const rootContext = getRootView(component)[CONTEXT] as RootContext;\n  ngDevMode && assertDefined(rootContext, 'rootContext');\n  return rootContext;\n}\n\n\n/**\n * Wait on component until it is rendered.\n *\n * This function returns a `Promise` which is resolved when the component's\n * change detection is executed. This is determined by finding the scheduler\n * associated with the `component`'s render tree and waiting until the scheduler\n * flushes. If nothing is scheduled, the function returns a resolved promise.\n *\n * Example:\n * ```\n * await whenRendered(myComponent);\n * ```\n *\n * @param component Component to wait upon\n * @returns Promise which resolves when the component is rendered.\n */\nexport function whenRendered(component: any): Promise<null> {\n  return getRootContext(component).clean;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../../type';\nimport {fillProperties} from '../../util/property';\nimport {EMPTY_ARRAY, EMPTY_OBJ} from '../empty';\nimport {ComponentDef, DirectiveDef, DirectiveDefFeature, RenderFlags} from '../interfaces/definition';\n\n\n\n/**\n * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n * @param definition The definition to examine\n */\nfunction isComponentDef<T>(definition: ComponentDef<T>| DirectiveDef<T>):\n    definition is ComponentDef<T> {\n  const def = definition as ComponentDef<T>;\n  return typeof def.template === 'function';\n}\n\nfunction getSuperType(type: Type<any>): Type<any>&\n    {ngComponentDef?: ComponentDef<any>, ngDirectiveDef?: DirectiveDef<any>} {\n  return Object.getPrototypeOf(type.prototype).constructor;\n}\n\n/**\n * Merges the definition from a super class to a sub class.\n * @param definition The definition that is a SubClass of another directive of component\n */\nexport function InheritDefinitionFeature(definition: DirectiveDef<any>| ComponentDef<any>): void {\n  let superType = getSuperType(definition.type);\n\n  while (superType) {\n    let superDef: DirectiveDef<any>|ComponentDef<any>|undefined = undefined;\n    if (isComponentDef(definition)) {\n      // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n      superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n    } else {\n      if (superType.ngComponentDef) {\n        throw new Error('Directives cannot inherit Components');\n      }\n      // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n      superDef = superType.ngDirectiveDef;\n    }\n\n    const baseDef = (superType as any).ngBaseDef;\n\n    // Some fields in the definition may be empty, if there were no values to put in them that\n    // would've justified object creation. Unwrap them if necessary.\n    if (baseDef || superDef) {\n      const writeableDef = definition as any;\n      writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n      writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n      writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n    }\n\n    if (baseDef) {\n      // Merge inputs and outputs\n      fillProperties(definition.inputs, baseDef.inputs);\n      fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n      fillProperties(definition.outputs, baseDef.outputs);\n    }\n\n    if (superDef) {\n      // Merge hostBindings\n      const prevHostBindings = definition.hostBindings;\n      const superHostBindings = superDef.hostBindings;\n      if (superHostBindings) {\n        if (prevHostBindings) {\n          definition.hostBindings = (rf: RenderFlags, ctx: any, elementIndex: number) => {\n            superHostBindings(rf, ctx, elementIndex);\n            prevHostBindings(rf, ctx, elementIndex);\n          };\n        } else {\n          definition.hostBindings = superHostBindings;\n        }\n      }\n\n      // Merge View Queries\n      if (isComponentDef(definition) && isComponentDef(superDef)) {\n        const prevViewQuery = definition.viewQuery;\n        const superViewQuery = superDef.viewQuery;\n        if (superViewQuery) {\n          if (prevViewQuery) {\n            definition.viewQuery = <T>(rf: RenderFlags, ctx: T): void => {\n              superViewQuery(rf, ctx);\n              prevViewQuery(rf, ctx);\n            };\n          } else {\n            definition.viewQuery = superViewQuery;\n          }\n        }\n      }\n\n      // Merge Content Queries\n      const prevContentQueries = definition.contentQueries;\n      const superContentQueries = superDef.contentQueries;\n      if (superContentQueries) {\n        if (prevContentQueries) {\n          definition.contentQueries = (dirIndex: number) => {\n            superContentQueries(dirIndex);\n            prevContentQueries(dirIndex);\n          };\n        } else {\n          definition.contentQueries = superContentQueries;\n        }\n      }\n\n      // Merge Content Queries Refresh\n      const prevContentQueriesRefresh = definition.contentQueriesRefresh;\n      const superContentQueriesRefresh = superDef.contentQueriesRefresh;\n      if (superContentQueriesRefresh) {\n        if (prevContentQueriesRefresh) {\n          definition.contentQueriesRefresh = (directiveIndex: number, queryIndex: number) => {\n            superContentQueriesRefresh(directiveIndex, queryIndex);\n            prevContentQueriesRefresh(directiveIndex, queryIndex);\n          };\n        } else {\n          definition.contentQueriesRefresh = superContentQueriesRefresh;\n        }\n      }\n\n\n      // Merge inputs and outputs\n      fillProperties(definition.inputs, superDef.inputs);\n      fillProperties(definition.declaredInputs, superDef.declaredInputs);\n      fillProperties(definition.outputs, superDef.outputs);\n\n      // Inherit hooks\n      // Assume super class inheritance feature has already run.\n      definition.afterContentChecked =\n          definition.afterContentChecked || superDef.afterContentChecked;\n      definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n      definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n      definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n      definition.doCheck = definition.doCheck || superDef.doCheck;\n      definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n      definition.onInit = definition.onInit || superDef.onInit;\n\n      // Run parent features\n      const features = superDef.features;\n      if (features) {\n        for (const feature of features) {\n          if (feature && feature.ngInherit) {\n            (feature as DirectiveDefFeature)(definition);\n          }\n        }\n      }\n\n      break;\n    } else {\n      // Even if we don't have a definition, check the type for the hooks and use those if need be\n      const superPrototype = superType.prototype;\n\n      if (superPrototype) {\n        definition.afterContentChecked =\n            definition.afterContentChecked || superPrototype.afterContentChecked;\n        definition.afterContentInit =\n            definition.afterContentInit || superPrototype.afterContentInit;\n        definition.afterViewChecked =\n            definition.afterViewChecked || superPrototype.afterViewChecked;\n        definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n        definition.doCheck = definition.doCheck || superPrototype.doCheck;\n        definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n        definition.onInit = definition.onInit || superPrototype.onInit;\n      }\n    }\n\n    superType = Object.getPrototypeOf(superType);\n  }\n}\n\nfunction maybeUnwrapEmpty<T>(value: T[]): T[];\nfunction maybeUnwrapEmpty<T>(value: T): T;\nfunction maybeUnwrapEmpty(value: any): any {\n  if (value === EMPTY_OBJ) {\n    return {};\n  } else if (value === EMPTY_ARRAY) {\n    return [];\n  } else {\n    return value;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {SimpleChange} from '../../change_detection/change_detection_util';\nimport {OnChanges, SimpleChanges} from '../../metadata/lifecycle_hooks';\nimport {DirectiveDef, DirectiveDefFeature} from '../interfaces/definition';\n\nconst PRIVATE_PREFIX = '__ngOnChanges_';\n\ntype OnChangesExpando = OnChanges & {\n  __ngOnChanges_: SimpleChanges|null|undefined;\n  // tslint:disable-next-line:no-any Can hold any value\n  [key: string]: any;\n};\n\n/**\n * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n * lifecycle hook, so it should be included in any component that implements\n * that hook.\n *\n * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n * inherited properties will not be propagated to the ngOnChanges lifecycle\n * hook.\n *\n * Example usage:\n *\n * ```\n * static ngComponentDef = defineComponent({\n *   ...\n *   inputs: {name: 'publicName'},\n *   features: [NgOnChangesFeature]\n * });\n * ```\n */\nexport function NgOnChangesFeature<T>(definition: DirectiveDef<T>): void {\n  const publicToDeclaredInputs = definition.declaredInputs;\n  const publicToMinifiedInputs = definition.inputs;\n  const proto = definition.type.prototype;\n  for (const publicName in publicToDeclaredInputs) {\n    if (publicToDeclaredInputs.hasOwnProperty(publicName)) {\n      const minifiedKey = publicToMinifiedInputs[publicName];\n      const declaredKey = publicToDeclaredInputs[publicName];\n      const privateMinKey = PRIVATE_PREFIX + minifiedKey;\n\n      // Walk the prototype chain to see if we find a property descriptor\n      // That way we can honor setters and getters that were inherited.\n      let originalProperty: PropertyDescriptor|undefined = undefined;\n      let checkProto = proto;\n      while (!originalProperty && checkProto &&\n             Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n        originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n        checkProto = Object.getPrototypeOf(checkProto);\n      }\n\n      const getter = originalProperty && originalProperty.get;\n      const setter = originalProperty && originalProperty.set;\n\n      // create a getter and setter for property\n      Object.defineProperty(proto, minifiedKey, {\n        get: getter ||\n            (setter ? undefined : function(this: OnChangesExpando) { return this[privateMinKey]; }),\n        set<T>(this: OnChangesExpando, value: T) {\n          let simpleChanges = this[PRIVATE_PREFIX];\n          if (!simpleChanges) {\n            simpleChanges = {};\n            // Place where we will store SimpleChanges if there is a change\n            Object.defineProperty(this, PRIVATE_PREFIX, {value: simpleChanges, writable: true});\n          }\n\n          const isFirstChange = !this.hasOwnProperty(privateMinKey);\n          const currentChange = simpleChanges[declaredKey];\n\n          if (currentChange) {\n            currentChange.currentValue = value;\n          } else {\n            simpleChanges[declaredKey] =\n                new SimpleChange(this[privateMinKey], value, isFirstChange);\n          }\n\n          if (isFirstChange) {\n            // Create a place where the actual value will be stored and make it non-enumerable\n            Object.defineProperty(this, privateMinKey, {value, writable: true});\n          } else {\n            this[privateMinKey] = value;\n          }\n\n          if (setter) setter.call(this, value);\n        },\n        // Make the property configurable in dev mode to allow overriding in tests\n        configurable: !!ngDevMode\n      });\n    }\n  }\n\n  // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n  // so the call order is changes-init-check in creation mode. In subsequent\n  // change detection runs, only the check wrapper will be called.\n  if (definition.onInit != null) {\n    definition.onInit = onChangesWrapper(definition.onInit);\n  }\n\n  definition.doCheck = onChangesWrapper(definition.doCheck);\n}\n\n// This option ensures that the ngOnChanges lifecycle hook will be inherited\n// from superclasses (in InheritDefinitionFeature).\n(NgOnChangesFeature as DirectiveDefFeature).ngInherit = true;\n\nfunction onChangesWrapper(delegateHook: (() => void) | null) {\n  return function(this: OnChangesExpando) {\n    const simpleChanges = this[PRIVATE_PREFIX];\n    if (simpleChanges != null) {\n      this.ngOnChanges(simpleChanges);\n      this[PRIVATE_PREFIX] = null;\n    }\n    if (delegateHook) delegateHook.apply(this);\n  };\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport function noop(...args: any[]): any {\n  // Do nothing.\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {injectInjector} from '../render3/di';\nimport {Type} from '../type';\nimport {stringify} from '../util';\nimport {noop} from '../util/noop';\nimport {getClosureSafeProperty} from '../util/property';\n\nimport {defineInjectable} from './defs';\nimport {resolveForwardRef} from './forward_ref';\nimport {InjectionToken} from './injection_token';\nimport {InjectFlags, inject} from './injector_compatibility';\nimport {Inject, Optional, Self, SkipSelf} from './metadata';\nimport {ConstructorProvider, ExistingProvider, FactoryProvider, StaticClassProvider, StaticProvider, ValueProvider} from './provider';\n\nexport const SOURCE = '__source';\nconst _THROW_IF_NOT_FOUND = new Object();\nexport const THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n\n/**\n * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n *\n * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n * project.\n *\n * @publicApi\n */\nexport const INJECTOR = new InjectionToken<Injector>('INJECTOR');\n\nexport class NullInjector implements Injector {\n  get(token: any, notFoundValue: any = _THROW_IF_NOT_FOUND): any {\n    if (notFoundValue === _THROW_IF_NOT_FOUND) {\n      // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n      // reason why correctly written application should cause this exception.\n      // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n      // if(ngDevMode) debugger;\n      throw new Error(`NullInjectorError: No provider for ${stringify(token)}!`);\n    }\n    return notFoundValue;\n  }\n}\n\n/**\n * Concrete injectors implement this interface.\n *\n * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n *\n * @usageNotes\n * ### Example\n *\n * {@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n *\n * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n * @publicApi\n */\nexport abstract class Injector {\n  static THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n  static NULL: Injector = new NullInjector();\n\n  /**\n   * Retrieves an instance from the injector based on the provided token.\n   * @returns The instance from the injector if defined, otherwise the `notFoundValue`.\n   * @throws When the `notFoundValue` is `undefined` or `Injector.THROW_IF_NOT_FOUND`.\n   */\n  abstract get<T>(token: Type<T>|InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  /**\n   * @deprecated from v4.0.0 use Type<T> or InjectionToken<T>\n   * @suppress {duplicate}\n   */\n  abstract get(token: any, notFoundValue?: any): any;\n\n  /**\n   * @deprecated from v5 use the new signature Injector.create(options)\n   */\n  static create(providers: StaticProvider[], parent?: Injector): Injector;\n\n  static create(options: {providers: StaticProvider[], parent?: Injector, name?: string}): Injector;\n\n  /**\n   * Create a new Injector which is configure using `StaticProvider`s.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n   */\n  static create(\n      options: StaticProvider[]|{providers: StaticProvider[], parent?: Injector, name?: string},\n      parent?: Injector): Injector {\n    if (Array.isArray(options)) {\n      return new StaticInjector(options, parent);\n    } else {\n      return new StaticInjector(options.providers, options.parent, options.name || null);\n    }\n  }\n\n  /** @nocollapse */\n  static ngInjectableDef = defineInjectable({\n    providedIn: 'any' as any,\n    factory: () => inject(INJECTOR),\n  });\n\n  /** @internal */\n  static __NG_ELEMENT_ID__: () => Injector = () => SWITCH_INJECTOR_FACTORY();\n}\n\nexport const SWITCH_INJECTOR_FACTORY__POST_R3__ = function() {\n  return injectInjector();\n};\nconst SWITCH_INJECTOR_FACTORY__PRE_R3__ = noop;\nconst SWITCH_INJECTOR_FACTORY: typeof injectInjector = SWITCH_INJECTOR_FACTORY__PRE_R3__;\n\n\nconst IDENT = function<T>(value: T): T {\n  return value;\n};\nconst EMPTY = <any[]>[];\nconst CIRCULAR = IDENT;\nconst MULTI_PROVIDER_FN = function(): any[] {\n  return Array.prototype.slice.call(arguments);\n};\nexport const USE_VALUE =\n    getClosureSafeProperty<ValueProvider>({provide: String, useValue: getClosureSafeProperty});\nconst NG_TOKEN_PATH = 'ngTokenPath';\nconst NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\nconst enum OptionFlags {\n  Optional = 1 << 0,\n  CheckSelf = 1 << 1,\n  CheckParent = 1 << 2,\n  Default = CheckSelf | CheckParent\n}\nconst NULL_INJECTOR = Injector.NULL;\nconst NEW_LINE = /\\n/gm;\nconst NO_NEW_LINE = 'Éµ';\n\nexport class StaticInjector implements Injector {\n  readonly parent: Injector;\n  readonly source: string|null;\n\n  private _records: Map<any, Record>;\n\n  constructor(\n      providers: StaticProvider[], parent: Injector = NULL_INJECTOR, source: string|null = null) {\n    this.parent = parent;\n    this.source = source;\n    const records = this._records = new Map<any, Record>();\n    records.set(\n        Injector, <Record>{token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false});\n    records.set(\n        INJECTOR, <Record>{token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false});\n    recursivelyProcessProviders(records, providers);\n  }\n\n  get<T>(token: Type<T>|InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  get(token: any, notFoundValue?: any): any;\n  get(token: any, notFoundValue?: any, flags: InjectFlags = InjectFlags.Default): any {\n    const record = this._records.get(token);\n    try {\n      return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n    } catch (e) {\n      const tokenPath: any[] = e[NG_TEMP_TOKEN_PATH];\n      if (token[SOURCE]) {\n        tokenPath.unshift(token[SOURCE]);\n      }\n      e.message = formatError('\\n' + e.message, tokenPath, this.source);\n      e[NG_TOKEN_PATH] = tokenPath;\n      e[NG_TEMP_TOKEN_PATH] = null;\n      throw e;\n    }\n  }\n\n  toString() {\n    const tokens = <string[]>[], records = this._records;\n    records.forEach((v, token) => tokens.push(stringify(token)));\n    return `StaticInjector[${tokens.join(', ')}]`;\n  }\n}\n\ntype SupportedProvider =\n    ValueProvider | ExistingProvider | StaticClassProvider | ConstructorProvider | FactoryProvider;\n\ninterface Record {\n  fn: Function;\n  useNew: boolean;\n  deps: DependencyRecord[];\n  value: any;\n}\n\ninterface DependencyRecord {\n  token: any;\n  options: number;\n}\n\ntype TokenPath = Array<any>;\n\nfunction resolveProvider(provider: SupportedProvider): Record {\n  const deps = computeDeps(provider);\n  let fn: Function = IDENT;\n  let value: any = EMPTY;\n  let useNew: boolean = false;\n  let provide = resolveForwardRef(provider.provide);\n  if (USE_VALUE in provider) {\n    // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n    value = (provider as ValueProvider).useValue;\n  } else if ((provider as FactoryProvider).useFactory) {\n    fn = (provider as FactoryProvider).useFactory;\n  } else if ((provider as ExistingProvider).useExisting) {\n    // Just use IDENT\n  } else if ((provider as StaticClassProvider).useClass) {\n    useNew = true;\n    fn = resolveForwardRef((provider as StaticClassProvider).useClass);\n  } else if (typeof provide == 'function') {\n    useNew = true;\n    fn = provide;\n  } else {\n    throw staticError(\n        'StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable',\n        provider);\n  }\n  return {deps, fn, useNew, value};\n}\n\nfunction multiProviderMixError(token: any) {\n  return staticError('Cannot mix multi providers and regular providers', token);\n}\n\nfunction recursivelyProcessProviders(records: Map<any, Record>, provider: StaticProvider) {\n  if (provider) {\n    provider = resolveForwardRef(provider);\n    if (provider instanceof Array) {\n      // if we have an array recurse into the array\n      for (let i = 0; i < provider.length; i++) {\n        recursivelyProcessProviders(records, provider[i]);\n      }\n    } else if (typeof provider === 'function') {\n      // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n      // error messages\n      throw staticError('Function/Class not supported', provider);\n    } else if (provider && typeof provider === 'object' && provider.provide) {\n      // At this point we have what looks like a provider: {provide: ?, ....}\n      let token = resolveForwardRef(provider.provide);\n      const resolvedProvider = resolveProvider(provider);\n      if (provider.multi === true) {\n        // This is a multi provider.\n        let multiProvider: Record|undefined = records.get(token);\n        if (multiProvider) {\n          if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n            throw multiProviderMixError(token);\n          }\n        } else {\n          // Create a placeholder factory which will look up the constituents of the multi provider.\n          records.set(token, multiProvider = <Record>{\n            token: provider.provide,\n            deps: [],\n            useNew: false,\n            fn: MULTI_PROVIDER_FN,\n            value: EMPTY\n          });\n        }\n        // Treat the provider as the token.\n        token = provider;\n        multiProvider.deps.push({token, options: OptionFlags.Default});\n      }\n      const record = records.get(token);\n      if (record && record.fn == MULTI_PROVIDER_FN) {\n        throw multiProviderMixError(token);\n      }\n      records.set(token, resolvedProvider);\n    } else {\n      throw staticError('Unexpected provider', provider);\n    }\n  }\n}\n\nfunction tryResolveToken(\n    token: any, record: Record | undefined, records: Map<any, Record>, parent: Injector,\n    notFoundValue: any, flags: InjectFlags): any {\n  try {\n    return resolveToken(token, record, records, parent, notFoundValue, flags);\n  } catch (e) {\n    // ensure that 'e' is of type Error.\n    if (!(e instanceof Error)) {\n      e = new Error(e);\n    }\n    const path: any[] = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n    path.unshift(token);\n    if (record && record.value == CIRCULAR) {\n      // Reset the Circular flag.\n      record.value = EMPTY;\n    }\n    throw e;\n  }\n}\n\nfunction resolveToken(\n    token: any, record: Record | undefined, records: Map<any, Record>, parent: Injector,\n    notFoundValue: any, flags: InjectFlags): any {\n  let value;\n  if (record && !(flags & InjectFlags.SkipSelf)) {\n    // If we don't have a record, this implies that we don't own the provider hence don't know how\n    // to resolve it.\n    value = record.value;\n    if (value == CIRCULAR) {\n      throw Error(NO_NEW_LINE + 'Circular dependency');\n    } else if (value === EMPTY) {\n      record.value = CIRCULAR;\n      let obj = undefined;\n      let useNew = record.useNew;\n      let fn = record.fn;\n      let depRecords = record.deps;\n      let deps = EMPTY;\n      if (depRecords.length) {\n        deps = [];\n        for (let i = 0; i < depRecords.length; i++) {\n          const depRecord: DependencyRecord = depRecords[i];\n          const options = depRecord.options;\n          const childRecord =\n              options & OptionFlags.CheckSelf ? records.get(depRecord.token) : undefined;\n          deps.push(tryResolveToken(\n              // Current Token to resolve\n              depRecord.token,\n              // A record which describes how to resolve the token.\n              // If undefined, this means we don't have such a record\n              childRecord,\n              // Other records we know about.\n              records,\n              // If we don't know how to resolve dependency and we should not check parent for it,\n              // than pass in Null injector.\n              !childRecord && !(options & OptionFlags.CheckParent) ? NULL_INJECTOR : parent,\n              options & OptionFlags.Optional ? null : Injector.THROW_IF_NOT_FOUND,\n              InjectFlags.Default));\n        }\n      }\n      record.value = value = useNew ? new (fn as any)(...deps) : fn.apply(obj, deps);\n    }\n  } else if (!(flags & InjectFlags.Self)) {\n    value = parent.get(token, notFoundValue, InjectFlags.Default);\n  }\n  return value;\n}\n\nfunction computeDeps(provider: StaticProvider): DependencyRecord[] {\n  let deps: DependencyRecord[] = EMPTY;\n  const providerDeps: any[] =\n      (provider as ExistingProvider & StaticClassProvider & ConstructorProvider).deps;\n  if (providerDeps && providerDeps.length) {\n    deps = [];\n    for (let i = 0; i < providerDeps.length; i++) {\n      let options = OptionFlags.Default;\n      let token = resolveForwardRef(providerDeps[i]);\n      if (token instanceof Array) {\n        for (let j = 0, annotations = token; j < annotations.length; j++) {\n          const annotation = annotations[j];\n          if (annotation instanceof Optional || annotation == Optional) {\n            options = options | OptionFlags.Optional;\n          } else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n            options = options & ~OptionFlags.CheckSelf;\n          } else if (annotation instanceof Self || annotation == Self) {\n            options = options & ~OptionFlags.CheckParent;\n          } else if (annotation instanceof Inject) {\n            token = (annotation as Inject).token;\n          } else {\n            token = resolveForwardRef(annotation);\n          }\n        }\n      }\n      deps.push({token, options});\n    }\n  } else if ((provider as ExistingProvider).useExisting) {\n    const token = resolveForwardRef((provider as ExistingProvider).useExisting);\n    deps = [{token, options: OptionFlags.Default}];\n  } else if (!providerDeps && !(USE_VALUE in provider)) {\n    // useValue & useExisting are the only ones which are exempt from deps all others need it.\n    throw staticError('\\'deps\\' required', provider);\n  }\n  return deps;\n}\n\nfunction formatError(text: string, obj: any, source: string | null = null): string {\n  text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n  let context = stringify(obj);\n  if (obj instanceof Array) {\n    context = obj.map(stringify).join(' -> ');\n  } else if (typeof obj === 'object') {\n    let parts = <string[]>[];\n    for (let key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        let value = obj[key];\n        parts.push(\n            key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n      }\n    }\n    context = `{${parts.join(', ')}}`;\n  }\n  return `StaticInjectorError${source ? '(' + source + ')' : ''}[${context}]: ${text.replace(NEW_LINE, '\\n  ')}`;\n}\n\nfunction staticError(text: string, obj: any): Error {\n  return new Error(formatError(text, obj));\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\nimport {InjectionToken} from './injection_token';\n\n\n/**\n * An internal token whose presence in an injector indicates that the injector should treat itself\n * as a root scoped injector when processing requests for unknown tokens which may indicate\n * they are provided in the root scope.\n */\nexport const APP_ROOT = new InjectionToken<boolean>(\n    'The presence of this token marks an injector as being the root injector.');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OnDestroy} from '../metadata/lifecycle_hooks';\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\nimport {InjectableDef, InjectableType, InjectorType, InjectorTypeWithProviders, getInjectableDef, getInjectorDef} from './defs';\nimport {resolveForwardRef} from './forward_ref';\nimport {InjectionToken} from './injection_token';\nimport {INJECTOR, Injector, NullInjector, THROW_IF_NOT_FOUND, USE_VALUE} from './injector';\nimport {InjectFlags, inject, injectArgs, setCurrentInjector} from './injector_compatibility';\nimport {ClassProvider, ConstructorProvider, ExistingProvider, FactoryProvider, Provider, StaticClassProvider, StaticProvider, TypeProvider, ValueProvider} from './provider';\nimport {APP_ROOT} from './scope';\n\n\n\n/**\n * Internal type for a single provider in a deep provider array.\n */\ntype SingleProvider = TypeProvider | ValueProvider | ClassProvider | ConstructorProvider |\n    ExistingProvider | FactoryProvider | StaticClassProvider;\n\n/**\n * Marker which indicates that a value has not yet been created from the factory function.\n */\nconst NOT_YET = {};\n\n/**\n * Marker which indicates that the factory function for a token is in the process of being called.\n *\n * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n * injection of a dependency has recursively attempted to inject the original token, and there is\n * a circular dependency among the providers.\n */\nconst CIRCULAR = {};\n\nconst EMPTY_ARRAY = [] as any[];\n\n/**\n * A lazily initialized NullInjector.\n */\nlet NULL_INJECTOR: Injector|undefined = undefined;\n\nfunction getNullInjector(): Injector {\n  if (NULL_INJECTOR === undefined) {\n    NULL_INJECTOR = new NullInjector();\n  }\n  return NULL_INJECTOR;\n}\n\n/**\n * An entry in the injector which tracks information about the given token, including a possible\n * current value.\n */\ninterface Record<T> {\n  factory: (() => T)|undefined;\n  value: T|{};\n  multi: any[]|undefined;\n}\n\n/**\n * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n *\n * @publicApi\n */\nexport function createInjector(\n    defType: /* InjectorType<any> */ any, parent: Injector | null = null,\n    additionalProviders: StaticProvider[] | null = null): Injector {\n  parent = parent || getNullInjector();\n  return new R3Injector(defType, additionalProviders, parent);\n}\n\nexport class R3Injector {\n  /**\n   * Map of tokens to records which contain the instances of those tokens.\n   */\n  private records = new Map<Type<any>|InjectionToken<any>, Record<any>>();\n\n  /**\n   * The transitive set of `InjectorType`s which define this injector.\n   */\n  private injectorDefTypes = new Set<InjectorType<any>>();\n\n  /**\n   * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n   */\n  private onDestroy = new Set<OnDestroy>();\n\n  /**\n   * Flag indicating this injector provides the APP_ROOT_SCOPE token, and thus counts as the\n   * root scope.\n   */\n  private readonly isRootInjector: boolean;\n\n  /**\n   * Flag indicating that this injector was previously destroyed.\n   */\n  private destroyed = false;\n\n  constructor(\n      def: InjectorType<any>, additionalProviders: StaticProvider[]|null,\n      readonly parent: Injector) {\n    // Start off by creating Records for every provider declared in every InjectorType\n    // included transitively in `def`.\n    const dedupStack: InjectorType<any>[] = [];\n    deepForEach([def], injectorDef => this.processInjectorType(injectorDef, [], dedupStack));\n\n    additionalProviders && deepForEach(\n                               additionalProviders, provider => this.processProvider(\n                                                        provider, def, additionalProviders));\n\n\n    // Make sure the INJECTOR token provides this injector.\n    this.records.set(INJECTOR, makeRecord(undefined, this));\n\n    // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n    // any injectable scoped to APP_ROOT_SCOPE.\n    this.isRootInjector = this.records.has(APP_ROOT);\n\n    // Eagerly instantiate the InjectorType classes themselves.\n    this.injectorDefTypes.forEach(defType => this.get(defType));\n  }\n\n  /**\n   * Destroy the injector and release references to every instance or provider associated with it.\n   *\n   * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n   * hook was found.\n   */\n  destroy(): void {\n    this.assertNotDestroyed();\n\n    // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n    this.destroyed = true;\n    try {\n      // Call all the lifecycle hooks.\n      this.onDestroy.forEach(service => service.ngOnDestroy());\n    } finally {\n      // Release all references.\n      this.records.clear();\n      this.onDestroy.clear();\n      this.injectorDefTypes.clear();\n    }\n  }\n\n  get<T>(\n      token: Type<T>|InjectionToken<T>, notFoundValue: any = THROW_IF_NOT_FOUND,\n      flags = InjectFlags.Default): T {\n    this.assertNotDestroyed();\n    // Set the injection context.\n    const previousInjector = setCurrentInjector(this);\n    try {\n      // Check for the SkipSelf flag.\n      if (!(flags & InjectFlags.SkipSelf)) {\n        // SkipSelf isn't set, check if the record belongs to this injector.\n        let record: Record<T>|undefined = this.records.get(token);\n        if (record === undefined) {\n          // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n          // with a scope matching this injector.\n          const def = couldBeInjectableType(token) && getInjectableDef(token);\n          if (def && this.injectableDefInScope(def)) {\n            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n            // all along.\n            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n            this.records.set(token, record);\n          }\n        }\n        // If a record was found, get the instance for it and return it.\n        if (record !== undefined) {\n          return this.hydrate(token, record);\n        }\n      }\n\n      // Select the next injector based on the Self flag - if self is set, the next injector is\n      // the NullInjector, otherwise it's the parent.\n      const nextInjector = !(flags & InjectFlags.Self) ? this.parent : getNullInjector();\n      return nextInjector.get(token, notFoundValue);\n    } finally {\n      // Lastly, clean up the state by restoring the previous injector.\n      setCurrentInjector(previousInjector);\n    }\n  }\n\n  private assertNotDestroyed(): void {\n    if (this.destroyed) {\n      throw new Error('Injector has already been destroyed.');\n    }\n  }\n\n  /**\n   * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n   * to this injector.\n   */\n  private processInjectorType(\n      defOrWrappedDef: InjectorType<any>|InjectorTypeWithProviders<any>,\n      parents: InjectorType<any>[], dedupStack: InjectorType<any>[]) {\n    defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n    if (!defOrWrappedDef) return;\n\n    // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n    // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n    // read, so care is taken to only do the read once.\n\n    // First attempt to read the ngInjectorDef.\n    let def = getInjectorDef(defOrWrappedDef);\n\n    // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n    const ngModule =\n        (def == null) && (defOrWrappedDef as InjectorTypeWithProviders<any>).ngModule || undefined;\n\n    // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n    // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n    // is the `ngModule`.\n    const defType: InjectorType<any> =\n        (ngModule === undefined) ? (defOrWrappedDef as InjectorType<any>) : ngModule;\n\n    // Check for circular dependencies.\n    if (ngDevMode && parents.indexOf(defType) !== -1) {\n      const defName = stringify(defType);\n      throw new Error(\n          `Circular dependency in DI detected for type ${defName}. Dependency path: ${parents.map(defType => stringify(defType)).join(' > ')} > ${defName}.`);\n    }\n\n    // Check for multiple imports of the same module\n    const isDuplicate = dedupStack.indexOf(defType) !== -1;\n\n    // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n    // extra providers.\n    const providers =\n        (ngModule !== undefined) && (defOrWrappedDef as InjectorTypeWithProviders<any>).providers ||\n        EMPTY_ARRAY;\n\n    // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n    // `InjectorDef` is on its `ngModule`.\n    if (ngModule !== undefined) {\n      def = getInjectorDef(ngModule);\n    }\n\n    // If no definition was found, it might be from exports. Remove it.\n    if (def == null) {\n      return;\n    }\n\n    // Track the InjectorType and add a provider for it.\n    this.injectorDefTypes.add(defType);\n    this.records.set(defType, makeRecord(def.factory, NOT_YET));\n\n    // Add providers in the same way that @NgModule resolution did:\n\n    // First, include providers from any imports.\n    if (def.imports != null && !isDuplicate) {\n      // Before processing defType's imports, add it to the set of parents. This way, if it ends\n      // up deeply importing itself, this can be detected.\n      ngDevMode && parents.push(defType);\n      // Add it to the set of dedups. This way we can detect multiple imports of the same module\n      dedupStack.push(defType);\n\n      try {\n        deepForEach(\n            def.imports, imported => this.processInjectorType(imported, parents, dedupStack));\n      } finally {\n        // Remove it from the parents set when finished.\n        ngDevMode && parents.pop();\n      }\n    }\n\n    // Next, include providers listed on the definition itself.\n    const defProviders = def.providers;\n    if (defProviders != null && !isDuplicate) {\n      const injectorType = defOrWrappedDef as InjectorType<any>;\n      deepForEach(\n          defProviders, provider => this.processProvider(provider, injectorType, defProviders));\n    }\n\n    // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n    const ngModuleType = (defOrWrappedDef as InjectorTypeWithProviders<any>).ngModule;\n    deepForEach(providers, provider => this.processProvider(provider, ngModuleType, providers));\n  }\n\n  /**\n   * Process a `SingleProvider` and add it.\n   */\n  private processProvider(\n      provider: SingleProvider, ngModuleType: InjectorType<any>, providers: any[]): void {\n    // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n    // property.\n    provider = resolveForwardRef(provider);\n    let token: any =\n        isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n\n    // Construct a `Record` for the provider.\n    const record = providerToRecord(provider, ngModuleType, providers);\n\n    if (!isTypeProvider(provider) && provider.multi === true) {\n      // If the provider indicates that it's a multi-provider, process it specially.\n      // First check whether it's been defined already.\n      let multiRecord = this.records.get(token);\n      if (multiRecord) {\n        // It has. Throw a nice error if\n        if (multiRecord.multi === undefined) {\n          throw new Error(`Mixed multi-provider for ${token}.`);\n        }\n      } else {\n        multiRecord = makeRecord(undefined, NOT_YET, true);\n        multiRecord.factory = () => injectArgs(multiRecord !.multi !);\n        this.records.set(token, multiRecord);\n      }\n      token = provider;\n      multiRecord.multi !.push(provider);\n    } else {\n      const existing = this.records.get(token);\n      if (existing && existing.multi !== undefined) {\n        throw new Error(`Mixed multi-provider for ${stringify(token)}`);\n      }\n    }\n    this.records.set(token, record);\n  }\n\n  private hydrate<T>(token: Type<T>|InjectionToken<T>, record: Record<T>): T {\n    if (record.value === CIRCULAR) {\n      throw new Error(`Cannot instantiate cyclic dependency! ${stringify(token)}`);\n    } else if (record.value === NOT_YET) {\n      record.value = CIRCULAR;\n      record.value = record.factory !();\n    }\n    if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n      this.onDestroy.add(record.value);\n    }\n    return record.value as T;\n  }\n\n  private injectableDefInScope(def: InjectableDef<any>): boolean {\n    if (!def.providedIn) {\n      return false;\n    } else if (typeof def.providedIn === 'string') {\n      return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n    } else {\n      return this.injectorDefTypes.has(def.providedIn);\n    }\n  }\n}\n\nfunction injectableDefOrInjectorDefFactory(token: Type<any>| InjectionToken<any>): () => any {\n  const injectableDef = getInjectableDef(token as InjectableType<any>);\n  if (injectableDef === null) {\n    const injectorDef = getInjectorDef(token as InjectorType<any>);\n    if (injectorDef !== null) {\n      return injectorDef.factory;\n    } else if (token instanceof InjectionToken) {\n      throw new Error(`Token ${stringify(token)} is missing an ngInjectableDef definition.`);\n    } else if (token instanceof Function) {\n      const paramLength = token.length;\n      if (paramLength > 0) {\n        const args: string[] = new Array(paramLength).fill('?');\n        throw new Error(\n            `Can't resolve all parameters for ${stringify(token)}: (${args.join(', ')}).`);\n      }\n      return () => new (token as Type<any>)();\n    }\n    throw new Error('unreachable');\n  }\n  return injectableDef.factory;\n}\n\nfunction providerToRecord(\n    provider: SingleProvider, ngModuleType: InjectorType<any>, providers: any[]): Record<any> {\n  let factory: (() => any)|undefined = providerToFactory(provider, ngModuleType, providers);\n  if (isValueProvider(provider)) {\n    return makeRecord(undefined, provider.useValue);\n  } else {\n    return makeRecord(factory, NOT_YET);\n  }\n}\n\n/**\n * Converts a `SingleProvider` into a factory function.\n *\n * @param provider provider to convert to factory\n */\nexport function providerToFactory(\n    provider: SingleProvider, ngModuleType?: InjectorType<any>, providers?: any[]): () => any {\n  let factory: (() => any)|undefined = undefined;\n  if (isTypeProvider(provider)) {\n    return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n  } else {\n    if (isValueProvider(provider)) {\n      factory = () => resolveForwardRef(provider.useValue);\n    } else if (isExistingProvider(provider)) {\n      factory = () => inject(resolveForwardRef(provider.useExisting));\n    } else if (isFactoryProvider(provider)) {\n      factory = () => provider.useFactory(...injectArgs(provider.deps || []));\n    } else {\n      const classRef = resolveForwardRef(\n          provider &&\n          ((provider as StaticClassProvider | ClassProvider).useClass || provider.provide));\n      if (!classRef) {\n        let ngModuleDetail = '';\n        if (ngModuleType && providers) {\n          const providerDetail = providers.map(v => v == provider ? '?' + provider + '?' : '...');\n          ngModuleDetail =\n              ` - only instances of Provider and Type are allowed, got: [${providerDetail.join(', ')}]`;\n        }\n        throw new Error(\n            `Invalid provider for the NgModule '${stringify(ngModuleType)}'` + ngModuleDetail);\n      }\n      if (hasDeps(provider)) {\n        factory = () => new (classRef)(...injectArgs(provider.deps));\n      } else {\n        return injectableDefOrInjectorDefFactory(classRef);\n      }\n    }\n  }\n  return factory;\n}\n\nfunction makeRecord<T>(\n    factory: (() => T) | undefined, value: T | {}, multi: boolean = false): Record<T> {\n  return {\n    factory: factory,\n    value: value,\n    multi: multi ? [] : undefined,\n  };\n}\n\nfunction deepForEach<T>(input: (T | any[])[], fn: (value: T) => void): void {\n  input.forEach(value => Array.isArray(value) ? deepForEach(value, fn) : fn(value));\n}\n\nfunction isValueProvider(value: SingleProvider): value is ValueProvider {\n  return value && typeof value == 'object' && USE_VALUE in value;\n}\n\nfunction isExistingProvider(value: SingleProvider): value is ExistingProvider {\n  return !!(value && (value as ExistingProvider).useExisting);\n}\n\nfunction isFactoryProvider(value: SingleProvider): value is FactoryProvider {\n  return !!(value && (value as FactoryProvider).useFactory);\n}\n\nexport function isTypeProvider(value: SingleProvider): value is TypeProvider {\n  return typeof value === 'function';\n}\n\nfunction hasDeps(value: ClassProvider | ConstructorProvider | StaticClassProvider):\n    value is ClassProvider&{deps: any[]} {\n  return !!(value as any).deps;\n}\n\nfunction hasOnDestroy(value: any): value is OnDestroy {\n  return typeof value === 'object' && value != null && (value as OnDestroy).ngOnDestroy &&\n      typeof(value as OnDestroy).ngOnDestroy === 'function';\n}\n\nfunction couldBeInjectableType(value: any): value is Type<any>|InjectionToken<any> {\n  return (typeof value === 'function') ||\n      (typeof value === 'object' && value instanceof InjectionToken);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {resolveForwardRef} from '../di/forward_ref';\nimport {Provider} from '../di/provider';\nimport {isTypeProvider, providerToFactory} from '../di/r3_injector';\n\nimport {DirectiveDef} from '.';\nimport {diPublicInInjector, getNodeInjectable, getOrCreateNodeInjectorForNode} from './di';\nimport {directiveInject} from './instructions';\nimport {NodeInjectorFactory} from './interfaces/injector';\nimport {TContainerNode, TElementContainerNode, TElementNode, TNodeFlags, TNodeProviderIndexes} from './interfaces/node';\nimport {LView, TData, TVIEW, TView} from './interfaces/view';\nimport {getLView, getPreviousOrParentTNode} from './state';\nimport {isComponentDef} from './util';\n\n\n\n/**\n * Resolves the providers which are defined in the DirectiveDef.\n *\n * When inserting the tokens and the factories in their respective arrays, we can assume that\n * this method is called first for the component (if any), and then for other directives on the same\n * node.\n * As a consequence,the providers are always processed in that order:\n * 1) The view providers of the component\n * 2) The providers of the component\n * 3) The providers of the other directives\n * This matches the structure of the injectables arrays of a view (for each node).\n * So the tokens and the factories can be pushed at the end of the arrays, except\n * in one case for multi providers.\n *\n * @param def the directive definition\n * @param providers: Array of `providers`.\n * @param viewProviders: Array of `viewProviders`.\n */\nexport function providersResolver<T>(\n    def: DirectiveDef<T>, providers: Provider[], viewProviders: Provider[]): void {\n  const lView = getLView();\n  const tView: TView = lView[TVIEW];\n  if (tView.firstTemplatePass) {\n    const isComponent = isComponentDef(def);\n\n    // The list of view providers is processed first, and the flags are updated\n    resolveProvider(viewProviders, tView.data, tView.blueprint, isComponent, true);\n\n    // Then, the list of providers is processed, and the flags are updated\n    resolveProvider(providers, tView.data, tView.blueprint, isComponent, false);\n  }\n}\n\n/**\n * Resolves a provider and publishes it to the DI system.\n */\nfunction resolveProvider(\n    provider: Provider, tInjectables: TData, lInjectablesBlueprint: NodeInjectorFactory[],\n    isComponent: boolean, isViewProvider: boolean): void {\n  provider = resolveForwardRef(provider);\n  if (Array.isArray(provider)) {\n    // Recursively call `resolveProvider`\n    // Recursion is OK in this case because this code will not be in hot-path once we implement\n    // cloning of the initial state.\n    for (let i = 0; i < provider.length; i++) {\n      resolveProvider(\n          provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n    }\n  } else {\n    const lView = getLView();\n    let token: any = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n    let providerFactory: () => any = providerToFactory(provider);\n\n    const tNode = getPreviousOrParentTNode();\n    const beginIndex = tNode.providerIndexes & TNodeProviderIndexes.ProvidersStartIndexMask;\n    const endIndex = tNode.directiveStart;\n    const cptViewProvidersCount =\n        tNode.providerIndexes >> TNodeProviderIndexes.CptViewProvidersCountShift;\n\n    if (isTypeProvider(provider) || !provider.multi) {\n      // Single provider case: the factory is created and pushed immediately\n      const factory = new NodeInjectorFactory(providerFactory, isViewProvider, directiveInject);\n      const existingFactoryIndex = indexOf(\n          token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount,\n          endIndex);\n      if (existingFactoryIndex == -1) {\n        diPublicInInjector(\n            getOrCreateNodeInjectorForNode(\n                tNode as TElementNode | TContainerNode | TElementContainerNode, lView),\n            lView, token);\n        tInjectables.push(token);\n        tNode.directiveStart++;\n        tNode.directiveEnd++;\n        if (isViewProvider) {\n          tNode.providerIndexes += TNodeProviderIndexes.CptViewProvidersCountShifter;\n        }\n        lInjectablesBlueprint.push(factory);\n        lView.push(factory);\n      } else {\n        lInjectablesBlueprint[existingFactoryIndex] = factory;\n        lView[existingFactoryIndex] = factory;\n      }\n    } else {\n      // Multi provider case:\n      // We create a multi factory which is going to aggregate all the values.\n      // Since the output of such a factory depends on content or view injection,\n      // we create two of them, which are linked together.\n      //\n      // The first one (for view providers) is always in the first block of the injectables array,\n      // and the second one (for providers) is always in the second block.\n      // This is important because view providers have higher priority. When a multi token\n      // is being looked up, the view providers should be found first.\n      // Note that it is not possible to have a multi factory in the third block (directive block).\n      //\n      // The algorithm to process multi providers is as follows:\n      // 1) If the multi provider comes from the `viewProviders` of the component:\n      //   a) If the special view providers factory doesn't exist, it is created and pushed.\n      //   b) Else, the multi provider is added to the existing multi factory.\n      // 2) If the multi provider comes from the `providers` of the component or of another\n      // directive:\n      //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n      //      It is also linked to the multi factory for view providers, if it exists.\n      //   b) Else, the multi provider is added to the existing multi factory.\n\n      const existingProvidersFactoryIndex =\n          indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n      const existingViewProvidersFactoryIndex =\n          indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n      const doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n          lInjectablesBlueprint[existingProvidersFactoryIndex];\n      const doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n          lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n\n      if (isViewProvider && !doesViewProvidersFactoryExist ||\n          !isViewProvider && !doesProvidersFactoryExist) {\n        // Cases 1.a and 2.a\n        diPublicInInjector(\n            getOrCreateNodeInjectorForNode(\n                tNode as TElementNode | TContainerNode | TElementContainerNode, lView),\n            lView, token);\n        const factory = multiFactory(\n            isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver,\n            lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n        if (!isViewProvider && doesViewProvidersFactoryExist) {\n          lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n        }\n        tInjectables.push(token);\n        tNode.directiveStart++;\n        tNode.directiveEnd++;\n        if (isViewProvider) {\n          tNode.providerIndexes += TNodeProviderIndexes.CptViewProvidersCountShifter;\n        }\n        lInjectablesBlueprint.push(factory);\n        lView.push(factory);\n      } else {\n        // Cases 1.b and 2.b\n        multiFactoryAdd(\n            lInjectablesBlueprint ![isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex],\n            providerFactory, !isViewProvider && isComponent);\n      }\n      if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n        lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders !++;\n      }\n    }\n  }\n}\n\n/**\n * Add a factory in a multi factory.\n */\nfunction multiFactoryAdd(\n    multiFactory: NodeInjectorFactory, factory: () => any, isComponentProvider: boolean): void {\n  multiFactory.multi !.push(factory);\n  if (isComponentProvider) {\n    multiFactory.componentProviders !++;\n  }\n}\n\n/**\n * Returns the index of item in the array, but only in the begin to end range.\n */\nfunction indexOf(item: any, arr: any[], begin: number, end: number) {\n  for (let i = begin; i < end; i++) {\n    if (arr[i] === item) return i;\n  }\n  return -1;\n}\n\n/**\n * Use this with `multi` `providers`.\n */\nfunction multiProvidersFactoryResolver(\n    this: NodeInjectorFactory, _: null, tData: TData, lData: LView, tNode: TElementNode): any[] {\n  return multiResolve(this.multi !, []);\n}\n\n/**\n * Use this with `multi` `viewProviders`.\n *\n * This factory knows how to concatenate itself with the existing `multi` `providers`.\n */\nfunction multiViewProvidersFactoryResolver(\n    this: NodeInjectorFactory, _: null, tData: TData, lData: LView, tNode: TElementNode): any[] {\n  const factories = this.multi !;\n  let result: any[];\n  if (this.providerFactory) {\n    const componentCount = this.providerFactory.componentProviders !;\n    const multiProviders = getNodeInjectable(tData, lData, this.providerFactory !.index !, tNode);\n    // Copy the section of the array which contains `multi` `providers` from the component\n    result = multiProviders.slice(0, componentCount);\n    // Insert the `viewProvider` instances.\n    multiResolve(factories, result);\n    // Copy the section of the array which contains `multi` `providers` from other directives\n    for (let i = componentCount; i < multiProviders.length; i++) {\n      result.push(multiProviders[i]);\n    }\n  } else {\n    result = [];\n    // Insert the `viewProvider` instances.\n    multiResolve(factories, result);\n  }\n  return result;\n}\n\n/**\n * Maps an array of factories into an array of values.\n */\nfunction multiResolve(factories: Array<() => any>, result: any[]): any[] {\n  for (let i = 0; i < factories.length; i++) {\n    const factory = factories[i] !as() => null;\n    result.push(factory());\n  }\n  return result;\n}\n\n/**\n * Creates a multi factory.\n */\nfunction multiFactory(\n    factoryFn: (\n        this: NodeInjectorFactory, _: null, tData: TData, lData: LView, tNode: TElementNode) => any,\n    index: number, isViewProvider: boolean, isComponent: boolean,\n    f: () => any): NodeInjectorFactory {\n  const factory = new NodeInjectorFactory(factoryFn, isViewProvider, directiveInject);\n  factory.multi = [];\n  factory.index = index;\n  factory.componentProviders = 0;\n  multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n  return factory;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Provider} from '../../di/provider';\nimport {providersResolver} from '../di_setup';\nimport {DirectiveDef} from '../interfaces/definition';\n\n/**\n * This feature resolves the providers of a directive (or component),\n * and publish them into the DI system, making it visible to others for injection.\n *\n * For example:\n * class ComponentWithProviders {\n *   constructor(private greeter: GreeterDE) {}\n *\n *   static ngComponentDef = defineComponent({\n *     type: ComponentWithProviders,\n *     selectors: [['component-with-providers']],\n *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n *    consts: 1,\n *    vars: 1,\n *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n *      if (fs & RenderFlags.Create) {\n *        text(0);\n *      }\n *      if (fs & RenderFlags.Update) {\n *        textBinding(0, bind(ctx.greeter.greet()));\n *      }\n *    },\n *    features: [ProvidersFeature([GreeterDE])]\n *  });\n * }\n *\n * @param definition\n */\nexport function ProvidersFeature<T>(providers: Provider[], viewProviders: Provider[] = []) {\n  return (definition: DirectiveDef<T>) => {\n    definition.providersResolver = (def: DirectiveDef<T>) =>\n        providersResolver(def, providers, viewProviders);\n  };\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef} from '../change_detection/change_detection';\nimport {Injector} from '../di/injector';\nimport {Type} from '../type';\n\nimport {ElementRef} from './element_ref';\nimport {NgModuleRef} from './ng_module_factory';\nimport {ViewRef} from './view_ref';\n\n/**\n * Represents a component created by a `ComponentFactory`.\n * Provides access to the component instance and related objects,\n * and provides the means of destroying the instance.\n *\n * @publicApi\n */\nexport abstract class ComponentRef<C> {\n  /**\n   * The host or anchor [element](guide/glossary#element) for this component instance.\n   */\n  abstract get location(): ElementRef;\n\n  /**\n   * The [dependency injector](guide/glossary#injector) for this component instance.\n   */\n  abstract get injector(): Injector;\n\n  /**\n   * This component instance.\n   */\n  abstract get instance(): C;\n\n  /**\n   * The [host view](guide/glossary#view-tree) defined by the template\n   * for this component instance.\n   */\n  abstract get hostView(): ViewRef;\n\n  /**\n   * The change detector for this component instance.\n   */\n  abstract get changeDetectorRef(): ChangeDetectorRef;\n\n  /**\n   * The component type.\n   */\n  abstract get componentType(): Type<any>;\n\n  /**\n   * Destroys the component instance and all of the data structures associated with it.\n   */\n  abstract destroy(): void;\n\n  /**\n   * A lifecycle hook that provides additional developer-defined cleanup\n   * functionality for the component.\n   * @param callback A handler function that cleans up developer-defined data\n   * associated with this component. Called when the `destroy()` method is invoked.\n   */\n  abstract onDestroy(callback: Function): void;\n}\n\n/**\n * @publicApi\n */\nexport abstract class ComponentFactory<C> {\n  /**\n   * The component's HTML selector.\n   */\n  abstract get selector(): string;\n  /**\n   * The component's type\n   */\n  abstract get componentType(): Type<any>;\n  /**\n   * Selector for all <ng-content> elements in the component.\n   */\n  abstract get ngContentSelectors(): string[];\n  /**\n   * The inputs of the component.\n   */\n  abstract get inputs(): {propName: string, templateName: string}[];\n  /**\n   * The outputs of the component.\n   */\n  abstract get outputs(): {propName: string, templateName: string}[];\n  /**\n   * Creates a new component.\n   */\n  abstract create(\n      injector: Injector, projectableNodes?: any[][], rootSelectorOrNode?: string|any,\n      ngModule?: NgModuleRef<any>): ComponentRef<C>;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\nimport {ComponentFactory, ComponentRef} from './component_factory';\nimport {NgModuleRef} from './ng_module_factory';\n\nexport function noComponentFactoryError(component: Function) {\n  const error = Error(\n      `No component factory found for ${stringify(component)}. Did you add it to @NgModule.entryComponents?`);\n  (error as any)[ERROR_COMPONENT] = component;\n  return error;\n}\n\nconst ERROR_COMPONENT = 'ngComponent';\n\nexport function getComponent(error: Error): Type<any> {\n  return (error as any)[ERROR_COMPONENT];\n}\n\n\nclass _NullComponentFactoryResolver implements ComponentFactoryResolver {\n  resolveComponentFactory<T>(component: {new (...args: any[]): T}): ComponentFactory<T> {\n    throw noComponentFactoryError(component);\n  }\n}\n\n/**\n * @publicApi\n */\nexport abstract class ComponentFactoryResolver {\n  static NULL: ComponentFactoryResolver = new _NullComponentFactoryResolver();\n  abstract resolveComponentFactory<T>(component: Type<T>): ComponentFactory<T>;\n}\n\nexport class CodegenComponentFactoryResolver implements ComponentFactoryResolver {\n  private _factories = new Map<any, ComponentFactory<any>>();\n\n  constructor(\n      factories: ComponentFactory<any>[], private _parent: ComponentFactoryResolver,\n      private _ngModule: NgModuleRef<any>) {\n    for (let i = 0; i < factories.length; i++) {\n      const factory = factories[i];\n      this._factories.set(factory.componentType, factory);\n    }\n  }\n\n  resolveComponentFactory<T>(component: {new (...args: any[]): T}): ComponentFactory<T> {\n    let factory = this._factories.get(component);\n    if (!factory && this._parent) {\n      factory = this._parent.resolveComponentFactory(component);\n    }\n    if (!factory) {\n      throw noComponentFactoryError(component);\n    }\n    return new ComponentFactoryBoundToModule(factory, this._ngModule);\n  }\n}\n\nexport class ComponentFactoryBoundToModule<C> extends ComponentFactory<C> {\n  readonly selector: string;\n  readonly componentType: Type<any>;\n  readonly ngContentSelectors: string[];\n  readonly inputs: {propName: string, templateName: string}[];\n  readonly outputs: {propName: string, templateName: string}[];\n\n  constructor(private factory: ComponentFactory<C>, private ngModule: NgModuleRef<any>) {\n    super();\n    this.selector = factory.selector;\n    this.componentType = factory.componentType;\n    this.ngContentSelectors = factory.ngContentSelectors;\n    this.inputs = factory.inputs;\n    this.outputs = factory.outputs;\n  }\n\n  create(\n      injector: Injector, projectableNodes?: any[][], rootSelectorOrNode?: string|any,\n      ngModule?: NgModuleRef<any>): ComponentRef<C> {\n    return this.factory.create(\n        injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {Type} from '../type';\n\nimport {ComponentFactoryResolver} from './component_factory_resolver';\n\n\n/**\n * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n * @publicApi\n */\nexport abstract class NgModuleRef<T> {\n  /**\n   * The injector that contains all of the providers of the NgModule.\n   */\n  abstract get injector(): Injector;\n\n  /**\n   * The ComponentFactoryResolver to get hold of the ComponentFactories\n   * declared in the `entryComponents` property of the module.\n   */\n  abstract get componentFactoryResolver(): ComponentFactoryResolver;\n\n  /**\n   * The NgModule instance.\n   */\n  abstract get instance(): T;\n\n  /**\n   * Destroys the module instance and all of the data structures associated with it.\n   */\n  abstract destroy(): void;\n\n  /**\n   * Allows to register a callback that will be called when the module is destroyed.\n   */\n  abstract onDestroy(callback: () => void): void;\n}\n\nexport interface InternalNgModuleRef<T> extends NgModuleRef<T> {\n  // Note: we are using the prefix _ as NgModuleData is an NgModuleRef and therefore directly\n  // exposed to the user.\n  _bootstrapComponents: Type<any>[];\n}\n\n/**\n * @publicApi\n */\nexport abstract class NgModuleFactory<T> {\n  abstract get moduleType(): Type<T>;\n  abstract create(parentInjector: Injector|null): NgModuleRef<T>;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ApplicationRef} from '../application_ref';\nimport {ChangeDetectorRef as viewEngine_ChangeDetectorRef} from '../change_detection/change_detector_ref';\nimport {ViewContainerRef as viewEngine_ViewContainerRef} from '../linker/view_container_ref';\nimport {EmbeddedViewRef as viewEngine_EmbeddedViewRef, InternalViewRef as viewEngine_InternalViewRef} from '../linker/view_ref';\n\nimport {checkNoChanges, checkNoChangesInRootView, checkView, detectChangesInRootView, detectChangesInternal, markViewDirty, storeCleanupFn, viewAttached} from './instructions';\nimport {TNode, TNodeType, TViewNode} from './interfaces/node';\nimport {FLAGS, HOST, HOST_NODE, LView, LViewFlags, PARENT, RENDERER_FACTORY} from './interfaces/view';\nimport {destroyLView} from './node_manipulation';\nimport {getNativeByTNode} from './util';\n\n\n\n// Needed due to tsickle downleveling where multiple `implements` with classes creates\n// multiple @extends in Closure annotations, which is illegal. This workaround fixes\n// the multiple @extends by making the annotation @implements instead\nexport interface viewEngine_ChangeDetectorRef_interface extends viewEngine_ChangeDetectorRef {}\n\nexport class ViewRef<T> implements viewEngine_EmbeddedViewRef<T>, viewEngine_InternalViewRef,\n    viewEngine_ChangeDetectorRef_interface {\n  private _appRef: ApplicationRef|null = null;\n  private _viewContainerRef: viewEngine_ViewContainerRef|null = null;\n\n  /**\n   * @internal\n   */\n  public _tViewNode: TViewNode|null = null;\n\n  /**\n   * @internal\n   */\n  public _lView: LView;\n\n  get rootNodes(): any[] {\n    if (this._lView[HOST] == null) {\n      const tView = this._lView[HOST_NODE] as TViewNode;\n      return collectNativeNodes(this._lView, tView, []);\n    }\n    return [];\n  }\n\n  constructor(_lView: LView, private _context: T|null, private _componentIndex: number) {\n    this._lView = _lView;\n  }\n\n  get context(): T { return this._context ? this._context : this._lookUpContext(); }\n\n  get destroyed(): boolean {\n    return (this._lView[FLAGS] & LViewFlags.Destroyed) === LViewFlags.Destroyed;\n  }\n\n  destroy(): void {\n    if (this._appRef) {\n      this._appRef.detachView(this);\n    } else if (this._viewContainerRef) {\n      const index = this._viewContainerRef.indexOf(this);\n\n      if (index > -1) {\n        this._viewContainerRef.detach(index);\n      }\n\n      this._viewContainerRef = null;\n    }\n    destroyLView(this._lView);\n  }\n\n  onDestroy(callback: Function) { storeCleanupFn(this._lView, callback); }\n\n  /**\n   * Marks a view and all of its ancestors dirty.\n   *\n   * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n   * multiple `markForCheck` calls to into one change detection run.\n   *\n   * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n   * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n   * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n   *\n   * <!-- TODO: Add a link to a chapter on OnPush components -->\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```typescript\n   * @Component({\n   *   selector: 'my-app',\n   *   template: `Number of ticks: {{numberOfTicks}}`\n   *   changeDetection: ChangeDetectionStrategy.OnPush,\n   * })\n   * class AppComponent {\n   *   numberOfTicks = 0;\n   *\n   *   constructor(private ref: ChangeDetectorRef) {\n   *     setInterval(() => {\n   *       this.numberOfTicks++;\n   *       // the following is required, otherwise the view will not be updated\n   *       this.ref.markForCheck();\n   *     }, 1000);\n   *   }\n   * }\n   * ```\n   */\n  markForCheck(): void { markViewDirty(this._lView); }\n\n  /**\n   * Detaches the view from the change detection tree.\n   *\n   * Detached views will not be checked during change detection runs until they are\n   * re-attached, even if they are dirty. `detach` can be used in combination with\n   * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n   * detection checks.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * The following example defines a component with a large list of readonly data.\n   * Imagine the data changes constantly, many times per second. For performance reasons,\n   * we want to check and update the list every five seconds. We can do that by detaching\n   * the component's change detector and doing a local check every five seconds.\n   *\n   * ```typescript\n   * class DataProvider {\n   *   // in a real application the returned data will be different every time\n   *   get data() {\n   *     return [1,2,3,4,5];\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'giant-list',\n   *   template: `\n   *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n   *   `,\n   * })\n   * class GiantList {\n   *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n   *     ref.detach();\n   *     setInterval(() => {\n   *       this.ref.detectChanges();\n   *     }, 5000);\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   providers: [DataProvider],\n   *   template: `\n   *     <giant-list><giant-list>\n   *   `,\n   * })\n   * class App {\n   * }\n   * ```\n   */\n  detach(): void { this._lView[FLAGS] &= ~LViewFlags.Attached; }\n\n  /**\n   * Re-attaches a view to the change detection tree.\n   *\n   * This can be used to re-attach views that were previously detached from the tree\n   * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * The following example creates a component displaying `live` data. The component will detach\n   * its change detector from the main change detector tree when the component's live property\n   * is set to false.\n   *\n   * ```typescript\n   * class DataProvider {\n   *   data = 1;\n   *\n   *   constructor() {\n   *     setInterval(() => {\n   *       this.data = this.data * 2;\n   *     }, 500);\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'live-data',\n   *   inputs: ['live'],\n   *   template: 'Data: {{dataProvider.data}}'\n   * })\n   * class LiveData {\n   *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n   *\n   *   set live(value) {\n   *     if (value) {\n   *       this.ref.reattach();\n   *     } else {\n   *       this.ref.detach();\n   *     }\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'my-app',\n   *   providers: [DataProvider],\n   *   template: `\n   *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n   *     <live-data [live]=\"live\"><live-data>\n   *   `,\n   * })\n   * class AppComponent {\n   *   live = true;\n   * }\n   * ```\n   */\n  reattach(): void { this._lView[FLAGS] |= LViewFlags.Attached; }\n\n  /**\n   * Checks the view and its children.\n   *\n   * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n   * local change detection checks.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * The following example defines a component with a large list of readonly data.\n   * Imagine, the data changes constantly, many times per second. For performance reasons,\n   * we want to check and update the list every five seconds.\n   *\n   * We can do that by detaching the component's change detector and doing a local change detection\n   * check every five seconds.\n   *\n   * See {@link ChangeDetectorRef#detach detach} for more information.\n   */\n  detectChanges(): void { detectChangesInternal(this._lView, this.context); }\n\n  /**\n   * Checks the change detector and its children, and throws if any changes are detected.\n   *\n   * This is used in development mode to verify that running change detection doesn't\n   * introduce other changes.\n   */\n  checkNoChanges(): void { checkNoChanges(this.context); }\n\n  attachToViewContainerRef(vcRef: viewEngine_ViewContainerRef) {\n    if (this._appRef) {\n      throw new Error('This view is already attached directly to the ApplicationRef!');\n    }\n    this._viewContainerRef = vcRef;\n  }\n\n  detachFromAppRef() { this._appRef = null; }\n\n  attachToAppRef(appRef: ApplicationRef) {\n    if (this._viewContainerRef) {\n      throw new Error('This view is already attached to a ViewContainer!');\n    }\n    this._appRef = appRef;\n  }\n\n  private _lookUpContext(): T {\n    return this._context = this._lView[PARENT] ![this._componentIndex] as T;\n  }\n}\n\n/** @internal */\nexport class RootViewRef<T> extends ViewRef<T> {\n  constructor(public _view: LView) { super(_view, null, -1); }\n\n  detectChanges(): void { detectChangesInRootView(this._view); }\n\n  checkNoChanges(): void { checkNoChangesInRootView(this._view); }\n\n  get context(): T { return null !; }\n}\n\nfunction collectNativeNodes(lView: LView, parentTNode: TNode, result: any[]): any[] {\n  let tNodeChild = parentTNode.child;\n\n  while (tNodeChild) {\n    result.push(getNativeByTNode(tNodeChild, lView));\n    if (tNodeChild.type === TNodeType.ElementContainer) {\n      collectNativeNodes(lView, tNodeChild, result);\n    }\n    tNodeChild = tNodeChild.next;\n  }\n\n  return result;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef as ViewEngine_ChangeDetectorRef} from '../change_detection/change_detector_ref';\nimport {Injector, NullInjector} from '../di/injector';\nimport {ComponentFactory as viewEngine_ComponentFactory, ComponentRef as viewEngine_ComponentRef} from '../linker/component_factory';\nimport {ElementRef as ViewEngine_ElementRef} from '../linker/element_ref';\nimport {NgModuleRef as viewEngine_NgModuleRef} from '../linker/ng_module_factory';\nimport {TemplateRef as ViewEngine_TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef as ViewEngine_ViewContainerRef} from '../linker/view_container_ref';\nimport {EmbeddedViewRef as viewEngine_EmbeddedViewRef, ViewRef as viewEngine_ViewRef} from '../linker/view_ref';\nimport {Renderer2} from '../render/api';\nimport {assertDefined, assertGreaterThan, assertLessThan} from './assert';\nimport {NodeInjector, getParentInjectorLocation} from './di';\nimport {addToViewTree, createEmbeddedViewAndNode, createLContainer, renderEmbeddedTemplate} from './instructions';\nimport {ACTIVE_INDEX, LContainer, NATIVE, VIEWS} from './interfaces/container';\nimport {RenderFlags} from './interfaces/definition';\nimport {TContainerNode, TElementContainerNode, TElementNode, TNode, TNodeType, TViewNode} from './interfaces/node';\nimport {LQueries} from './interfaces/query';\nimport {RComment, RElement, Renderer3, isProceduralRenderer} from './interfaces/renderer';\nimport {CONTAINER_INDEX, CONTEXT, HOST_NODE, LView, QUERIES, RENDERER, TView} from './interfaces/view';\nimport {assertNodeOfPossibleTypes} from './node_assert';\nimport {addRemoveViewFromContainer, appendChild, detachView, getBeforeNodeForView, insertView, nativeInsertBefore, nativeNextSibling, nativeParentNode, removeView} from './node_manipulation';\nimport {getLView, getPreviousOrParentTNode} from './state';\nimport {findComponentView, getComponentViewByIndex, getNativeByTNode, getParentInjectorTNode, getParentInjectorView, hasParentInjector, isComponent, isLContainer, isRootView} from './util';\nimport {ViewRef} from './view_ref';\n\n\n/**\n * Creates an ElementRef from the most recent node.\n *\n * @returns The ElementRef instance to use\n */\nexport function injectElementRef(ElementRefToken: typeof ViewEngine_ElementRef):\n    ViewEngine_ElementRef {\n  return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n}\n\nlet R3ElementRef: {new (native: RElement | RComment): ViewEngine_ElementRef};\n\n/**\n * Creates an ElementRef given a node.\n *\n * @param ElementRefToken The ElementRef type\n * @param tNode The node for which you'd like an ElementRef\n * @param view The view to which the node belongs\n * @returns The ElementRef instance to use\n */\nexport function createElementRef(\n    ElementRefToken: typeof ViewEngine_ElementRef, tNode: TNode,\n    view: LView): ViewEngine_ElementRef {\n  if (!R3ElementRef) {\n    // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n    R3ElementRef = class ElementRef_ extends ElementRefToken {};\n  }\n  return new R3ElementRef(getNativeByTNode(tNode, view));\n}\n\nlet R3TemplateRef: {\n  new (\n      _declarationParentView: LView, elementRef: ViewEngine_ElementRef, _tView: TView,\n      _renderer: Renderer3, _queries: LQueries | null, _injectorIndex: number):\n      ViewEngine_TemplateRef<any>\n};\n\n/**\n * Creates a TemplateRef given a node.\n *\n * @returns The TemplateRef instance to use\n */\nexport function injectTemplateRef<T>(\n    TemplateRefToken: typeof ViewEngine_TemplateRef,\n    ElementRefToken: typeof ViewEngine_ElementRef): ViewEngine_TemplateRef<T>|null {\n  return createTemplateRef<T>(\n      TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n}\n\n/**\n * Creates a TemplateRef and stores it on the injector.\n *\n * @param TemplateRefToken The TemplateRef type\n * @param ElementRefToken The ElementRef type\n * @param hostTNode The node that is requesting a TemplateRef\n * @param hostView The view to which the node belongs\n * @returns The TemplateRef instance to use\n */\nexport function createTemplateRef<T>(\n    TemplateRefToken: typeof ViewEngine_TemplateRef, ElementRefToken: typeof ViewEngine_ElementRef,\n    hostTNode: TNode, hostView: LView): ViewEngine_TemplateRef<T>|null {\n  if (!R3TemplateRef) {\n    // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n    R3TemplateRef = class TemplateRef_<T> extends TemplateRefToken<T> {\n      constructor(\n          private _declarationParentView: LView, readonly elementRef: ViewEngine_ElementRef,\n          private _tView: TView, private _renderer: Renderer3, private _queries: LQueries|null,\n          private _injectorIndex: number) {\n        super();\n      }\n\n      createEmbeddedView(\n          context: T, container?: LContainer,\n          hostTNode?: TElementNode|TContainerNode|TElementContainerNode, hostView?: LView,\n          index?: number): viewEngine_EmbeddedViewRef<T> {\n        const lView = createEmbeddedViewAndNode(\n            this._tView, context, this._declarationParentView, this._renderer, this._queries,\n            this._injectorIndex);\n        if (container) {\n          insertView(lView, container, hostView !, index !, hostTNode !.index);\n        }\n        renderEmbeddedTemplate(lView, this._tView, context);\n        const viewRef = new ViewRef(lView, context, -1);\n        viewRef._tViewNode = lView[HOST_NODE] as TViewNode;\n        return viewRef;\n      }\n    };\n  }\n\n  if (hostTNode.type === TNodeType.Container) {\n    const hostContainer: LContainer = hostView[hostTNode.index];\n    ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n    return new R3TemplateRef(\n        hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews as TView,\n        getLView()[RENDERER], hostContainer[QUERIES], hostTNode.injectorIndex);\n  } else {\n    return null;\n  }\n}\n\nlet R3ViewContainerRef: {\n  new (\n      lContainer: LContainer, hostTNode: TElementNode | TContainerNode | TElementContainerNode,\n      hostView: LView): ViewEngine_ViewContainerRef\n};\n\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @returns The ViewContainerRef instance to use\n */\nexport function injectViewContainerRef(\n    ViewContainerRefToken: typeof ViewEngine_ViewContainerRef,\n    ElementRefToken: typeof ViewEngine_ElementRef): ViewEngine_ViewContainerRef {\n  const previousTNode =\n      getPreviousOrParentTNode() as TElementNode | TElementContainerNode | TContainerNode;\n  return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n}\n\n/**\n * Creates a ViewContainerRef and stores it on the injector.\n *\n * @param ViewContainerRefToken The ViewContainerRef type\n * @param ElementRefToken The ElementRef type\n * @param hostTNode The node that is requesting a ViewContainerRef\n * @param hostView The view to which the node belongs\n * @returns The ViewContainerRef instance to use\n */\nexport function createContainerRef(\n    ViewContainerRefToken: typeof ViewEngine_ViewContainerRef,\n    ElementRefToken: typeof ViewEngine_ElementRef,\n    hostTNode: TElementNode|TContainerNode|TElementContainerNode,\n    hostView: LView): ViewEngine_ViewContainerRef {\n  if (!R3ViewContainerRef) {\n    // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n    R3ViewContainerRef = class ViewContainerRef_ extends ViewContainerRefToken {\n      private _viewRefs: viewEngine_ViewRef[] = [];\n\n      constructor(\n          private _lContainer: LContainer,\n          private _hostTNode: TElementNode|TContainerNode|TElementContainerNode,\n          private _hostView: LView) {\n        super();\n      }\n\n      get element(): ViewEngine_ElementRef {\n        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n      }\n\n      get injector(): Injector { return new NodeInjector(this._hostTNode, this._hostView); }\n\n      /** @deprecated No replacement */\n      get parentInjector(): Injector {\n        const parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n        const parentView = getParentInjectorView(parentLocation, this._hostView);\n        const parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n\n        return !hasParentInjector(parentLocation) || parentTNode == null ?\n            new NodeInjector(null, this._hostView) :\n            new NodeInjector(parentTNode, parentView);\n      }\n\n      clear(): void {\n        while (this._lContainer[VIEWS].length) {\n          this.remove(0);\n        }\n      }\n\n      get(index: number): viewEngine_ViewRef|null { return this._viewRefs[index] || null; }\n\n      get length(): number { return this._lContainer[VIEWS].length; }\n\n      createEmbeddedView<C>(templateRef: ViewEngine_TemplateRef<C>, context?: C, index?: number):\n          viewEngine_EmbeddedViewRef<C> {\n        const adjustedIdx = this._adjustIndex(index);\n        const viewRef = (templateRef as any)\n                            .createEmbeddedView(\n                                context || <any>{}, this._lContainer, this._hostTNode,\n                                this._hostView, adjustedIdx);\n        (viewRef as ViewRef<any>).attachToViewContainerRef(this);\n        this._viewRefs.splice(adjustedIdx, 0, viewRef);\n        return viewRef;\n      }\n\n      createComponent<C>(\n          componentFactory: viewEngine_ComponentFactory<C>, index?: number|undefined,\n          injector?: Injector|undefined, projectableNodes?: any[][]|undefined,\n          ngModuleRef?: viewEngine_NgModuleRef<any>|undefined): viewEngine_ComponentRef<C> {\n        const contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && (componentFactory as any).ngModule == null && contextInjector) {\n          ngModuleRef = contextInjector.get(viewEngine_NgModuleRef, null);\n        }\n\n        const componentRef =\n            componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n      }\n\n      insert(viewRef: viewEngine_ViewRef, index?: number): viewEngine_ViewRef {\n        if (viewRef.destroyed) {\n          throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        const lView = (viewRef as ViewRef<any>)._lView !;\n        const adjustedIdx = this._adjustIndex(index);\n\n        insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n\n        const beforeNode =\n            getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n        addRemoveViewFromContainer(lView, true, beforeNode);\n\n        (viewRef as ViewRef<any>).attachToViewContainerRef(this);\n        this._viewRefs.splice(adjustedIdx, 0, viewRef);\n\n        return viewRef;\n      }\n\n      move(viewRef: viewEngine_ViewRef, newIndex: number): viewEngine_ViewRef {\n        if (viewRef.destroyed) {\n          throw new Error('Cannot move a destroyed View in a ViewContainer!');\n        }\n        const index = this.indexOf(viewRef);\n        this.detach(index);\n        this.insert(viewRef, this._adjustIndex(newIndex));\n        return viewRef;\n      }\n\n      indexOf(viewRef: viewEngine_ViewRef): number { return this._viewRefs.indexOf(viewRef); }\n\n      remove(index?: number): void {\n        const adjustedIdx = this._adjustIndex(index, -1);\n        removeView(this._lContainer, this._hostTNode, adjustedIdx);\n        this._viewRefs.splice(adjustedIdx, 1);\n      }\n\n      detach(index?: number): viewEngine_ViewRef|null {\n        const adjustedIdx = this._adjustIndex(index, -1);\n        const view = detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n        const wasDetached = this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n        return wasDetached ? new ViewRef(view, view[CONTEXT], view[CONTAINER_INDEX]) : null;\n      }\n\n      private _adjustIndex(index?: number, shift: number = 0) {\n        if (index == null) {\n          return this._lContainer[VIEWS].length + shift;\n        }\n        if (ngDevMode) {\n          assertGreaterThan(index, -1, 'index must be positive');\n          // +1 because it's legal to insert at the end.\n          assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n        }\n        return index;\n      }\n    };\n  }\n\n  ngDevMode && assertNodeOfPossibleTypes(\n                   hostTNode, TNodeType.Container, TNodeType.Element, TNodeType.ElementContainer);\n\n  let lContainer: LContainer;\n  const slotValue = hostView[hostTNode.index];\n  if (isLContainer(slotValue)) {\n    // If the host is a container, we don't need to create a new LContainer\n    lContainer = slotValue;\n    lContainer[ACTIVE_INDEX] = -1;\n  } else {\n    const commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n    ngDevMode && ngDevMode.rendererCreateComment++;\n\n    // A container can be created on the root (topmost / bootstrapped) component and in this case we\n    // can't use LTree to insert container's marker node (both parent of a comment node and the\n    // commend node itself is located outside of elements hold by LTree). In this specific case we\n    // use low-level DOM manipulation to insert container's marker (comment) node.\n    if (isRootView(hostView)) {\n      const renderer = hostView[RENDERER];\n      const hostNative = getNativeByTNode(hostTNode, hostView) !;\n      const parentOfHostNative = nativeParentNode(renderer, hostNative);\n      nativeInsertBefore(\n          renderer, parentOfHostNative !, commentNode, nativeNextSibling(renderer, hostNative));\n    } else {\n      appendChild(commentNode, hostTNode, hostView);\n    }\n\n    hostView[hostTNode.index] = lContainer =\n        createLContainer(slotValue, hostTNode, hostView, commentNode, true);\n\n    addToViewTree(hostView, hostTNode.index as number, lContainer);\n  }\n\n  return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n}\n\n\n/** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\nexport function injectChangeDetectorRef(): ViewEngine_ChangeDetectorRef {\n  return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n}\n\n/**\n * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n *\n * @param hostTNode The node that is requesting a ChangeDetectorRef\n * @param hostView The view to which the node belongs\n * @param context The context for this change detector ref\n * @returns The ChangeDetectorRef to use\n */\nexport function createViewRef(\n    hostTNode: TNode, hostView: LView, context: any): ViewEngine_ChangeDetectorRef {\n  if (isComponent(hostTNode)) {\n    const componentIndex = hostTNode.directiveStart;\n    const componentView = getComponentViewByIndex(hostTNode.index, hostView);\n    return new ViewRef(componentView, context, componentIndex);\n  } else if (hostTNode.type === TNodeType.Element) {\n    const hostComponentView = findComponentView(hostView);\n    return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n  }\n  return null !;\n}\n\nfunction getOrCreateRenderer2(view: LView): Renderer2 {\n  const renderer = view[RENDERER];\n  if (isProceduralRenderer(renderer)) {\n    return renderer as Renderer2;\n  } else {\n    throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n  }\n}\n\n/** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\nexport function injectRenderer2(): Renderer2 {\n  return getOrCreateRenderer2(getLView());\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {injectElementRef as render3InjectElementRef} from '../render3/view_engine_compatibility';\nimport {noop} from '../util/noop';\n\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * @security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n * @publicApi\n */\n// Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n// i.e. users have to ask for what they need. With that, we can build better analysis tools\n// and could do better codegen in the future.\nexport class ElementRef<T = any> {\n  /**\n   * The underlying native element or `null` if direct access to native elements is not supported\n   * (e.g. when the application runs in a web worker).\n   *\n   * <div class=\"callout is-critical\">\n   *   <header>Use with caution</header>\n   *   <p>\n   *    Use this API as the last resort when direct access to DOM is needed. Use templating and\n   *    data-binding provided by Angular instead. Alternatively you can take a look at {@link\n   * Renderer2}\n   *    which provides API that can safely be used even when direct access to native elements is not\n   *    supported.\n   *   </p>\n   *   <p>\n   *    Relying on direct DOM access creates tight coupling between your application and rendering\n   *    layers which will make it impossible to separate the two and deploy your application into a\n   *    web worker.\n   *   </p>\n   * </div>\n   *\n   */\n  public nativeElement: T;\n\n  constructor(nativeElement: T) { this.nativeElement = nativeElement; }\n\n  /** @internal */\n  static __NG_ELEMENT_ID__: () => ElementRef = () => SWITCH_ELEMENT_REF_FACTORY(ElementRef);\n}\n\nexport const SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = render3InjectElementRef;\nconst SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\nconst SWITCH_ELEMENT_REF_FACTORY: typeof render3InjectElementRef =\n    SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '../di/injection_token';\nimport {Injector} from '../di/injector';\nimport {ViewEncapsulation} from '../metadata/view';\nimport {injectRenderer2 as render3InjectRenderer2} from '../render3/view_engine_compatibility';\nimport {noop} from '../util/noop';\n\n\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n * @publicApi\n */\nexport class RenderComponentType {\n  constructor(\n      public id: string, public templateUrl: string, public slotCount: number,\n      public encapsulation: ViewEncapsulation, public styles: Array<string|any[]>,\n      public animations: any) {}\n}\n\n/**\n * @deprecated Debug info is handled internally in the view engine now.\n */\nexport abstract class RenderDebugInfo {\n  abstract get injector(): Injector;\n  abstract get component(): any;\n  abstract get providerTokens(): any[];\n  abstract get references(): {[key: string]: any};\n  abstract get context(): any;\n  abstract get source(): string;\n}\n\n/**\n * @deprecated Use the `Renderer2` instead.\n */\nexport interface DirectRenderer {\n  remove(node: any): void;\n  appendChild(node: any, parent: any): void;\n  insertBefore(node: any, refNode: any): void;\n  nextSibling(node: any): any;\n  parentElement(node: any): any;\n}\n\n/**\n * @deprecated Use the `Renderer2` instead.\n * @publicApi\n */\nexport abstract class Renderer {\n  abstract selectRootElement(selectorOrNode: string|any, debugInfo?: RenderDebugInfo): any;\n\n  abstract createElement(parentElement: any, name: string, debugInfo?: RenderDebugInfo): any;\n\n  abstract createViewRoot(hostElement: any): any;\n\n  abstract createTemplateAnchor(parentElement: any, debugInfo?: RenderDebugInfo): any;\n\n  abstract createText(parentElement: any, value: string, debugInfo?: RenderDebugInfo): any;\n\n  abstract projectNodes(parentElement: any, nodes: any[]): void;\n\n  abstract attachViewAfter(node: any, viewRootNodes: any[]): void;\n\n  abstract detachView(viewRootNodes: any[]): void;\n\n  abstract destroyView(hostElement: any, viewAllNodes: any[]): void;\n\n  abstract listen(renderElement: any, name: string, callback: Function): Function;\n\n  abstract listenGlobal(target: string, name: string, callback: Function): Function;\n\n  abstract setElementProperty(renderElement: any, propertyName: string, propertyValue: any): void;\n\n  abstract setElementAttribute(renderElement: any, attributeName: string, attributeValue?: string):\n      void;\n\n  /**\n   * Used only in debug mode to serialize property changes to dom nodes as attributes.\n   */\n  abstract setBindingDebugInfo(renderElement: any, propertyName: string, propertyValue: string):\n      void;\n\n  abstract setElementClass(renderElement: any, className: string, isAdd: boolean): void;\n\n  abstract setElementStyle(renderElement: any, styleName: string, styleValue?: string): void;\n\n  abstract invokeElementMethod(renderElement: any, methodName: string, args?: any[]): void;\n\n  abstract setText(renderNode: any, text: string): void;\n\n  abstract animate(\n      element: any, startingStyles: any, keyframes: any[], duration: number, delay: number,\n      easing: string, previousPlayers?: any[]): any;\n}\n\nexport const Renderer2Interceptor = new InjectionToken<Renderer2[]>('Renderer2Interceptor');\n\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n * @publicApi\n */\nexport abstract class RootRenderer {\n  abstract renderComponent(componentType: RenderComponentType): Renderer;\n}\n\n/**\n * Used by `RendererFactory2` to associate custom rendering data and styles\n * with a rendering implementation.\n *  @publicApi\n */\nexport interface RendererType2 {\n  /**\n   * A unique identifying string for the new renderer, used when creating\n   * unique styles for encapsulation.\n   */\n  id: string;\n  /**\n   * The view encapsulation type, which determines how styles are applied to\n   * DOM elements. One of\n   * - `Emulated` (default): Emulate native scoping of styles.\n   * - `Native`: Use the native encapsulation mechanism of the renderer.\n   * - `ShadowDom`: Use modern [Shadow\n   * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n   * create a ShadowRoot for component's host element.\n   * - `None`: Do not provide any template or style encapsulation.\n   */\n  encapsulation: ViewEncapsulation;\n  /**\n   * Defines CSS styles to be stored on a renderer instance.\n   */\n  styles: (string|any[])[];\n  /**\n   * Defines arbitrary developer-defined data to be stored on a renderer instance.\n   * This is useful for renderers that delegate to other renderers.\n   */\n  data: {[kind: string]: any};\n}\n\n/**\n * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n *\n * @publicApi\n */\nexport abstract class RendererFactory2 {\n  /**\n   * Creates and initializes a custom renderer for a host DOM element.\n   * @param hostElement The element to render.\n   * @param type The base class to implement.\n   * @returns The new custom renderer instance.\n   */\n  abstract createRenderer(hostElement: any, type: RendererType2|null): Renderer2;\n  /**\n   * A callback invoked when rendering has begun.\n   */\n  abstract begin?(): void;\n  /**\n   * A callback invoked when rendering has completed.\n   */\n  abstract end?(): void;\n  /**\n   * Use with animations test-only mode. Notifies the test when rendering has completed.\n   * @returns The asynchronous result of the developer-defined function.\n   */\n  abstract whenRenderingDone?(): Promise<any>;\n}\n\n/**\n * Flags for renderer-specific style modifiers.\n * @publicApi\n */\nexport enum RendererStyleFlags2 {\n  /**\n   * Marks a style as important.\n   */\n  Important = 1 << 0,\n  /**\n   * Marks a style as using dash case naming (this-is-dash-case).\n   */\n  DashCase = 1 << 1\n}\n\n/**\n * Extend this base class to implement custom rendering. By default, Angular\n * renders a template into DOM. You can use custom rendering to intercept\n * rendering calls, or to render to something other than DOM.\n *\n * Create your custom renderer using `RendererFactory2`.\n *\n * Use a custom renderer to bypass Angular's templating and\n * make custom UI changes that can't be expressed declaratively.\n * For example if you need to set a property or an attribute whose name is\n * not statically known, use the `setProperty()` or\n * `setAttribute()` method.\n *\n * @publicApi\n */\nexport abstract class Renderer2 {\n  /**\n   * Use to store arbitrary developer-defined data on a renderer instance,\n   * as an object containing key-value pairs.\n   * This is useful for renderers that delegate to other renderers.\n   */\n  abstract get data(): {[key: string]: any};\n\n  /**\n   * Implement this callback to destroy the renderer or the host element.\n   */\n  abstract destroy(): void;\n  /**\n   * Implement this callback to create an instance of the host element.\n   * @param name An identifying name for the new element, unique within the namespace.\n   * @param namespace The namespace for the new element.\n   * @returns The new element.\n   */\n  abstract createElement(name: string, namespace?: string|null): any;\n  /**\n   * Implement this callback to add a comment to the DOM of the host element.\n   * @param value The comment text.\n   * @returns The modified element.\n   */\n  abstract createComment(value: string): any;\n\n  /**\n   * Implement this callback to add text to the DOM of the host element.\n   * @param value The text string.\n   * @returns The modified element.\n   */\n  abstract createText(value: string): any;\n  /**\n   * If null or undefined, the view engine won't call it.\n   * This is used as a performance optimization for production mode.\n   */\n  // TODO(issue/24571): remove '!'.\n  destroyNode !: ((node: any) => void) | null;\n  /**\n   * Appends a child to a given parent node in the host element DOM.\n   * @param parent The parent node.\n   * @param newChild The new child node.\n   */\n  abstract appendChild(parent: any, newChild: any): void;\n  /**\n   * Implement this callback to insert a child node at a given position in a parent node\n   * in the host element DOM.\n   * @param parent The parent node.\n   * @param newChild The new child nodes.\n   * @param refChild The existing child node that should precede the new node.\n   */\n  abstract insertBefore(parent: any, newChild: any, refChild: any): void;\n  /**\n   * Implement this callback to remove a child node from the host element's DOM.\n   * @param parent The parent node.\n   * @param oldChild The child node to remove.\n   */\n  abstract removeChild(parent: any, oldChild: any): void;\n  /**\n   * Implement this callback to prepare an element to be bootstrapped\n   * as a root element, and return the element instance.\n   * @param selectorOrNode The DOM element.\n   * @param preserveContent Whether the contents of the root element\n   * should be preserved, or cleared upon bootstrap (default behavior).\n   * Use with `ViewEncapsulation.ShadowDom` to allow simple native\n   * content projection via `<slot>` elements.\n   * @returns The root element.\n   */\n  abstract selectRootElement(selectorOrNode: string|any, preserveContent?: boolean): any;\n  /**\n   * Implement this callback to get the parent of a given node\n   * in the host element's DOM.\n   * @param node The child node to query.\n   * @returns The parent node, or null if there is no parent.\n   * For WebWorkers, always returns true.\n   * This is because the check is synchronous,\n   * and the caller can't rely on checking for null.\n   */\n  abstract parentNode(node: any): any;\n  /**\n   * Implement this callback to get the next sibling node of a given node\n   * in the host element's DOM.\n   * @returns The sibling node, or null if there is no sibling.\n   * For WebWorkers, always returns a value.\n   * This is because the check is synchronous,\n   * and the caller can't rely on checking for null.\n   */\n  abstract nextSibling(node: any): any;\n  /**\n   * Implement this callback to set an attribute value for an element in the DOM.\n   * @param el The element.\n   * @param name The attribute name.\n   * @param value The new value.\n   * @param namespace The namespace.\n   */\n  abstract setAttribute(el: any, name: string, value: string, namespace?: string|null): void;\n\n  /**\n   * Implement this callback to remove an attribute from an element in the DOM.\n   * @param el The element.\n   * @param name The attribute name.\n   * @param namespace The namespace.\n   */\n  abstract removeAttribute(el: any, name: string, namespace?: string|null): void;\n  /**\n   * Implement this callback to add a class to an element in the DOM.\n   * @param el The element.\n   * @param name The class name.\n   */\n  abstract addClass(el: any, name: string): void;\n\n  /**\n   * Implement this callback to remove a class from an element in the DOM.\n   * @param el The element.\n   * @param name The class name.\n   */\n  abstract removeClass(el: any, name: string): void;\n\n  /**\n   * Implement this callback to set a CSS style for an element in the DOM.\n   * @param el The element.\n   * @param style The name of the style.\n   * @param value The new value.\n   * @param flags Flags for style variations. No flags are set by default.\n   */\n  abstract setStyle(el: any, style: string, value: any, flags?: RendererStyleFlags2): void;\n\n  /**\n   * Implement this callback to remove the value from a CSS style for an element in the DOM.\n   * @param el The element.\n   * @param style The name of the style.\n   * @param flags Flags for style variations to remove, if set. ???\n   */\n  abstract removeStyle(el: any, style: string, flags?: RendererStyleFlags2): void;\n\n  /**\n   * Implement this callback to set the value of a property of an element in the DOM.\n   * @param el The element.\n   * @param name The property name.\n   * @param value The new value.\n   */\n  abstract setProperty(el: any, name: string, value: any): void;\n\n  /**\n   * Implement this callback to set the value of a node in the host element.\n   * @param node The node.\n   * @param value The new value.\n   */\n  abstract setValue(node: any, value: string): void;\n\n  /**\n   * Implement this callback to start an event listener.\n   * @param target The context in which to listen for events. Can be\n   * the entire window or document, the body of the document, or a specific\n   * DOM element.\n   * @param eventName The event to listen for.\n   * @param callback A handler function to invoke when the event occurs.\n   * @returns An \"unlisten\" function for disposing of this handler.\n   */\n  abstract listen(\n      target: 'window'|'document'|'body'|any, eventName: string,\n      callback: (event: any) => boolean | void): () => void;\n\n  /** @internal */\n  static __NG_ELEMENT_ID__: () => Renderer2 = () => SWITCH_RENDERER2_FACTORY();\n}\n\n\nexport const SWITCH_RENDERER2_FACTORY__POST_R3__ = render3InjectRenderer2;\nconst SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\nconst SWITCH_RENDERER2_FACTORY: typeof render3InjectRenderer2 = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * A SecurityContext marks a location that has dangerous security implications, e.g. a DOM property\n * like `innerHTML` that could cause Cross Site Scripting (XSS) security bugs when improperly\n * handled.\n *\n * See DomSanitizer for more details on security in Angular applications.\n *\n * @publicApi\n */\nexport enum SecurityContext {\n  NONE = 0,\n  HTML = 1,\n  STYLE = 2,\n  SCRIPT = 3,\n  URL = 4,\n  RESOURCE_URL = 5,\n}\n\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n * @publicApi\n */\nexport abstract class Sanitizer {\n  abstract sanitize(context: SecurityContext, value: {}|string|null): string|null;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @description Represents the version of Angular\n *\n * @publicApi\n */\nexport class Version {\n  public readonly major: string;\n  public readonly minor: string;\n  public readonly patch: string;\n\n  constructor(public full: string) {\n    this.major = full.split('.')[0];\n    this.minor = full.split('.')[1];\n    this.patch = full.split('.').slice(2).join('.');\n  }\n}\n\n/**\n * @publicApi\n */\nexport const VERSION = new Version('7.2.16');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef as ViewEngine_ChangeDetectorRef} from '../change_detection/change_detector_ref';\nimport {InjectionToken} from '../di/injection_token';\nimport {Injector} from '../di/injector';\nimport {inject} from '../di/injector_compatibility';\nimport {ComponentFactory as viewEngine_ComponentFactory, ComponentRef as viewEngine_ComponentRef} from '../linker/component_factory';\nimport {ComponentFactoryResolver as viewEngine_ComponentFactoryResolver} from '../linker/component_factory_resolver';\nimport {ElementRef as viewEngine_ElementRef} from '../linker/element_ref';\nimport {NgModuleRef as viewEngine_NgModuleRef} from '../linker/ng_module_factory';\nimport {RendererFactory2} from '../render/api';\nimport {Sanitizer} from '../sanitization/security';\nimport {Type} from '../type';\nimport {VERSION} from '../version';\nimport {assertComponentType, assertDefined} from './assert';\nimport {LifecycleHooksFeature, createRootComponent, createRootComponentView, createRootContext} from './component';\nimport {getComponentDef} from './definition';\nimport {NodeInjector} from './di';\nimport {addToViewTree, createLView, createNodeAtIndex, createTView, createViewNode, elementCreate, locateHostElement, refreshDescendantViews} from './instructions';\nimport {ComponentDef, RenderFlags} from './interfaces/definition';\nimport {TContainerNode, TElementContainerNode, TElementNode, TNode, TNodeType} from './interfaces/node';\nimport {RElement, RendererFactory3, domRendererFactory3, isProceduralRenderer} from './interfaces/renderer';\nimport {HEADER_OFFSET, LView, LViewFlags, RootContext, TVIEW} from './interfaces/view';\nimport {enterView, leaveView} from './state';\nimport {defaultScheduler, getTNode} from './util';\nimport {createElementRef} from './view_engine_compatibility';\nimport {RootViewRef, ViewRef} from './view_ref';\n\nexport class ComponentFactoryResolver extends viewEngine_ComponentFactoryResolver {\n  /**\n   * @param ngModule The NgModuleRef to which all resolved factories are bound.\n   */\n  constructor(private ngModule?: viewEngine_NgModuleRef<any>) { super(); }\n\n  resolveComponentFactory<T>(component: Type<T>): viewEngine_ComponentFactory<T> {\n    ngDevMode && assertComponentType(component);\n    const componentDef = getComponentDef(component) !;\n    return new ComponentFactory(componentDef, this.ngModule);\n  }\n}\n\nfunction toRefArray(map: {[key: string]: string}): {propName: string; templateName: string;}[] {\n  const array: {propName: string; templateName: string;}[] = [];\n  for (let nonMinified in map) {\n    if (map.hasOwnProperty(nonMinified)) {\n      const minified = map[nonMinified];\n      array.push({propName: minified, templateName: nonMinified});\n    }\n  }\n  return array;\n}\n\n/**\n * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n */\nexport const ROOT_CONTEXT = new InjectionToken<RootContext>(\n    'ROOT_CONTEXT_TOKEN',\n    {providedIn: 'root', factory: () => createRootContext(inject(SCHEDULER))});\n\n/**\n * A change detection scheduler token for {@link RootContext}. This token is the default value used\n * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n */\nexport const SCHEDULER = new InjectionToken<((fn: () => void) => void)>('SCHEDULER_TOKEN', {\n  providedIn: 'root',\n  factory: () => defaultScheduler,\n});\n\nconst NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n\nfunction createChainedInjector(rootViewInjector: Injector, moduleInjector: Injector): Injector {\n  return {\n    get: <T>(token: Type<T>| InjectionToken<T>, notFoundValue?: T): T => {\n      const value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n\n      if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n          notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n        // Return the value from the root element injector when\n        // - it provides it\n        //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        // - the module injector should not be checked\n        //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        return value;\n      }\n\n      return moduleInjector.get(token, notFoundValue);\n    }\n  };\n}\n\n/**\n * Render3 implementation of {@link viewEngine_ComponentFactory}.\n */\nexport class ComponentFactory<T> extends viewEngine_ComponentFactory<T> {\n  selector: string;\n  componentType: Type<any>;\n  ngContentSelectors: string[];\n\n  get inputs(): {propName: string; templateName: string;}[] {\n    return toRefArray(this.componentDef.inputs);\n  }\n\n  get outputs(): {propName: string; templateName: string;}[] {\n    return toRefArray(this.componentDef.outputs);\n  }\n\n  /**\n   * @param componentDef The component definition.\n   * @param ngModule The NgModuleRef to which the factory is bound.\n   */\n  constructor(\n      private componentDef: ComponentDef<any>, private ngModule?: viewEngine_NgModuleRef<any>) {\n    super();\n    this.componentType = componentDef.type;\n    this.selector = componentDef.selectors[0][0] as string;\n    this.ngContentSelectors = [];\n  }\n\n  create(\n      injector: Injector, projectableNodes?: any[][]|undefined, rootSelectorOrNode?: any,\n      ngModule?: viewEngine_NgModuleRef<any>|undefined): viewEngine_ComponentRef<T> {\n    const isInternalRootView = rootSelectorOrNode === undefined;\n    ngModule = ngModule || this.ngModule;\n\n    const rootViewInjector =\n        ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n\n    const rendererFactory =\n        rootViewInjector.get(RendererFactory2, domRendererFactory3) as RendererFactory3;\n    const sanitizer = rootViewInjector.get(Sanitizer, null);\n\n    const hostRNode = isInternalRootView ?\n        elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n        locateHostElement(rendererFactory, rootSelectorOrNode);\n\n    const rootFlags = this.componentDef.onPush ? LViewFlags.Dirty | LViewFlags.IsRoot :\n                                                 LViewFlags.CheckAlways | LViewFlags.IsRoot;\n    const rootContext: RootContext =\n        !isInternalRootView ? rootViewInjector.get(ROOT_CONTEXT) : createRootContext();\n\n    const renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n\n    if (rootSelectorOrNode && hostRNode) {\n      ngDevMode && ngDevMode.rendererSetAttribute++;\n      isProceduralRenderer(renderer) ?\n          renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n          hostRNode.setAttribute('ng-version', VERSION.full);\n    }\n\n    // Create the root view. Uses empty TView and ContentTemplate.\n    const rootLView = createLView(\n        null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags,\n        rendererFactory, renderer, sanitizer, rootViewInjector);\n\n    // rootView is the parent when bootstrapping\n    const oldLView = enterView(rootLView, null);\n\n    let component: T;\n    let tElementNode: TElementNode;\n    try {\n      if (rendererFactory.begin) rendererFactory.begin();\n\n      const componentView = createRootComponentView(\n          hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n\n      tElementNode = getTNode(0, rootLView) as TElementNode;\n\n      // Transform the arrays of native nodes into a structure that can be consumed by the\n      // projection instruction. This is needed to support the reprojection of these nodes.\n      if (projectableNodes) {\n        let index = 0;\n        const tView = rootLView[TVIEW];\n        const projection: TNode[] = tElementNode.projection = [];\n        for (let i = 0; i < projectableNodes.length; i++) {\n          const nodeList = projectableNodes[i];\n          let firstTNode: TNode|null = null;\n          let previousTNode: TNode|null = null;\n          for (let j = 0; j < nodeList.length; j++) {\n            if (tView.firstTemplatePass) {\n              // For dynamically created components such as ComponentRef, we create a new TView for\n              // each insert. This is not ideal since we should be sharing the TViews.\n              // Also the logic here should be shared with `component.ts`'s `renderComponent`\n              // method.\n              tView.expandoStartIndex++;\n              tView.blueprint.splice(++index + HEADER_OFFSET, 0, null);\n              tView.data.splice(index + HEADER_OFFSET, 0, null);\n              rootLView.splice(index + HEADER_OFFSET, 0, null);\n            }\n            const tNode =\n                createNodeAtIndex(index, TNodeType.Element, nodeList[j] as RElement, null, null);\n            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n            previousTNode = tNode;\n          }\n          projection.push(firstTNode !);\n        }\n      }\n\n      // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n      // executed here?\n      // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n      component = createRootComponent(\n          componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n\n      addToViewTree(rootLView, HEADER_OFFSET, componentView);\n      refreshDescendantViews(rootLView);\n    } finally {\n      leaveView(oldLView);\n      if (rendererFactory.end) rendererFactory.end();\n    }\n\n    const componentRef = new ComponentRef(\n        this.componentType, component,\n        createElementRef(viewEngine_ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n\n    if (isInternalRootView) {\n      // The host element of the internal root view is attached to the component's host view node\n      componentRef.hostView._tViewNode !.child = tElementNode;\n    }\n    return componentRef;\n  }\n}\n\nconst componentFactoryResolver: ComponentFactoryResolver = new ComponentFactoryResolver();\n\n/**\n * Creates a ComponentFactoryResolver and stores it on the injector. Or, if the\n * ComponentFactoryResolver\n * already exists, retrieves the existing ComponentFactoryResolver.\n *\n * @returns The ComponentFactoryResolver instance to use\n */\nexport function injectComponentFactoryResolver(): viewEngine_ComponentFactoryResolver {\n  return componentFactoryResolver;\n}\n\n/**\n * Represents an instance of a Component created via a {@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n * method.\n *\n */\nexport class ComponentRef<T> extends viewEngine_ComponentRef<T> {\n  destroyCbs: (() => void)[]|null = [];\n  instance: T;\n  hostView: ViewRef<T>;\n  changeDetectorRef: ViewEngine_ChangeDetectorRef;\n  componentType: Type<T>;\n\n  constructor(\n      componentType: Type<T>, instance: T, public location: viewEngine_ElementRef,\n      private _rootLView: LView,\n      private _tNode: TElementNode|TContainerNode|TElementContainerNode) {\n    super();\n    this.instance = instance;\n    this.hostView = this.changeDetectorRef = new RootViewRef<T>(_rootLView);\n    this.hostView._tViewNode = createViewNode(-1, _rootLView);\n    this.componentType = componentType;\n  }\n\n  get injector(): Injector { return new NodeInjector(this._tNode, this._rootLView); }\n\n  destroy(): void {\n    ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n    this.destroyCbs !.forEach(fn => fn());\n    this.destroyCbs = null;\n    this.hostView.destroy();\n  }\n  onDestroy(callback: () => void): void {\n    ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n    this.destroyCbs !.push(callback);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n *\n * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n * please see [BAZEL.md](./docs/BAZEL.md).\n */\n\nlet _devMode: boolean = true;\nlet _runModeLocked: boolean = false;\n\n\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * @publicApi\n */\nexport function isDevMode(): boolean {\n  _runModeLocked = true;\n  return _devMode;\n}\n\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n *\n * @publicApi\n */\nexport function enableProdMode(): void {\n  if (_runModeLocked) {\n    throw new Error('Cannot enable prod mode after platform setup.');\n  }\n  _devMode = false;\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n * that needs sanitizing.\n * Depending upon browser support we must use one of three strategies for doing this.\n * Support: Safari 10.x -> XHR strategy\n * Support: Firefox -> DomParser strategy\n * Default: InertDocument strategy\n */\nexport class InertBodyHelper {\n  private inertBodyElement: HTMLElement;\n  private inertDocument: Document;\n\n  constructor(private defaultDoc: Document) {\n    this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n    this.inertBodyElement = this.inertDocument.body;\n\n    if (this.inertBodyElement == null) {\n      // usually there should be only one body element in the document, but IE doesn't have any, so\n      // we need to create one.\n      const inertHtml = this.inertDocument.createElement('html');\n      this.inertDocument.appendChild(inertHtml);\n      this.inertBodyElement = this.inertDocument.createElement('body');\n      inertHtml.appendChild(this.inertBodyElement);\n    }\n\n    this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n    if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n      // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n      // so use the XHR strategy.\n      this.getInertBodyElement = this.getInertBodyElement_XHR;\n      return;\n    }\n\n    this.inertBodyElement.innerHTML =\n        '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n    if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n      // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n      // so use the DOMParser strategy, if it is available.\n      // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n      // fall through to the default strategy below.\n      if (isDOMParserAvailable()) {\n        this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n        return;\n      }\n    }\n\n    // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n    this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n  }\n\n  /**\n   * Get an inert DOM element containing DOM created from the dirty HTML string provided.\n   * The implementation of this is determined in the constructor, when the class is instantiated.\n   */\n  getInertBodyElement: (html: string) => HTMLElement | null;\n\n  /**\n   * Use XHR to create and fill an inert body element (on Safari 10.1)\n   * See\n   * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n   */\n  private getInertBodyElement_XHR(html: string) {\n    // We add these extra elements to ensure that the rest of the content is parsed as expected\n    // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n    // `<head>` tag.\n    html = '<body><remove></remove>' + html + '</body>';\n    try {\n      html = encodeURI(html);\n    } catch {\n      return null;\n    }\n    const xhr = new XMLHttpRequest();\n    xhr.responseType = 'document';\n    xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n    xhr.send(undefined);\n    const body: HTMLBodyElement = xhr.response.body;\n    body.removeChild(body.firstChild !);\n    return body;\n  }\n\n  /**\n   * Use DOMParser to create and fill an inert body element (on Firefox)\n   * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n   *\n   */\n  private getInertBodyElement_DOMParser(html: string) {\n    // We add these extra elements to ensure that the rest of the content is parsed as expected\n    // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n    // `<head>` tag.\n    html = '<body><remove></remove>' + html + '</body>';\n    try {\n      const body = new (window as any)\n                       .DOMParser()\n                       .parseFromString(html, 'text/html')\n                       .body as HTMLBodyElement;\n      body.removeChild(body.firstChild !);\n      return body;\n    } catch {\n      return null;\n    }\n  }\n\n  /**\n   * Use an HTML5 `template` element, if supported, or an inert body element created via\n   * `createHtmlDocument` to create and fill an inert DOM element.\n   * This is the default sane strategy to use if the browser does not require one of the specialised\n   * strategies above.\n   */\n  private getInertBodyElement_InertDocument(html: string) {\n    // Prefer using <template> element if supported.\n    const templateEl = this.inertDocument.createElement('template');\n    if ('content' in templateEl) {\n      templateEl.innerHTML = html;\n      return templateEl;\n    }\n\n    this.inertBodyElement.innerHTML = html;\n\n    // Support: IE 9-11 only\n    // strip custom-namespaced attributes on IE<=11\n    if ((this.defaultDoc as any).documentMode) {\n      this.stripCustomNsAttrs(this.inertBodyElement);\n    }\n\n    return this.inertBodyElement;\n  }\n\n  /**\n   * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n   * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n   * 'ns1:xlink:foo').\n   *\n   * This is undesirable since we don't want to allow any of these custom attributes. This method\n   * strips them all.\n   */\n  private stripCustomNsAttrs(el: Element) {\n    const elAttrs = el.attributes;\n    // loop backwards so that we can support removals.\n    for (let i = elAttrs.length - 1; 0 < i; i--) {\n      const attrib = elAttrs.item(i);\n      const attrName = attrib !.name;\n      if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n        el.removeAttribute(attrName);\n      }\n    }\n    let childNode = el.firstChild as Node | null;\n    while (childNode) {\n      if (childNode.nodeType === Node.ELEMENT_NODE) this.stripCustomNsAttrs(childNode as Element);\n      childNode = childNode.nextSibling;\n    }\n  }\n}\n\n/**\n * We need to determine whether the DOMParser exists in the global context.\n * The try-catch is because, on some browsers, trying to access this property\n * on window can actually throw an error.\n *\n * @suppress {uselessCode}\n */\nfunction isDOMParserAvailable() {\n  try {\n    return !!(window as any).DOMParser;\n  } catch {\n    return false;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isDevMode} from '../is_dev_mode';\n\n/**\n * A pattern that recognizes a commonly useful subset of URLs that are safe.\n *\n * This regular expression matches a subset of URLs that will not cause script\n * execution if used in URL context within a HTML document. Specifically, this\n * regular expression matches if (comment from here on and regex copied from\n * Soy's EscapingConventions):\n * (1) Either an allowed protocol (http, https, mailto or ftp).\n * (2) or no protocol.  A protocol must be followed by a colon. The below\n *     allows that by allowing colons only after one of the characters [/?#].\n *     A colon after a hash (#) must be in the fragment.\n *     Otherwise, a colon after a (?) must be in a query.\n *     Otherwise, a colon after a single solidus (/) must be in a path.\n *     Otherwise, a colon after a double solidus (//) must be in the authority\n *     (before port).\n *\n * The pattern disallows &, used in HTML entity declarations before\n * one of the characters in [/?#]. This disallows HTML entities used in the\n * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n * It also disallows HTML entities in the first path part of a relative path,\n * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n * that. More importantly, it disallows masking of a colon,\n * e.g. \"javascript&#58;...\".\n *\n * This regular expression was taken from the Closure sanitization library.\n */\nconst SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n\n/* A pattern that matches safe srcset values */\nconst SAFE_SRCSET_PATTERN = /^(?:(?:https?|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n\n/** A pattern that matches safe data URLs. Only matches image, video and audio types. */\nconst DATA_URL_PATTERN =\n    /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n\nexport function _sanitizeUrl(url: string): string {\n  url = String(url);\n  if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN)) return url;\n\n  if (isDevMode()) {\n    console.warn(`WARNING: sanitizing unsafe URL value ${url} (see http://g.co/ng/security#xss)`);\n  }\n\n  return 'unsafe:' + url;\n}\n\nexport function sanitizeSrcset(srcset: string): string {\n  srcset = String(srcset);\n  return srcset.split(',').map((srcset) => _sanitizeUrl(srcset.trim())).join(', ');\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isDevMode} from '../is_dev_mode';\nimport {InertBodyHelper} from './inert_body';\nimport {_sanitizeUrl, sanitizeSrcset} from './url_sanitizer';\n\nfunction tagSet(tags: string): {[k: string]: boolean} {\n  const res: {[k: string]: boolean} = {};\n  for (const t of tags.split(',')) res[t] = true;\n  return res;\n}\n\nfunction merge(...sets: {[k: string]: boolean}[]): {[k: string]: boolean} {\n  const res: {[k: string]: boolean} = {};\n  for (const s of sets) {\n    for (const v in s) {\n      if (s.hasOwnProperty(v)) res[v] = true;\n    }\n  }\n  return res;\n}\n\n// Good source of info about elements and attributes\n// http://dev.w3.org/html5/spec/Overview.html#semantics\n// http://simon.html5.org/html-elements\n\n// Safe Void Elements - HTML5\n// http://dev.w3.org/html5/spec/Overview.html#void-elements\nconst VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n\n// Elements that you can, intentionally, leave open (and which close themselves)\n// http://dev.w3.org/html5/spec/Overview.html#optional-tags\nconst OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\nconst OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\nconst OPTIONAL_END_TAG_ELEMENTS =\n    merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n\n// Safe Block Elements - HTML5\nconst BLOCK_ELEMENTS = merge(\n    OPTIONAL_END_TAG_BLOCK_ELEMENTS,\n    tagSet(\n        'address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n\n// Inline Elements - HTML5\nconst INLINE_ELEMENTS = merge(\n    OPTIONAL_END_TAG_INLINE_ELEMENTS,\n    tagSet(\n        'a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n\nexport const VALID_ELEMENTS =\n    merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n\n// Attributes that have href and hence need to be sanitized\nexport const URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n\n// Attributes that have special href set hence need to be sanitized\nexport const SRCSET_ATTRS = tagSet('srcset');\n\nconst HTML_ATTRS = tagSet(\n    'abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n    'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n    'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n    'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n    'valign,value,vspace,width');\n\n// NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n// issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n// innerHTML is required, SVG attributes should be added here.\n\n// NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n// can be sanitized, but they increase security surface area without a legitimate use case, so they\n// are left out here.\n\nexport const VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n\n// Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n//\n// Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n// `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n// don't want to preserve the content, if the elements themselves are going to be removed.\nconst SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n\n/**\n * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n * attributes.\n */\nclass SanitizingHtmlSerializer {\n  // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n  // because characters were re-encoded.\n  public sanitizedSomething = false;\n  private buf: string[] = [];\n\n  sanitizeChildren(el: Element): string {\n    // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n    // However this code never accesses properties off of `document` before deleting its contents\n    // again, so it shouldn't be vulnerable to DOM clobbering.\n    let current: Node = el.firstChild !;\n    let traverseContent = true;\n    while (current) {\n      if (current.nodeType === Node.ELEMENT_NODE) {\n        traverseContent = this.startElement(current as Element);\n      } else if (current.nodeType === Node.TEXT_NODE) {\n        this.chars(current.nodeValue !);\n      } else {\n        // Strip non-element, non-text nodes.\n        this.sanitizedSomething = true;\n      }\n      if (traverseContent && current.firstChild) {\n        current = current.firstChild !;\n        continue;\n      }\n      while (current) {\n        // Leaving the element. Walk up and to the right, closing tags as we go.\n        if (current.nodeType === Node.ELEMENT_NODE) {\n          this.endElement(current as Element);\n        }\n\n        let next = this.checkClobberedElement(current, current.nextSibling !);\n\n        if (next) {\n          current = next;\n          break;\n        }\n\n        current = this.checkClobberedElement(current, current.parentNode !);\n      }\n    }\n    return this.buf.join('');\n  }\n\n  /**\n   * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n   * be traversed. Element content must always be traversed (even if the element itself is not\n   * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n   *\n   * @param element The element to sanitize.\n   * @return True if the element's contents should be traversed.\n   */\n  private startElement(element: Element): boolean {\n    const tagName = element.nodeName.toLowerCase();\n    if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n      this.sanitizedSomething = true;\n      return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n    }\n    this.buf.push('<');\n    this.buf.push(tagName);\n    const elAttrs = element.attributes;\n    for (let i = 0; i < elAttrs.length; i++) {\n      const elAttr = elAttrs.item(i);\n      const attrName = elAttr !.name;\n      const lower = attrName.toLowerCase();\n      if (!VALID_ATTRS.hasOwnProperty(lower)) {\n        this.sanitizedSomething = true;\n        continue;\n      }\n      let value = elAttr !.value;\n      // TODO(martinprobst): Special case image URIs for data:image/...\n      if (URI_ATTRS[lower]) value = _sanitizeUrl(value);\n      if (SRCSET_ATTRS[lower]) value = sanitizeSrcset(value);\n      this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n    }\n    this.buf.push('>');\n    return true;\n  }\n\n  private endElement(current: Element) {\n    const tagName = current.nodeName.toLowerCase();\n    if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n      this.buf.push('</');\n      this.buf.push(tagName);\n      this.buf.push('>');\n    }\n  }\n\n  private chars(chars: string) { this.buf.push(encodeEntities(chars)); }\n\n  checkClobberedElement(node: Node, nextNode: Node): Node {\n    if (nextNode &&\n        (node.compareDocumentPosition(nextNode) &\n         Node.DOCUMENT_POSITION_CONTAINED_BY) ===Â Node.DOCUMENT_POSITION_CONTAINED_BY) {\n      throw new Error(\n          `Failed to sanitize html because the element is clobbered: ${(node as Element).outerHTML}`);\n    }\n    return nextNode;\n  }\n}\n\n// Regular Expressions for parsing tags and attributes\nconst SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n// ! to ~ is the ASCII range.\nconst NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n\n/**\n * Escapes all potentially dangerous characters, so that the\n * resulting string can be safely inserted into attribute or\n * element text.\n * @param value\n */\nfunction encodeEntities(value: string) {\n  return value.replace(/&/g, '&amp;')\n      .replace(\n          SURROGATE_PAIR_REGEXP,\n          function(match: string) {\n            const hi = match.charCodeAt(0);\n            const low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n          })\n      .replace(\n          NON_ALPHANUMERIC_REGEXP,\n          function(match: string) { return '&#' + match.charCodeAt(0) + ';'; })\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;');\n}\n\nlet inertBodyHelper: InertBodyHelper;\n\n/**\n * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n * the DOM in a browser environment.\n */\nexport function _sanitizeHtml(defaultDoc: any, unsafeHtmlInput: string): string {\n  let inertBodyElement: HTMLElement|null = null;\n  try {\n    inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n    // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n    let unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n    inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n\n    // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n    // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n    let mXSSAttempts = 5;\n    let parsedHtml = unsafeHtml;\n\n    do {\n      if (mXSSAttempts === 0) {\n        throw new Error('Failed to sanitize html because the input is unstable');\n      }\n      mXSSAttempts--;\n\n      unsafeHtml = parsedHtml;\n      parsedHtml = inertBodyElement !.innerHTML;\n      inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n    } while (unsafeHtml !== parsedHtml);\n\n    const sanitizer = new SanitizingHtmlSerializer();\n    const safeHtml = sanitizer.sanitizeChildren(\n        getTemplateContent(inertBodyElement !) as Element || inertBodyElement);\n    if (isDevMode() && sanitizer.sanitizedSomething) {\n      console.warn(\n          'WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n    }\n\n    return safeHtml;\n  } finally {\n    // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n    if (inertBodyElement) {\n      const parent = getTemplateContent(inertBodyElement) || inertBodyElement;\n      while (parent.firstChild) {\n        parent.removeChild(parent.firstChild);\n      }\n    }\n  }\n}\n\nexport function getTemplateContent(el: Node): Node|null {\n  return 'content' in (el as any /** Microsoft/TypeScript#21517 */) && isTemplateElement(el) ?\n      el.content :\n      null;\n}\nfunction isTemplateElement(el: Node): el is HTMLTemplateElement {\n  return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * `I18nMutateOpCode` defines OpCodes for `I18nMutateOpCodes` array.\n *\n * OpCodes contain three parts:\n *  1) Parent node index offset.\n *  2) Reference node index offset.\n *  3) The OpCode to execute.\n *\n * See: `I18nCreateOpCodes` for example of usage.\n */\nimport {SanitizerFn} from './sanitization';\n\nexport const enum I18nMutateOpCode {\n  /// Stores shift amount for bits 17-3 that contain reference index.\n  SHIFT_REF = 3,\n  /// Stores shift amount for bits 31-17 that contain parent index.\n  SHIFT_PARENT = 17,\n  /// Mask for OpCode\n  MASK_OPCODE = 0b111,\n  /// Mask for reference index.\n  MASK_REF = ((2 ^ 16) - 1) << SHIFT_REF,\n\n  /// OpCode to select a node. (next OpCode will contain the operation.)\n  Select = 0b000,\n  /// OpCode to append the current node to `PARENT`.\n  AppendChild = 0b001,\n  /// OpCode to insert the current node to `PARENT` before `REF`.\n  InsertBefore = 0b010,\n  /// OpCode to remove the `REF` node from `PARENT`.\n  Remove = 0b011,\n  /// OpCode to set the attribute of a node.\n  Attr = 0b100,\n  /// OpCode to simulate elementEnd()\n  ElementEnd = 0b101,\n  /// OpCode to read the remove OpCodes for the nested ICU\n  RemoveNestedIcu = 0b110,\n}\n\n/**\n * Marks that the next string is for element.\n *\n * See `I18nMutateOpCodes` documentation.\n */\nexport const ELEMENT_MARKER: ELEMENT_MARKER = {\n  marker: 'element'\n};\nexport interface ELEMENT_MARKER { marker: 'element'; }\n\n/**\n * Marks that the next string is for comment.\n *\n * See `I18nMutateOpCodes` documentation.\n */\nexport const COMMENT_MARKER: COMMENT_MARKER = {\n  marker: 'comment'\n};\n\nexport interface COMMENT_MARKER { marker: 'comment'; }\n\n/**\n * Array storing OpCode for dynamically creating `i18n` blocks.\n *\n * Example:\n * ```\n * <I18nCreateOpCode>[\n *   // For adding text nodes\n *   // ---------------------\n *   // Equivalent to:\n *   //   const node = lView[index++] = document.createTextNode('abc');\n *   //   lView[1].insertBefore(node, lView[2]);\n *   'abc', 1 << SHIFT_PARENT | 2 << SHIFT_REF | InsertBefore,\n *\n *   // Equivalent to:\n *   //   const node = lView[index++] = document.createTextNode('xyz');\n *   //   lView[1].appendChild(node);\n *   'xyz', 1 << SHIFT_PARENT | AppendChild,\n *\n *   // For adding element nodes\n *   // ---------------------\n *   // Equivalent to:\n *   //   const node = lView[index++] = document.createElement('div');\n *   //   lView[1].insertBefore(node, lView[2]);\n *   ELEMENT_MARKER, 'div', 1 << SHIFT_PARENT | 2 << SHIFT_REF | InsertBefore,\n *\n *   // Equivalent to:\n *   //   const node = lView[index++] = document.createElement('div');\n *   //   lView[1].appendChild(node);\n *   ELEMENT_MARKER, 'div', 1 << SHIFT_PARENT | AppendChild,\n *\n *   // For adding comment nodes\n *   // ---------------------\n *   // Equivalent to:\n *   //   const node = lView[index++] = document.createComment('');\n *   //   lView[1].insertBefore(node, lView[2]);\n *   COMMENT_MARKER, '', 1 << SHIFT_PARENT | 2 << SHIFT_REF | InsertBefore,\n *\n *   // Equivalent to:\n *   //   const node = lView[index++] = document.createComment('');\n *   //   lView[1].appendChild(node);\n *   COMMENT_MARKER, '', 1 << SHIFT_PARENT | AppendChild,\n *\n *   // For moving existing nodes to a different location\n *   // --------------------------------------------------\n *   // Equivalent to:\n *   //   const node = lView[1];\n *   //   lView[2].insertBefore(node, lView[3]);\n *   1 << SHIFT_REF | Select, 2 << SHIFT_PARENT | 3 << SHIFT_REF | InsertBefore,\n *\n *   // Equivalent to:\n *   //   const node = lView[1];\n *   //   lView[2].appendChild(node);\n *   1 << SHIFT_REF | Select, 2 << SHIFT_PARENT | AppendChild,\n *\n *   // For removing existing nodes\n *   // --------------------------------------------------\n *   //   const node = lView[1];\n *   //   removeChild(tView.data(1), node, lView);\n *   1 << SHIFT_REF | Remove,\n *\n *   // For writing attributes\n *   // --------------------------------------------------\n *   //   const node = lView[1];\n *   //   node.setAttribute('attr', 'value');\n *   1 << SHIFT_REF | Select, 'attr', 'value'\n *            // NOTE: Select followed by two string (vs select followed by OpCode)\n * ];\n * ```\n * NOTE:\n *   - `index` is initial location where the extra nodes should be stored in the EXPANDO section of\n * `LVIewData`.\n *\n * See: `applyI18nCreateOpCodes`;\n */\nexport interface I18nMutateOpCodes extends Array<number|string|ELEMENT_MARKER|COMMENT_MARKER|null> {\n}\n\nexport const enum I18nUpdateOpCode {\n  /// Stores shift amount for bits 17-2 that contain reference index.\n  SHIFT_REF = 2,\n  /// Stores shift amount for bits 31-17 that contain which ICU in i18n block are we referring to.\n  SHIFT_ICU = 17,\n  /// Mask for OpCode\n  MASK_OPCODE = 0b11,\n  /// Mask for reference index.\n  MASK_REF = ((2 ^ 16) - 1) << SHIFT_REF,\n\n  /// OpCode to update a text node.\n  Text = 0b00,\n  /// OpCode to update a attribute of a node.\n  Attr = 0b01,\n  /// OpCode to switch the current ICU case.\n  IcuSwitch = 0b10,\n  /// OpCode to update the current ICU case.\n  IcuUpdate = 0b11,\n}\n\n/**\n * Stores DOM operations which need to be applied to update DOM render tree due to changes in\n * expressions.\n *\n * The basic idea is that `i18nExp` OpCodes capture expression changes and update a change\n * mask bit. (Bit 1 for expression 1, bit 2 for expression 2 etc..., bit 32 for expression 32 and\n * higher.) The OpCodes then compare its own change mask against the expression change mask to\n * determine if the OpCodes should execute.\n *\n * These OpCodes can be used by both the i18n block as well as ICU sub-block.\n *\n * ## Example\n *\n * Assume\n * ```\n *   if (rf & RenderFlags.Update) {\n *    i18nExp(bind(ctx.exp1)); // If changed set mask bit 1\n *    i18nExp(bind(ctx.exp2)); // If changed set mask bit 2\n *    i18nExp(bind(ctx.exp3)); // If changed set mask bit 3\n *    i18nExp(bind(ctx.exp4)); // If changed set mask bit 4\n *    i18nApply(0);            // Apply all changes by executing the OpCodes.\n *  }\n * ```\n * We can assume that each call to `i18nExp` sets an internal `changeMask` bit depending on the\n * index of `i18nExp`.\n *\n * OpCodes\n * ```\n * <I18nUpdateOpCodes>[\n *   // The following OpCodes represent: `<div i18n-title=\"pre{{exp1}}in{{exp2}}post\">`\n *   // If `changeMask & 0b11`\n *   //        has changed then execute update OpCodes.\n *   //        has NOT changed then skip `7` values and start processing next OpCodes.\n *   0b11, 7,\n *   // Concatenate `newValue = 'pre'+lView[bindIndex-4]+'in'+lView[bindIndex-3]+'post';`.\n *   'pre', -4, 'in', -3, 'post',\n *   // Update attribute: `elementAttribute(1, 'title', sanitizerFn(newValue));`\n *   1 << SHIFT_REF | Attr, 'title', sanitizerFn,\n *\n *   // The following OpCodes represent: `<div i18n>Hello {{exp3}}!\">`\n *   // If `changeMask & 0b100`\n *   //        has changed then execute update OpCodes.\n *   //        has NOT changed then skip `4` values and start processing next OpCodes.\n *   0b100, 4,\n *   // Concatenate `newValue = 'Hello ' + lView[bindIndex -2] + '!';`.\n *   'Hello ', -2, '!',\n *   // Update text: `lView[1].textContent = newValue;`\n *   1 << SHIFT_REF | Text,\n *\n *   // The following OpCodes represent: `<div i18n>{exp4, plural, ... }\">`\n *   // If `changeMask & 0b1000`\n *   //        has changed then execute update OpCodes.\n *   //        has NOT changed then skip `4` values and start processing next OpCodes.\n *   0b1000, 4,\n *   // Concatenate `newValue = lView[bindIndex -1];`.\n *   -1,\n *   // Switch ICU: `icuSwitchCase(lView[1], 0, newValue);`\n *   0 << SHIFT_ICU | 1 << SHIFT_REF | IcuSwitch,\n *\n *   // Note `changeMask & -1` is always true, so the IcuUpdate will always execute.\n *   -1, 1,\n *   // Update ICU: `icuUpdateCase(lView[1], 0);`\n *   0 << SHIFT_ICU | 1 << SHIFT_REF | IcuUpdate,\n *\n * ];\n * ```\n *\n */\nexport interface I18nUpdateOpCodes extends Array<string|number|SanitizerFn|null> {}\n\n/**\n * Store information for the i18n translation block.\n */\nexport interface TI18n {\n  /**\n   * Number of slots to allocate in expando.\n   *\n   * This is the max number of DOM elements which will be created by this i18n + ICU blocks. When\n   * the DOM elements are being created they are stored in the EXPANDO, so that update OpCodes can\n   * write into them.\n   */\n  vars: number;\n\n  /**\n   * Index in EXPANDO where the i18n stores its DOM nodes.\n   *\n   * When the bindings are processed by the `i18nEnd` instruction it is necessary to know where the\n   * newly created DOM nodes will be inserted.\n   */\n  expandoStartIndex: number;\n\n  /**\n   * A set of OpCodes which will create the Text Nodes and ICU anchors for the translation blocks.\n   *\n   * NOTE: The ICU anchors are filled in with ICU Update OpCode.\n   */\n  create: I18nMutateOpCodes;\n\n  /**\n   * A set of OpCodes which will be executed on each change detection to determine if any changes to\n   * DOM are required.\n   */\n  update: I18nUpdateOpCodes;\n\n  /**\n   * A list of ICUs in a translation block (or `null` if block has no ICUs).\n   *\n   * Example:\n   * Given: `<div i18n>You have {count, plural, ...} and {state, switch, ...}</div>`\n   * There would be 2 ICUs in this array.\n   *   1. `{count, plural, ...}`\n   *   2. `{state, switch, ...}`\n   */\n  icus: TIcu[]|null;\n}\n\n/**\n * Defines the ICU type of `select` or `plural`\n */\nexport const enum IcuType {\n  select = 0,\n  plural = 1,\n}\n\nexport interface TIcu {\n  /**\n   * Defines the ICU type of `select` or `plural`\n   */\n  type: IcuType;\n\n  /**\n   * Number of slots to allocate in expando for each case.\n   *\n   * This is the max number of DOM elements which will be created by this i18n + ICU blocks. When\n   * the DOM elements are being created they are stored in the EXPANDO, so that update OpCodes can\n   * write into them.\n   */\n  vars: number[];\n\n  /**\n   * An optional array of child/sub ICUs.\n   *\n   * In case of nested ICUs such as:\n   * ```\n   * {ï¿½0ï¿½, plural,\n   *   =0 {zero}\n   *   other {ï¿½0ï¿½ {ï¿½1ï¿½, select,\n   *                     cat {cats}\n   *                     dog {dogs}\n   *                     other {animals}\n   *                   }!\n   *   }\n   * }\n   * ```\n   * When the parent ICU is changing it must clean up child ICUs as well. For this reason it needs\n   * to know which child ICUs to run clean up for as well.\n   *\n   * In the above example this would be:\n   * ```\n   * [\n   *   [],   // `=0` has no sub ICUs\n   *   [1],  // `other` has one subICU at `1`st index.\n   * ]\n   * ```\n   *\n   * The reason why it is Array of Arrays is because first array represents the case, and second\n   * represents the child ICUs to clean up. There may be more than one child ICUs per case.\n   */\n  childIcus: number[][];\n\n  /**\n   * Index in EXPANDO where the i18n stores its DOM nodes.\n   *\n   * When the bindings are processed by the `i18nEnd` instruction it is necessary to know where the\n   * newly created DOM nodes will be inserted.\n   */\n  expandoStartIndex: number;\n\n  /**\n   * A list of case values which the current ICU will try to match.\n   *\n   * The last value is `other`\n   */\n  cases: any[];\n\n  /**\n   * A set of OpCodes to apply in order to build up the DOM render tree for the ICU\n   */\n  create: I18nMutateOpCodes[];\n\n  /**\n   * A set of OpCodes to apply in order to destroy the DOM render tree for the ICU.\n   */\n  remove: I18nMutateOpCodes[];\n\n  /**\n   * A set of OpCodes to apply in order to update the DOM render tree for the ICU bindings.\n   */\n  update: I18nUpdateOpCodes[];\n}\n\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\nexport const unusedValueExportToPlacateAjd = 1;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {SRCSET_ATTRS, URI_ATTRS, VALID_ATTRS, VALID_ELEMENTS, getTemplateContent} from '../sanitization/html_sanitizer';\nimport {InertBodyHelper} from '../sanitization/inert_body';\nimport {_sanitizeUrl, sanitizeSrcset} from '../sanitization/url_sanitizer';\nimport {assertDefined, assertEqual, assertGreaterThan} from './assert';\nimport {attachPatchData} from './context_discovery';\nimport {allocExpando, createNodeAtIndex, elementAttribute, load, textBinding} from './instructions';\nimport {LContainer, NATIVE, RENDER_PARENT} from './interfaces/container';\nimport {COMMENT_MARKER, ELEMENT_MARKER, I18nMutateOpCode, I18nMutateOpCodes, I18nUpdateOpCode, I18nUpdateOpCodes, IcuType, TI18n, TIcu} from './interfaces/i18n';\nimport {TElementNode, TIcuContainerNode, TNode, TNodeType} from './interfaces/node';\nimport {RComment, RElement} from './interfaces/renderer';\nimport {SanitizerFn} from './interfaces/sanitization';\nimport {StylingContext} from './interfaces/styling';\nimport {BINDING_INDEX, HEADER_OFFSET, HOST_NODE, LView, RENDERER, TVIEW, TView} from './interfaces/view';\nimport {appendChild, createTextNode, removeChild} from './node_manipulation';\nimport {getIsParent, getLView, getPreviousOrParentTNode, setIsParent, setPreviousOrParentTNode} from './state';\nimport {NO_CHANGE} from './tokens';\nimport {addAllToArray, getNativeByIndex, getNativeByTNode, getTNode, isLContainer, stringify} from './util';\n\nconst MARKER = `ï¿½`;\nconst ICU_BLOCK_REGEX = /^\\s*(ï¿½\\d+:?\\d*ï¿½)\\s*,\\s*(select|plural)\\s*,/;\nconst SUBTEMPLATE_REGEXP = /ï¿½\\/?\\*(\\d+:\\d+)ï¿½/gi;\nconst PH_REGEXP = /ï¿½(\\/?[#*]\\d+):?\\d*ï¿½/gi;\nconst BINDING_REGEXP = /ï¿½(\\d+):?\\d*ï¿½/gi;\nconst ICU_REGEXP = /({\\s*ï¿½\\d+:?\\d*ï¿½\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n\n// i18nPostproocess regexps\nconst PP_PLACEHOLDERS = /\\[(ï¿½.+?ï¿½?)\\]/g;\nconst PP_ICU_VARS = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\nconst PP_ICUS = /ï¿½I18N_EXP_(ICU(_\\d+)?)ï¿½/g;\n\ninterface IcuExpression {\n  type: IcuType;\n  mainBinding: number;\n  cases: string[];\n  values: (string|IcuExpression)[][];\n}\n\ninterface IcuCase {\n  /**\n   * Number of slots to allocate in expando for this case.\n   *\n   * This is the max number of DOM elements which will be created by this i18n + ICU blocks. When\n   * the DOM elements are being created they are stored in the EXPANDO, so that update OpCodes can\n   * write into them.\n   */\n  vars: number;\n\n  /**\n   * An optional array of child/sub ICUs.\n   */\n  childIcus: number[];\n\n  /**\n   * A set of OpCodes to apply in order to build up the DOM render tree for the ICU\n   */\n  create: I18nMutateOpCodes;\n\n  /**\n   * A set of OpCodes to apply in order to destroy the DOM render tree for the ICU.\n   */\n  remove: I18nMutateOpCodes;\n\n  /**\n   * A set of OpCodes to apply in order to update the DOM render tree for the ICU bindings.\n   */\n  update: I18nUpdateOpCodes;\n}\n\n/**\n * Breaks pattern into strings and top level {...} blocks.\n * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n * keys and cases.\n * Original code from closure library, modified for Angular.\n *\n * @param pattern (sub)Pattern to be broken.\n *\n */\nfunction extractParts(pattern: string): (string | IcuExpression)[] {\n  if (!pattern) {\n    return [];\n  }\n\n  let prevPos = 0;\n  const braceStack = [];\n  const results: (string | IcuExpression)[] = [];\n  const braces = /[{}]/g;\n  // lastIndex doesn't get set to 0 so we have to.\n  braces.lastIndex = 0;\n\n  let match;\n  while (match = braces.exec(pattern)) {\n    const pos = match.index;\n    if (match[0] == '}') {\n      braceStack.pop();\n\n      if (braceStack.length == 0) {\n        // End of the block.\n        const block = pattern.substring(prevPos, pos);\n        if (ICU_BLOCK_REGEX.test(block)) {\n          results.push(parseICUBlock(block));\n        } else if (block) {  // Don't push empty strings\n          results.push(block);\n        }\n\n        prevPos = pos + 1;\n      }\n    } else {\n      if (braceStack.length == 0) {\n        const substring = pattern.substring(prevPos, pos);\n        results.push(substring);\n        prevPos = pos + 1;\n      }\n      braceStack.push('{');\n    }\n  }\n\n  const substring = pattern.substring(prevPos);\n  if (substring != '') {\n    results.push(substring);\n  }\n\n  return results;\n}\n\n/**\n * Parses text containing an ICU expression and produces a JSON object for it.\n * Original code from closure library, modified for Angular.\n *\n * @param pattern Text containing an ICU expression that needs to be parsed.\n *\n */\nfunction parseICUBlock(pattern: string): IcuExpression {\n  const cases = [];\n  const values: (string | IcuExpression)[][] = [];\n  let icuType = IcuType.plural;\n  let mainBinding = 0;\n  pattern = pattern.replace(ICU_BLOCK_REGEX, function(str: string, binding: string, type: string) {\n    if (type === 'select') {\n      icuType = IcuType.select;\n    } else {\n      icuType = IcuType.plural;\n    }\n    mainBinding = parseInt(binding.substr(1), 10);\n    return '';\n  });\n\n  const parts = extractParts(pattern) as string[];\n  // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n  for (let pos = 0; pos < parts.length;) {\n    let key = parts[pos++].trim();\n    if (icuType === IcuType.plural) {\n      // Key can be \"=x\", we just want \"x\"\n      key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n    }\n    if (key.length) {\n      cases.push(key);\n    }\n\n    const blocks = extractParts(parts[pos++]) as string[];\n    if (blocks.length) {\n      values.push(blocks);\n    }\n  }\n\n  assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n  // TODO(ocombe): support ICU expressions in attributes, see #21615\n  return {type: icuType, mainBinding: mainBinding, cases, values};\n}\n\n/**\n * Removes everything inside the sub-templates of a message.\n */\nfunction removeInnerTemplateTranslation(message: string): string {\n  let match;\n  let res = '';\n  let index = 0;\n  let inTemplate = false;\n  let tagMatched;\n\n  while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n    if (!inTemplate) {\n      res += message.substring(index, match.index + match[0].length);\n      tagMatched = match[1];\n      inTemplate = true;\n    } else {\n      if (match[0] === `${MARKER}/*${tagMatched}${MARKER}`) {\n        index = match.index;\n        inTemplate = false;\n      }\n    }\n  }\n\n  ngDevMode &&\n      assertEqual(\n          inTemplate, false,\n          `Tag mismatch: unable to find the end of the sub-template in the translation \"${message}\"`);\n\n  res += message.substr(index);\n  return res;\n}\n\n/**\n * Extracts a part of a message and removes the rest.\n *\n * This method is used for extracting a part of the message associated with a template. A translated\n * message can span multiple templates.\n *\n * Example:\n * ```\n * <div i18n>Translate <span *ngIf>me</span>!</div>\n * ```\n *\n * @param message The message to crop\n * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n * external template and removes all sub-templates.\n */\nexport function getTranslationForTemplate(message: string, subTemplateIndex?: number) {\n  if (typeof subTemplateIndex !== 'number') {\n    // We want the root template message, ignore all sub-templates\n    return removeInnerTemplateTranslation(message);\n  } else {\n    // We want a specific sub-template\n    const start =\n        message.indexOf(`:${subTemplateIndex}${MARKER}`) + 2 + subTemplateIndex.toString().length;\n    const end = message.search(new RegExp(`${MARKER}\\\\/\\\\*\\\\d+:${subTemplateIndex}${MARKER}`));\n    return removeInnerTemplateTranslation(message.substring(start, end));\n  }\n}\n\n/**\n * Generate the OpCodes to update the bindings of a string.\n *\n * @param str The string containing the bindings.\n * @param destinationNode Index of the destination node which will receive the binding.\n * @param attrName Name of the attribute, if the string belongs to an attribute.\n * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n */\nfunction generateBindingUpdateOpCodes(\n    str: string, destinationNode: number, attrName?: string,\n    sanitizeFn: SanitizerFn | null = null): I18nUpdateOpCodes {\n  const updateOpCodes: I18nUpdateOpCodes = [null, null];  // Alloc space for mask and size\n  const textParts = str.split(BINDING_REGEXP);\n  let mask = 0;\n\n  for (let j = 0; j < textParts.length; j++) {\n    const textValue = textParts[j];\n\n    if (j & 1) {\n      // Odd indexes are bindings\n      const bindingIndex = parseInt(textValue, 10);\n      updateOpCodes.push(-1 - bindingIndex);\n      mask = mask | toMaskBit(bindingIndex);\n    } else if (textValue !== '') {\n      // Even indexes are text\n      updateOpCodes.push(textValue);\n    }\n  }\n\n  updateOpCodes.push(\n      destinationNode << I18nUpdateOpCode.SHIFT_REF |\n      (attrName ? I18nUpdateOpCode.Attr : I18nUpdateOpCode.Text));\n  if (attrName) {\n    updateOpCodes.push(attrName, sanitizeFn);\n  }\n  updateOpCodes[0] = mask;\n  updateOpCodes[1] = updateOpCodes.length - 2;\n  return updateOpCodes;\n}\n\nfunction getBindingMask(icuExpression: IcuExpression, mask = 0): number {\n  mask = mask | toMaskBit(icuExpression.mainBinding);\n  let match;\n  for (let i = 0; i < icuExpression.values.length; i++) {\n    const valueArr = icuExpression.values[i];\n    for (let j = 0; j < valueArr.length; j++) {\n      const value = valueArr[j];\n      if (typeof value === 'string') {\n        while (match = BINDING_REGEXP.exec(value)) {\n          mask = mask | toMaskBit(parseInt(match[1], 10));\n        }\n      } else {\n        mask = getBindingMask(value as IcuExpression, mask);\n      }\n    }\n  }\n  return mask;\n}\n\nconst i18nIndexStack: number[] = [];\nlet i18nIndexStackPointer = -1;\n\n/**\n * Convert binding index to mask bit.\n *\n * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n * that we will execute binding code more often than necessary. (penalty of performance)\n */\nfunction toMaskBit(bindingIndex: number): number {\n  return 1 << Math.min(bindingIndex, 31);\n}\n\nconst parentIndexStack: number[] = [];\n\n/**\n * Marks a block of text as translatable.\n *\n * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n * The translation `message` is the value which is locale specific. The translation string may\n * contain placeholders which associate inner elements and sub-templates within the translation.\n *\n * The translation `message` placeholders are:\n * - `ï¿½{index}(:{block})ï¿½`: *Binding Placeholder*: Marks a location where an expression will be\n *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n *   `block` that matches the sub-template in which it was declared.\n * - `ï¿½#{index}(:{block})ï¿½`/`ï¿½/#{index}(:{block})ï¿½`: *Element Placeholder*:  Marks the beginning\n *   and end of DOM element that were embedded in the original translation block. The placeholder\n *   `index` points to the element index in the template instructions set. An optional `block` that\n *   matches the sub-template in which it was declared.\n * - `ï¿½*{index}:{block}ï¿½`/`ï¿½/*{index}:{block}ï¿½`: *Sub-template Placeholder*: Sub-templates must be\n *   split up and translated separately in each angular template function. The `index` points to the\n *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n *\n * @param index A unique index of the translation in the static block.\n * @param message The translation message.\n * @param subTemplateIndex Optional sub-template index in the `message`.\n */\nexport function i18nStart(index: number, message: string, subTemplateIndex?: number): void {\n  const tView = getLView()[TVIEW];\n  ngDevMode && assertDefined(tView, `tView should be defined`);\n  i18nIndexStack[++i18nIndexStackPointer] = index;\n  if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n    i18nStartFirstPass(tView, index, message, subTemplateIndex);\n  }\n}\n\n/**\n * See `i18nStart` above.\n */\nfunction i18nStartFirstPass(\n    tView: TView, index: number, message: string, subTemplateIndex?: number) {\n  const viewData = getLView();\n  const expandoStartIndex = tView.blueprint.length - HEADER_OFFSET;\n  const previousOrParentTNode = getPreviousOrParentTNode();\n  const parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n                                      previousOrParentTNode && previousOrParentTNode.parent;\n  let parentIndex = parentTNode && parentTNode !== viewData[HOST_NODE] ?\n      parentTNode.index - HEADER_OFFSET :\n      index;\n  let parentIndexPointer = 0;\n  parentIndexStack[parentIndexPointer] = parentIndex;\n  const createOpCodes: I18nMutateOpCodes = [];\n  // If the previous node wasn't the direct parent then we have a translation without top level\n  // element and we need to keep a reference of the previous element if there is one\n  if (index > 0 && previousOrParentTNode !== parentTNode) {\n    // Create an OpCode to select the previous TNode\n    createOpCodes.push(\n        previousOrParentTNode.index << I18nMutateOpCode.SHIFT_REF | I18nMutateOpCode.Select);\n  }\n  const updateOpCodes: I18nUpdateOpCodes = [];\n  const icuExpressions: TIcu[] = [];\n\n  const templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n  const msgParts = templateTranslation.split(PH_REGEXP);\n  for (let i = 0; i < msgParts.length; i++) {\n    let value = msgParts[i];\n    if (i & 1) {\n      // Odd indexes are placeholders (elements and sub-templates)\n      if (value.charAt(0) === '/') {\n        // It is a closing tag\n        if (value.charAt(1) === '#') {\n          const phIndex = parseInt(value.substr(2), 10);\n          parentIndex = parentIndexStack[--parentIndexPointer];\n          createOpCodes.push(phIndex << I18nMutateOpCode.SHIFT_REF | I18nMutateOpCode.ElementEnd);\n        }\n      } else {\n        const phIndex = parseInt(value.substr(1), 10);\n        // The value represents a placeholder that we move to the designated index\n        createOpCodes.push(\n            phIndex << I18nMutateOpCode.SHIFT_REF | I18nMutateOpCode.Select,\n            parentIndex << I18nMutateOpCode.SHIFT_PARENT | I18nMutateOpCode.AppendChild);\n\n        if (value.charAt(0) === '#') {\n          parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n        }\n      }\n    } else {\n      // Even indexes are text (including bindings & ICU expressions)\n      const parts = value.split(ICU_REGEXP);\n      for (let j = 0; j < parts.length; j++) {\n        value = parts[j];\n\n        if (j & 1) {\n          // Odd indexes are ICU expressions\n          // Create the comment node that will anchor the ICU expression\n          allocExpando(viewData);\n          const icuNodeIndex = tView.blueprint.length - 1 - HEADER_OFFSET;\n          createOpCodes.push(\n              COMMENT_MARKER, ngDevMode ? `ICU ${icuNodeIndex}` : '',\n              parentIndex << I18nMutateOpCode.SHIFT_PARENT | I18nMutateOpCode.AppendChild);\n\n          // Update codes for the ICU expression\n          const icuExpression = parseICUBlock(value.substr(1, value.length - 2));\n          const mask = getBindingMask(icuExpression);\n          icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n          // Since this is recursive, the last TIcu that was pushed is the one we want\n          const tIcuIndex = icuExpressions.length - 1;\n          updateOpCodes.push(\n              toMaskBit(icuExpression.mainBinding),  // mask of the main binding\n              3,                                     // skip 3 opCodes if not changed\n              -1 - icuExpression.mainBinding,\n              icuNodeIndex << I18nUpdateOpCode.SHIFT_REF | I18nUpdateOpCode.IcuSwitch, tIcuIndex,\n              mask,  // mask of all the bindings of this ICU expression\n              2,     // skip 2 opCodes if not changed\n              icuNodeIndex << I18nUpdateOpCode.SHIFT_REF | I18nUpdateOpCode.IcuUpdate, tIcuIndex);\n        } else if (value !== '') {\n          // Even indexes are text (including bindings)\n          const hasBinding = value.match(BINDING_REGEXP);\n          // Create text nodes\n          allocExpando(viewData);\n          createOpCodes.push(\n              // If there is a binding, the value will be set during update\n              hasBinding ? '' : value,\n              parentIndex << I18nMutateOpCode.SHIFT_PARENT | I18nMutateOpCode.AppendChild);\n\n          if (hasBinding) {\n            addAllToArray(\n                generateBindingUpdateOpCodes(value, tView.blueprint.length - 1 - HEADER_OFFSET),\n                updateOpCodes);\n          }\n        }\n      }\n    }\n  }\n\n  // NOTE: local var needed to properly assert the type of `TI18n`.\n  const tI18n: TI18n = {\n    vars: tView.blueprint.length - HEADER_OFFSET - expandoStartIndex,\n    expandoStartIndex,\n    create: createOpCodes,\n    update: updateOpCodes,\n    icus: icuExpressions.length ? icuExpressions : null,\n  };\n  tView.data[index + HEADER_OFFSET] = tI18n;\n}\n\nfunction appendI18nNode(tNode: TNode, parentTNode: TNode, previousTNode: TNode | null): TNode {\n  ngDevMode && ngDevMode.rendererMoveNode++;\n  const viewData = getLView();\n  if (!previousTNode) {\n    previousTNode = parentTNode;\n  }\n  // re-organize node tree to put this node in the correct position.\n  if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n    tNode.next = parentTNode.child;\n    parentTNode.child = tNode;\n  } else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n    tNode.next = previousTNode.next;\n    previousTNode.next = tNode;\n  } else {\n    tNode.next = null;\n  }\n\n  if (parentTNode !== viewData[HOST_NODE]) {\n    tNode.parent = parentTNode as TElementNode;\n  }\n\n  appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n\n  const slotValue = viewData[tNode.index];\n  if (tNode.type !== TNodeType.Container && isLContainer(slotValue)) {\n    // Nodes that inject ViewContainerRef also have a comment node that should be moved\n    appendChild(slotValue[NATIVE], tNode, viewData);\n  }\n  return tNode;\n}\n\n/**\n * Handles message string post-processing for internationalization.\n *\n * Handles message string post-processing by transforming it from intermediate\n * format (that might contain some markers that we need to replace) to the final\n * form, consumable by i18nStart instruction. Post processing steps include:\n *\n * 1. Resolve all multi-value cases (like [ï¿½*1:1ï¿½ï¿½#2:1ï¿½|ï¿½#4:1ï¿½|ï¿½5ï¿½])\n * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n * 3. Replace all ICU references with corresponding values (like ï¿½ICU_EXP_ICU_1ï¿½)\n *    in case multiple ICUs have the same placeholder name\n *\n * @param message Raw translation string for post processing\n * @param replacements Set of replacements that should be applied\n *\n * @returns Transformed string that can be consumed by i18nStart instruction\n *\n * @publicAPI\n */\nexport function i18nPostprocess(\n    message: string, replacements: {[key: string]: (string | string[])}): string {\n  //\n  // Step 1: resolve all multi-value cases (like [ï¿½*1:1ï¿½ï¿½#2:1ï¿½|ï¿½#4:1ï¿½|ï¿½5ï¿½])\n  //\n  const matches: {[key: string]: string[]} = {};\n  let result = message.replace(PP_PLACEHOLDERS, (_match, content: string): string => {\n    if (!matches[content]) {\n      matches[content] = content.split('|');\n    }\n    if (!matches[content].length) {\n      throw new Error(`i18n postprocess: unmatched placeholder - ${content}`);\n    }\n    return matches[content].shift() !;\n  });\n\n  // verify that we injected all values\n  const hasUnmatchedValues = Object.keys(matches).some(key => !!matches[key].length);\n  if (hasUnmatchedValues) {\n    throw new Error(`i18n postprocess: unmatched values - ${JSON.stringify(matches)}`);\n  }\n\n  // return current result if no replacements specified\n  if (!Object.keys(replacements).length) {\n    return result;\n  }\n\n  //\n  // Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n  //\n  result = result.replace(PP_ICU_VARS, (match, start, key, _type, _idx, end): string => {\n    return replacements.hasOwnProperty(key) ? `${start}${replacements[key]}${end}` : match;\n  });\n\n  //\n  // Step 3: replace all ICU references with corresponding values (like ï¿½ICU_EXP_ICU_1ï¿½)\n  // in case multiple ICUs have the same placeholder name\n  //\n  result = result.replace(PP_ICUS, (match, key): string => {\n    if (replacements.hasOwnProperty(key)) {\n      const list = replacements[key] as string[];\n      if (!list.length) {\n        throw new Error(`i18n postprocess: unmatched ICU - ${match} with key: ${key}`);\n      }\n      return list.shift() !;\n    }\n    return match;\n  });\n\n  return result;\n}\n\n/**\n * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n */\nexport function i18nEnd(): void {\n  const tView = getLView()[TVIEW];\n  ngDevMode && assertDefined(tView, `tView should be defined`);\n  i18nEndFirstPass(tView);\n}\n\n/**\n * See `i18nEnd` above.\n */\nfunction i18nEndFirstPass(tView: TView) {\n  const viewData = getLView();\n  ngDevMode && assertEqual(\n                   viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex,\n                   'i18nEnd should be called before any binding');\n\n  const rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n  const tI18n = tView.data[rootIndex + HEADER_OFFSET] as TI18n;\n  ngDevMode && assertDefined(tI18n, `You should call i18nStart before i18nEnd`);\n\n  // The last placeholder that was added before `i18nEnd`\n  const previousOrParentTNode = getPreviousOrParentTNode();\n  const visitedPlaceholders =\n      readCreateOpCodes(rootIndex, tI18n.create, tI18n.expandoStartIndex, viewData);\n\n  // Remove deleted placeholders\n  // The last placeholder that was added before `i18nEnd` is `previousOrParentTNode`\n  for (let i = rootIndex + 1; i <= previousOrParentTNode.index - HEADER_OFFSET; i++) {\n    if (visitedPlaceholders.indexOf(i) === -1) {\n      removeNode(i, viewData);\n    }\n  }\n}\n\nfunction readCreateOpCodes(\n    index: number, createOpCodes: I18nMutateOpCodes, expandoStartIndex: number,\n    viewData: LView): number[] {\n  const renderer = getLView()[RENDERER];\n  let currentTNode: TNode|null = null;\n  let previousTNode: TNode|null = null;\n  const visitedPlaceholders: number[] = [];\n  for (let i = 0; i < createOpCodes.length; i++) {\n    const opCode = createOpCodes[i];\n    if (typeof opCode == 'string') {\n      const textRNode = createTextNode(opCode, renderer);\n      ngDevMode && ngDevMode.rendererCreateTextNode++;\n      previousTNode = currentTNode;\n      currentTNode =\n          createNodeAtIndex(expandoStartIndex++, TNodeType.Element, textRNode, null, null);\n      setIsParent(false);\n    } else if (typeof opCode == 'number') {\n      switch (opCode & I18nMutateOpCode.MASK_OPCODE) {\n        case I18nMutateOpCode.AppendChild:\n          const destinationNodeIndex = opCode >>> I18nMutateOpCode.SHIFT_PARENT;\n          let destinationTNode: TNode;\n          if (destinationNodeIndex === index) {\n            // If the destination node is `i18nStart`, we don't have a\n            // top-level node and we should use the host node instead\n            destinationTNode = viewData[HOST_NODE] !;\n          } else {\n            destinationTNode = getTNode(destinationNodeIndex, viewData);\n          }\n          ngDevMode &&\n              assertDefined(\n                  currentTNode !,\n                  `You need to create or select a node before you can insert it into the DOM`);\n          previousTNode = appendI18nNode(currentTNode !, destinationTNode, previousTNode);\n          destinationTNode.next = null;\n          break;\n        case I18nMutateOpCode.Select:\n          const nodeIndex = opCode >>> I18nMutateOpCode.SHIFT_REF;\n          visitedPlaceholders.push(nodeIndex);\n          previousTNode = currentTNode;\n          currentTNode = getTNode(nodeIndex, viewData);\n          if (currentTNode) {\n            setPreviousOrParentTNode(currentTNode);\n            if (currentTNode.type === TNodeType.Element) {\n              setIsParent(true);\n            }\n          }\n          break;\n        case I18nMutateOpCode.ElementEnd:\n          const elementIndex = opCode >>> I18nMutateOpCode.SHIFT_REF;\n          previousTNode = currentTNode = getTNode(elementIndex, viewData);\n          setPreviousOrParentTNode(currentTNode);\n          setIsParent(false);\n          break;\n        case I18nMutateOpCode.Attr:\n          const elementNodeIndex = opCode >>> I18nMutateOpCode.SHIFT_REF;\n          const attrName = createOpCodes[++i] as string;\n          const attrValue = createOpCodes[++i] as string;\n          elementAttribute(elementNodeIndex, attrName, attrValue);\n          break;\n        default:\n          throw new Error(`Unable to determine the type of mutate operation for \"${opCode}\"`);\n      }\n    } else {\n      switch (opCode) {\n        case COMMENT_MARKER:\n          const commentValue = createOpCodes[++i] as string;\n          ngDevMode && assertEqual(\n                           typeof commentValue, 'string',\n                           `Expected \"${commentValue}\" to be a comment node value`);\n          const commentRNode = renderer.createComment(commentValue);\n          ngDevMode && ngDevMode.rendererCreateComment++;\n          previousTNode = currentTNode;\n          currentTNode = createNodeAtIndex(\n              expandoStartIndex++, TNodeType.IcuContainer, commentRNode, null, null);\n          attachPatchData(commentRNode, viewData);\n          (currentTNode as TIcuContainerNode).activeCaseIndex = null;\n          // We will add the case nodes later, during the update phase\n          setIsParent(false);\n          break;\n        case ELEMENT_MARKER:\n          const tagNameValue = createOpCodes[++i] as string;\n          ngDevMode && assertEqual(\n                           typeof tagNameValue, 'string',\n                           `Expected \"${tagNameValue}\" to be an element node tag name`);\n          const elementRNode = renderer.createElement(tagNameValue);\n          ngDevMode && ngDevMode.rendererCreateElement++;\n          previousTNode = currentTNode;\n          currentTNode = createNodeAtIndex(\n              expandoStartIndex++, TNodeType.Element, elementRNode, tagNameValue, null);\n          break;\n        default:\n          throw new Error(`Unable to determine the type of mutate operation for \"${opCode}\"`);\n      }\n    }\n  }\n\n  setIsParent(false);\n\n  return visitedPlaceholders;\n}\n\nfunction readUpdateOpCodes(\n    updateOpCodes: I18nUpdateOpCodes, icus: TIcu[] | null, bindingsStartIndex: number,\n    changeMask: number, viewData: LView, bypassCheckBit = false) {\n  let caseCreated = false;\n  for (let i = 0; i < updateOpCodes.length; i++) {\n    // bit code to check if we should apply the next update\n    const checkBit = updateOpCodes[i] as number;\n    // Number of opCodes to skip until next set of update codes\n    const skipCodes = updateOpCodes[++i] as number;\n    if (bypassCheckBit || (checkBit & changeMask)) {\n      // The value has been updated since last checked\n      let value = '';\n      for (let j = i + 1; j <= (i + skipCodes); j++) {\n        const opCode = updateOpCodes[j];\n        if (typeof opCode == 'string') {\n          value += opCode;\n        } else if (typeof opCode == 'number') {\n          if (opCode < 0) {\n            // It's a binding index whose value is negative\n            value += stringify(viewData[bindingsStartIndex - opCode]);\n          } else {\n            const nodeIndex = opCode >>> I18nUpdateOpCode.SHIFT_REF;\n            let tIcuIndex: number;\n            let tIcu: TIcu;\n            let icuTNode: TIcuContainerNode;\n            switch (opCode & I18nUpdateOpCode.MASK_OPCODE) {\n              case I18nUpdateOpCode.Attr:\n                const attrName = updateOpCodes[++j] as string;\n                const sanitizeFn = updateOpCodes[++j] as SanitizerFn | null;\n                elementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                break;\n              case I18nUpdateOpCode.Text:\n                textBinding(nodeIndex, value);\n                break;\n              case I18nUpdateOpCode.IcuSwitch:\n                tIcuIndex = updateOpCodes[++j] as number;\n                tIcu = icus ![tIcuIndex];\n                icuTNode = getTNode(nodeIndex, viewData) as TIcuContainerNode;\n                // If there is an active case, delete the old nodes\n                if (icuTNode.activeCaseIndex !== null) {\n                  const removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                  for (let k = 0; k < removeCodes.length; k++) {\n                    const removeOpCode = removeCodes[k] as number;\n                    switch (removeOpCode & I18nMutateOpCode.MASK_OPCODE) {\n                      case I18nMutateOpCode.Remove:\n                        const nodeIndex = removeOpCode >>> I18nMutateOpCode.SHIFT_REF;\n                        removeNode(nodeIndex, viewData);\n                        break;\n                      case I18nMutateOpCode.RemoveNestedIcu:\n                        const nestedIcuNodeIndex =\n                            removeCodes[k + 1] as number >>> I18nMutateOpCode.SHIFT_REF;\n                        const nestedIcuTNode =\n                            getTNode(nestedIcuNodeIndex, viewData) as TIcuContainerNode;\n                        const activeIndex = nestedIcuTNode.activeCaseIndex;\n                        if (activeIndex !== null) {\n                          const nestedIcuTIndex = removeOpCode >>> I18nMutateOpCode.SHIFT_REF;\n                          const nestedTIcu = icus ![nestedIcuTIndex];\n                          addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                        }\n                        break;\n                    }\n                  }\n                }\n\n                // Update the active caseIndex\n                const caseIndex = getCaseIndex(tIcu, value);\n                icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n\n                // Add the nodes for the new case\n                readCreateOpCodes(-1, tIcu.create[caseIndex], tIcu.expandoStartIndex, viewData);\n                caseCreated = true;\n                break;\n              case I18nUpdateOpCode.IcuUpdate:\n                tIcuIndex = updateOpCodes[++j] as number;\n                tIcu = icus ![tIcuIndex];\n                icuTNode = getTNode(nodeIndex, viewData) as TIcuContainerNode;\n                readUpdateOpCodes(\n                    tIcu.update[icuTNode.activeCaseIndex !], icus, bindingsStartIndex, changeMask,\n                    viewData, caseCreated);\n                break;\n            }\n          }\n        }\n      }\n    }\n    i += skipCodes;\n  }\n}\n\nfunction removeNode(index: number, viewData: LView) {\n  const removedPhTNode = getTNode(index, viewData);\n  const removedPhRNode = getNativeByIndex(index, viewData);\n  removeChild(removedPhTNode, removedPhRNode || null, viewData);\n  removedPhTNode.detached = true;\n  ngDevMode && ngDevMode.rendererRemoveNode++;\n\n  const slotValue = load(index) as RElement | RComment | LContainer | StylingContext;\n  if (isLContainer(slotValue)) {\n    const lContainer = slotValue as LContainer;\n    if (removedPhTNode.type !== TNodeType.Container) {\n      removeChild(removedPhTNode, lContainer[NATIVE] || null, viewData);\n    }\n    lContainer[RENDER_PARENT] = null;\n  }\n}\n\n/**\n *\n * Use this instruction to create a translation block that doesn't contain any placeholder.\n * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n *\n * The translation `message` is the value which is locale specific. The translation string may\n * contain placeholders which associate inner elements and sub-templates within the translation.\n *\n * The translation `message` placeholders are:\n * - `ï¿½{index}(:{block})ï¿½`: *Binding Placeholder*: Marks a location where an expression will be\n *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n *   `block` that matches the sub-template in which it was declared.\n * - `ï¿½#{index}(:{block})ï¿½`/`ï¿½/#{index}(:{block})ï¿½`: *Element Placeholder*:  Marks the beginning\n *   and end of DOM element that were embedded in the original translation block. The placeholder\n *   `index` points to the element index in the template instructions set. An optional `block` that\n *   matches the sub-template in which it was declared.\n * - `ï¿½*{index}:{block}ï¿½`/`ï¿½/*{index}:{block}ï¿½`: *Sub-template Placeholder*: Sub-templates must be\n *   split up and translated separately in each angular template function. The `index` points to the\n *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n *\n * @param index A unique index of the translation in the static block.\n * @param message The translation message.\n * @param subTemplateIndex Optional sub-template index in the `message`.\n */\nexport function i18n(index: number, message: string, subTemplateIndex?: number): void {\n  i18nStart(index, message, subTemplateIndex);\n  i18nEnd();\n}\n\n/**\n * Marks a list of attributes as translatable.\n *\n * @param index A unique index in the static block\n * @param values\n */\nexport function i18nAttributes(index: number, values: string[]): void {\n  const tView = getLView()[TVIEW];\n  ngDevMode && assertDefined(tView, `tView should be defined`);\n  ngDevMode &&\n      assertEqual(\n          tView.firstTemplatePass, true, `You should only call i18nEnd on first template pass`);\n  if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n    i18nAttributesFirstPass(tView, index, values);\n  }\n}\n\n/**\n * See `i18nAttributes` above.\n */\nfunction i18nAttributesFirstPass(tView: TView, index: number, values: string[]) {\n  const previousElement = getPreviousOrParentTNode();\n  const previousElementIndex = previousElement.index - HEADER_OFFSET;\n  const updateOpCodes: I18nUpdateOpCodes = [];\n  for (let i = 0; i < values.length; i += 2) {\n    const attrName = values[i];\n    const message = values[i + 1];\n    const parts = message.split(ICU_REGEXP);\n    for (let j = 0; j < parts.length; j++) {\n      const value = parts[j];\n\n      if (j & 1) {\n        // Odd indexes are ICU expressions\n        // TODO(ocombe): support ICU expressions in attributes\n      } else if (value !== '') {\n        // Even indexes are text (including bindings)\n        const hasBinding = !!value.match(BINDING_REGEXP);\n        if (hasBinding) {\n          addAllToArray(\n              generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n        } else {\n          elementAttribute(previousElementIndex, attrName, value);\n        }\n      }\n    }\n  }\n\n  tView.data[index + HEADER_OFFSET] = updateOpCodes;\n}\n\nlet changeMask = 0b0;\nlet shiftsCounter = 0;\n\n/**\n * Stores the values of the bindings during each update cycle in order to determine if we need to\n * update the translated nodes.\n *\n * @param expression The binding's new value or NO_CHANGE\n */\nexport function i18nExp<T>(expression: T | NO_CHANGE): void {\n  if (expression !== NO_CHANGE) {\n    changeMask = changeMask | (1 << shiftsCounter);\n  }\n  shiftsCounter++;\n}\n\n/**\n * Updates a translation block or an i18n attribute when the bindings have changed.\n *\n * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n * (i18n attribute) on which it should update the content.\n */\nexport function i18nApply(index: number) {\n  if (shiftsCounter) {\n    const lView = getLView();\n    const tView = lView[TVIEW];\n    ngDevMode && assertDefined(tView, `tView should be defined`);\n    const tI18n = tView.data[index + HEADER_OFFSET];\n    let updateOpCodes: I18nUpdateOpCodes;\n    let icus: TIcu[]|null = null;\n    if (Array.isArray(tI18n)) {\n      updateOpCodes = tI18n as I18nUpdateOpCodes;\n    } else {\n      updateOpCodes = (tI18n as TI18n).update;\n      icus = (tI18n as TI18n).icus;\n    }\n    const bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n    readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n\n    // Reset changeMask & maskBit to default for the next update cycle\n    changeMask = 0b0;\n    shiftsCounter = 0;\n  }\n}\n\nenum Plural {\n  Zero = 0,\n  One = 1,\n  Two = 2,\n  Few = 3,\n  Many = 4,\n  Other = 5,\n}\n\n/**\n * Returns the plural case based on the locale.\n * This is a copy of the deprecated function that we used in Angular v4.\n * // TODO(ocombe): remove this once we can the real getPluralCase function\n *\n * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n */\nfunction getPluralCase(locale: string, nLike: number | string): Plural {\n  if (typeof nLike === 'string') {\n    nLike = parseInt(<string>nLike, 10);\n  }\n  const n: number = nLike as number;\n  const nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n  const i = Math.floor(Math.abs(n));\n  const v = nDecimal.length;\n  const f = parseInt(nDecimal, 10);\n  const t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n\n  const lang = locale.split('-')[0].toLowerCase();\n\n  switch (lang) {\n    case 'af':\n    case 'asa':\n    case 'az':\n    case 'bem':\n    case 'bez':\n    case 'bg':\n    case 'brx':\n    case 'ce':\n    case 'cgg':\n    case 'chr':\n    case 'ckb':\n    case 'ee':\n    case 'el':\n    case 'eo':\n    case 'es':\n    case 'eu':\n    case 'fo':\n    case 'fur':\n    case 'gsw':\n    case 'ha':\n    case 'haw':\n    case 'hu':\n    case 'jgo':\n    case 'jmc':\n    case 'ka':\n    case 'kk':\n    case 'kkj':\n    case 'kl':\n    case 'ks':\n    case 'ksb':\n    case 'ky':\n    case 'lb':\n    case 'lg':\n    case 'mas':\n    case 'mgo':\n    case 'ml':\n    case 'mn':\n    case 'nb':\n    case 'nd':\n    case 'ne':\n    case 'nn':\n    case 'nnh':\n    case 'nyn':\n    case 'om':\n    case 'or':\n    case 'os':\n    case 'ps':\n    case 'rm':\n    case 'rof':\n    case 'rwk':\n    case 'saq':\n    case 'seh':\n    case 'sn':\n    case 'so':\n    case 'sq':\n    case 'ta':\n    case 'te':\n    case 'teo':\n    case 'tk':\n    case 'tr':\n    case 'ug':\n    case 'uz':\n    case 'vo':\n    case 'vun':\n    case 'wae':\n    case 'xog':\n      if (n === 1) return Plural.One;\n      return Plural.Other;\n    case 'ak':\n    case 'ln':\n    case 'mg':\n    case 'pa':\n    case 'ti':\n      if (n === Math.floor(n) && n >= 0 && n <= 1) return Plural.One;\n      return Plural.Other;\n    case 'am':\n    case 'as':\n    case 'bn':\n    case 'fa':\n    case 'gu':\n    case 'hi':\n    case 'kn':\n    case 'mr':\n    case 'zu':\n      if (i === 0 || n === 1) return Plural.One;\n      return Plural.Other;\n    case 'ar':\n      if (n === 0) return Plural.Zero;\n      if (n === 1) return Plural.One;\n      if (n === 2) return Plural.Two;\n      if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10) return Plural.Few;\n      if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99) return Plural.Many;\n      return Plural.Other;\n    case 'ast':\n    case 'ca':\n    case 'de':\n    case 'en':\n    case 'et':\n    case 'fi':\n    case 'fy':\n    case 'gl':\n    case 'it':\n    case 'nl':\n    case 'sv':\n    case 'sw':\n    case 'ur':\n    case 'yi':\n      if (i === 1 && v === 0) return Plural.One;\n      return Plural.Other;\n    case 'be':\n      if (n % 10 === 1 && !(n % 100 === 11)) return Plural.One;\n      if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n          !(n % 100 >= 12 && n % 100 <= 14))\n        return Plural.Few;\n      if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n          n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n        return Plural.Many;\n      return Plural.Other;\n    case 'br':\n      if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91)) return Plural.One;\n      if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92)) return Plural.Two;\n      if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n          !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n            n % 100 >= 90 && n % 100 <= 99))\n        return Plural.Few;\n      if (!(n === 0) && n % 1e6 === 0) return Plural.Many;\n      return Plural.Other;\n    case 'bs':\n    case 'hr':\n    case 'sr':\n      if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n        return Plural.One;\n      if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n              !(i % 100 >= 12 && i % 100 <= 14) ||\n          f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n              !(f % 100 >= 12 && f % 100 <= 14))\n        return Plural.Few;\n      return Plural.Other;\n    case 'cs':\n    case 'sk':\n      if (i === 1 && v === 0) return Plural.One;\n      if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0) return Plural.Few;\n      if (!(v === 0)) return Plural.Many;\n      return Plural.Other;\n    case 'cy':\n      if (n === 0) return Plural.Zero;\n      if (n === 1) return Plural.One;\n      if (n === 2) return Plural.Two;\n      if (n === 3) return Plural.Few;\n      if (n === 6) return Plural.Many;\n      return Plural.Other;\n    case 'da':\n      if (n === 1 || !(t === 0) && (i === 0 || i === 1)) return Plural.One;\n      return Plural.Other;\n    case 'dsb':\n    case 'hsb':\n      if (v === 0 && i % 100 === 1 || f % 100 === 1) return Plural.One;\n      if (v === 0 && i % 100 === 2 || f % 100 === 2) return Plural.Two;\n      if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n          f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n        return Plural.Few;\n      return Plural.Other;\n    case 'ff':\n    case 'fr':\n    case 'hy':\n    case 'kab':\n      if (i === 0 || i === 1) return Plural.One;\n      return Plural.Other;\n    case 'fil':\n      if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n          v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n          !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n        return Plural.One;\n      return Plural.Other;\n    case 'ga':\n      if (n === 1) return Plural.One;\n      if (n === 2) return Plural.Two;\n      if (n === Math.floor(n) && n >= 3 && n <= 6) return Plural.Few;\n      if (n === Math.floor(n) && n >= 7 && n <= 10) return Plural.Many;\n      return Plural.Other;\n    case 'gd':\n      if (n === 1 || n === 11) return Plural.One;\n      if (n === 2 || n === 12) return Plural.Two;\n      if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19)) return Plural.Few;\n      return Plural.Other;\n    case 'gv':\n      if (v === 0 && i % 10 === 1) return Plural.One;\n      if (v === 0 && i % 10 === 2) return Plural.Two;\n      if (v === 0 &&\n          (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n        return Plural.Few;\n      if (!(v === 0)) return Plural.Many;\n      return Plural.Other;\n    case 'he':\n      if (i === 1 && v === 0) return Plural.One;\n      if (i === 2 && v === 0) return Plural.Two;\n      if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0) return Plural.Many;\n      return Plural.Other;\n    case 'is':\n      if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0)) return Plural.One;\n      return Plural.Other;\n    case 'ksh':\n      if (n === 0) return Plural.Zero;\n      if (n === 1) return Plural.One;\n      return Plural.Other;\n    case 'kw':\n    case 'naq':\n    case 'se':\n    case 'smn':\n      if (n === 1) return Plural.One;\n      if (n === 2) return Plural.Two;\n      return Plural.Other;\n    case 'lag':\n      if (n === 0) return Plural.Zero;\n      if ((i === 0 || i === 1) && !(n === 0)) return Plural.One;\n      return Plural.Other;\n    case 'lt':\n      if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19)) return Plural.One;\n      if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n          !(n % 100 >= 11 && n % 100 <= 19))\n        return Plural.Few;\n      if (!(f === 0)) return Plural.Many;\n      return Plural.Other;\n    case 'lv':\n    case 'prg':\n      if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n          v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n        return Plural.Zero;\n      if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n          !(v === 2) && f % 10 === 1)\n        return Plural.One;\n      return Plural.Other;\n    case 'mk':\n      if (v === 0 && i % 10 === 1 || f % 10 === 1) return Plural.One;\n      return Plural.Other;\n    case 'mt':\n      if (n === 1) return Plural.One;\n      if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n        return Plural.Few;\n      if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19) return Plural.Many;\n      return Plural.Other;\n    case 'pl':\n      if (i === 1 && v === 0) return Plural.One;\n      if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n          !(i % 100 >= 12 && i % 100 <= 14))\n        return Plural.Few;\n      if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n          v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n          v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n        return Plural.Many;\n      return Plural.Other;\n    case 'pt':\n      if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2)) return Plural.One;\n      return Plural.Other;\n    case 'ro':\n      if (i === 1 && v === 0) return Plural.One;\n      if (!(v === 0) || n === 0 ||\n          !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n        return Plural.Few;\n      return Plural.Other;\n    case 'ru':\n    case 'uk':\n      if (v === 0 && i % 10 === 1 && !(i % 100 === 11)) return Plural.One;\n      if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n          !(i % 100 >= 12 && i % 100 <= 14))\n        return Plural.Few;\n      if (v === 0 && i % 10 === 0 ||\n          v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n          v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n        return Plural.Many;\n      return Plural.Other;\n    case 'shi':\n      if (i === 0 || n === 1) return Plural.One;\n      if (n === Math.floor(n) && n >= 2 && n <= 10) return Plural.Few;\n      return Plural.Other;\n    case 'si':\n      if (n === 0 || n === 1 || i === 0 && f === 1) return Plural.One;\n      return Plural.Other;\n    case 'sl':\n      if (v === 0 && i % 100 === 1) return Plural.One;\n      if (v === 0 && i % 100 === 2) return Plural.Two;\n      if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n        return Plural.Few;\n      return Plural.Other;\n    case 'tzm':\n      if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n        return Plural.One;\n      return Plural.Other;\n    // When there is no specification, the default is always \"other\"\n    // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n    // > other (requiredâgeneral plural form â also used if the language only has a single form)\n    default:\n      return Plural.Other;\n  }\n}\n\nfunction getPluralCategory(value: any, locale: string): string {\n  const plural = getPluralCase(locale, value);\n\n  switch (plural) {\n    case Plural.Zero:\n      return 'zero';\n    case Plural.One:\n      return 'one';\n    case Plural.Two:\n      return 'two';\n    case Plural.Few:\n      return 'few';\n    case Plural.Many:\n      return 'many';\n    default:\n      return 'other';\n  }\n}\n\n/**\n * Returns the index of the current case of an ICU expression depending on the main binding value\n *\n * @param icuExpression\n * @param bindingValue The value of the main binding used by this ICU expression\n */\nfunction getCaseIndex(icuExpression: TIcu, bindingValue: string): number {\n  let index = icuExpression.cases.indexOf(bindingValue);\n  if (index === -1) {\n    switch (icuExpression.type) {\n      case IcuType.plural: {\n        // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n        const locale = 'en-US';\n        const resolvedCase = getPluralCategory(bindingValue, locale);\n        index = icuExpression.cases.indexOf(resolvedCase);\n        if (index === -1 && resolvedCase !== 'other') {\n          index = icuExpression.cases.indexOf('other');\n        }\n        break;\n      }\n      case IcuType.select: {\n        index = icuExpression.cases.indexOf('other');\n        break;\n      }\n    }\n  }\n  return index;\n}\n\n/**\n * Generate the OpCodes for ICU expressions.\n *\n * @param tIcus\n * @param icuExpression\n * @param startIndex\n * @param expandoStartIndex\n */\nfunction icuStart(\n    tIcus: TIcu[], icuExpression: IcuExpression, startIndex: number,\n    expandoStartIndex: number): void {\n  const createCodes = [];\n  const removeCodes = [];\n  const updateCodes = [];\n  const vars = [];\n  const childIcus: number[][] = [];\n  for (let i = 0; i < icuExpression.values.length; i++) {\n    // Each value is an array of strings & other ICU expressions\n    const valueArr = icuExpression.values[i];\n    const nestedIcus: IcuExpression[] = [];\n    for (let j = 0; j < valueArr.length; j++) {\n      const value = valueArr[j];\n      if (typeof value !== 'string') {\n        // It is an nested ICU expression\n        const icuIndex = nestedIcus.push(value as IcuExpression) - 1;\n        // Replace nested ICU expression by a comment node\n        valueArr[j] = `<!--ï¿½${icuIndex}ï¿½-->`;\n      }\n    }\n    const icuCase: IcuCase =\n        parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n    createCodes.push(icuCase.create);\n    removeCodes.push(icuCase.remove);\n    updateCodes.push(icuCase.update);\n    vars.push(icuCase.vars);\n    childIcus.push(icuCase.childIcus);\n  }\n  const tIcu: TIcu = {\n    type: icuExpression.type,\n    vars,\n    expandoStartIndex: expandoStartIndex + 1, childIcus,\n    cases: icuExpression.cases,\n    create: createCodes,\n    remove: removeCodes,\n    update: updateCodes\n  };\n  tIcus.push(tIcu);\n  const lView = getLView();\n  const worstCaseSize = Math.max(...vars);\n  for (let i = 0; i < worstCaseSize; i++) {\n    allocExpando(lView);\n  }\n}\n\n/**\n * Transforms a string template into an HTML template and a list of instructions used to update\n * attributes or nodes that contain bindings.\n *\n * @param unsafeHtml The string to parse\n * @param parentIndex\n * @param nestedIcus\n * @param tIcus\n * @param expandoStartIndex\n */\nfunction parseIcuCase(\n    unsafeHtml: string, parentIndex: number, nestedIcus: IcuExpression[], tIcus: TIcu[],\n    expandoStartIndex: number): IcuCase {\n  const inertBodyHelper = new InertBodyHelper(document);\n  const inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n  if (!inertBodyElement) {\n    throw new Error('Unable to generate inert body element');\n  }\n  const wrapper = getTemplateContent(inertBodyElement !) as Element || inertBodyElement;\n  const opCodes: IcuCase = {vars: 0, childIcus: [], create: [], remove: [], update: []};\n  parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n  return opCodes;\n}\n\nconst NESTED_ICU = /ï¿½(\\d+)ï¿½/;\n\n/**\n * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n *\n * @param currentNode The first node to parse\n * @param icuCase The data for the ICU expression case that contains those nodes\n * @param parentIndex Index of the current node's parent\n * @param nestedIcus Data for the nested ICU expressions that this case contains\n * @param tIcus Data for all ICU expressions of the current message\n * @param expandoStartIndex Expando start index for the current ICU expression\n */\nfunction parseNodes(\n    currentNode: Node | null, icuCase: IcuCase, parentIndex: number, nestedIcus: IcuExpression[],\n    tIcus: TIcu[], expandoStartIndex: number) {\n  if (currentNode) {\n    const nestedIcusToCreate: [IcuExpression, number][] = [];\n    while (currentNode) {\n      const nextNode: Node|null = currentNode.nextSibling;\n      const newIndex = expandoStartIndex + ++icuCase.vars;\n      switch (currentNode.nodeType) {\n        case Node.ELEMENT_NODE:\n          const element = currentNode as Element;\n          const tagName = element.tagName.toLowerCase();\n          if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n            // This isn't a valid element, we won't create an element for it\n            icuCase.vars--;\n          } else {\n            icuCase.create.push(\n                ELEMENT_MARKER, tagName,\n                parentIndex << I18nMutateOpCode.SHIFT_PARENT | I18nMutateOpCode.AppendChild);\n            const elAttrs = element.attributes;\n            for (let i = 0; i < elAttrs.length; i++) {\n              const attr = elAttrs.item(i) !;\n              const lowerAttrName = attr.name.toLowerCase();\n              const hasBinding = !!attr.value.match(BINDING_REGEXP);\n              // we assume the input string is safe, unless it's using a binding\n              if (hasBinding) {\n                if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                  if (URI_ATTRS[lowerAttrName]) {\n                    addAllToArray(\n                        generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl),\n                        icuCase.update);\n                  } else if (SRCSET_ATTRS[lowerAttrName]) {\n                    addAllToArray(\n                        generateBindingUpdateOpCodes(\n                            attr.value, newIndex, attr.name, sanitizeSrcset),\n                        icuCase.update);\n                  } else {\n                    addAllToArray(\n                        generateBindingUpdateOpCodes(attr.value, newIndex, attr.name),\n                        icuCase.update);\n                  }\n                } else {\n                  ngDevMode &&\n                      console.warn(\n                          `WARNING: ignoring unsafe attribute value ${lowerAttrName} on element ${tagName} (see http://g.co/ng/security#xss)`);\n                }\n              } else {\n                icuCase.create.push(\n                    newIndex << I18nMutateOpCode.SHIFT_REF | I18nMutateOpCode.Attr, attr.name,\n                    attr.value);\n              }\n            }\n            // Parse the children of this node (if any)\n            parseNodes(\n                currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n            // Remove the parent node after the children\n            icuCase.remove.push(newIndex << I18nMutateOpCode.SHIFT_REF | I18nMutateOpCode.Remove);\n          }\n          break;\n        case Node.TEXT_NODE:\n          const value = currentNode.textContent || '';\n          const hasBinding = value.match(BINDING_REGEXP);\n          icuCase.create.push(\n              hasBinding ? '' : value,\n              parentIndex << I18nMutateOpCode.SHIFT_PARENT | I18nMutateOpCode.AppendChild);\n          icuCase.remove.push(newIndex << I18nMutateOpCode.SHIFT_REF | I18nMutateOpCode.Remove);\n          if (hasBinding) {\n            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n          }\n          break;\n        case Node.COMMENT_NODE:\n          // Check if the comment node is a placeholder for a nested ICU\n          const match = NESTED_ICU.exec(currentNode.textContent || '');\n          if (match) {\n            const nestedIcuIndex = parseInt(match[1], 10);\n            const newLocal = ngDevMode ? `nested ICU ${nestedIcuIndex}` : '';\n            // Create the comment node that will anchor the ICU expression\n            icuCase.create.push(\n                COMMENT_MARKER, newLocal,\n                parentIndex << I18nMutateOpCode.SHIFT_PARENT | I18nMutateOpCode.AppendChild);\n            const nestedIcu = nestedIcus[nestedIcuIndex];\n            nestedIcusToCreate.push([nestedIcu, newIndex]);\n          } else {\n            // We do not handle any other type of comment\n            icuCase.vars--;\n          }\n          break;\n        default:\n          // We do not handle any other type of element\n          icuCase.vars--;\n      }\n      currentNode = nextNode !;\n    }\n\n    for (let i = 0; i < nestedIcusToCreate.length; i++) {\n      const nestedIcu = nestedIcusToCreate[i][0];\n      const nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n      icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n      // Since this is recursive, the last TIcu that was pushed is the one we want\n      const nestTIcuIndex = tIcus.length - 1;\n      icuCase.vars += Math.max(...tIcus[nestTIcuIndex].vars);\n      icuCase.childIcus.push(nestTIcuIndex);\n      const mask = getBindingMask(nestedIcu);\n      icuCase.update.push(\n          toMaskBit(nestedIcu.mainBinding),  // mask of the main binding\n          3,                                 // skip 3 opCodes if not changed\n          -1 - nestedIcu.mainBinding,\n          nestedIcuNodeIndex << I18nUpdateOpCode.SHIFT_REF | I18nUpdateOpCode.IcuSwitch,\n          nestTIcuIndex,\n          mask,  // mask of all the bindings of this ICU expression\n          2,     // skip 2 opCodes if not changed\n          nestedIcuNodeIndex << I18nUpdateOpCode.SHIFT_REF | I18nUpdateOpCode.IcuUpdate,\n          nestTIcuIndex);\n      icuCase.remove.push(\n          nestTIcuIndex << I18nMutateOpCode.SHIFT_REF | I18nMutateOpCode.RemoveNestedIcu,\n          nestedIcuNodeIndex << I18nMutateOpCode.SHIFT_REF | I18nMutateOpCode.Remove);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {INJECTOR, Injector} from '../di/injector';\nimport {InjectFlags} from '../di/injector_compatibility';\nimport {StaticProvider} from '../di/provider';\nimport {createInjector} from '../di/r3_injector';\nimport {ComponentFactoryResolver as viewEngine_ComponentFactoryResolver} from '../linker/component_factory_resolver';\nimport {InternalNgModuleRef, NgModuleFactory as viewEngine_NgModuleFactory, NgModuleRef as viewEngine_NgModuleRef} from '../linker/ng_module_factory';\nimport {NgModuleDef} from '../metadata/ng_module';\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\nimport {assertDefined} from './assert';\nimport {ComponentFactoryResolver} from './component_ref';\nimport {getNgModuleDef} from './definition';\n\nexport interface NgModuleType<T = any> extends Type<T> { ngModuleDef: NgModuleDef<T>; }\n\nconst COMPONENT_FACTORY_RESOLVER: StaticProvider = {\n  provide: viewEngine_ComponentFactoryResolver,\n  useClass: ComponentFactoryResolver,\n  deps: [viewEngine_NgModuleRef],\n};\n\nexport class NgModuleRef<T> extends viewEngine_NgModuleRef<T> implements InternalNgModuleRef<T> {\n  // tslint:disable-next-line:require-internal-with-underscore\n  _bootstrapComponents: Type<any>[] = [];\n  // tslint:disable-next-line:require-internal-with-underscore\n  _r3Injector: Injector;\n  injector: Injector = this;\n  instance: T;\n  destroyCbs: (() => void)[]|null = [];\n\n  constructor(ngModuleType: Type<T>, public _parent: Injector|null) {\n    super();\n    const ngModuleDef = getNgModuleDef(ngModuleType);\n    ngDevMode && assertDefined(\n                     ngModuleDef,\n                     `NgModule '${stringify(ngModuleType)}' is not a subtype of 'NgModuleType'.`);\n\n    this._bootstrapComponents = ngModuleDef !.bootstrap;\n    const additionalProviders: StaticProvider[] = [\n      {\n        provide: viewEngine_NgModuleRef,\n        useValue: this,\n      },\n      COMPONENT_FACTORY_RESOLVER\n    ];\n    this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders);\n    this.instance = this.get(ngModuleType);\n  }\n\n  get(token: any, notFoundValue: any = Injector.THROW_IF_NOT_FOUND,\n      injectFlags: InjectFlags = InjectFlags.Default): any {\n    if (token === Injector || token === viewEngine_NgModuleRef || token === INJECTOR) {\n      return this;\n    }\n    return this._r3Injector.get(token, notFoundValue, injectFlags);\n  }\n\n  get componentFactoryResolver(): viewEngine_ComponentFactoryResolver {\n    return this.get(viewEngine_ComponentFactoryResolver);\n  }\n\n  destroy(): void {\n    ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n    this.destroyCbs !.forEach(fn => fn());\n    this.destroyCbs = null;\n  }\n  onDestroy(callback: () => void): void {\n    ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n    this.destroyCbs !.push(callback);\n  }\n}\n\nexport class NgModuleFactory<T> extends viewEngine_NgModuleFactory<T> {\n  constructor(public moduleType: Type<T>) { super(); }\n\n  create(parentInjector: Injector|null): viewEngine_NgModuleRef<T> {\n    return new NgModuleRef(this.moduleType, parentInjector);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\n\ninterface TypeWithMetadata extends Type<any> {\n  decorators?: any[];\n  ctorParameters?: () => any[];\n  propDecorators?: {[field: string]: any};\n}\n\n/**\n * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n * on the type.\n *\n * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n *\n * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n * tree-shaken away during production builds.\n */\nexport function setClassMetadata(\n    type: Type<any>, decorators: any[] | null, ctorParameters: (() => any[]) | null,\n    propDecorators: {[field: string]: any} | null): void {\n  const clazz = type as TypeWithMetadata;\n  if (decorators !== null) {\n    if (clazz.decorators !== undefined) {\n      clazz.decorators.push(...decorators);\n    } else {\n      clazz.decorators = decorators;\n    }\n  }\n  if (ctorParameters !== null) {\n    // Rather than merging, clobber the existing parameters. If other projects exist which use\n    // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n    // but that is vanishingly unlikely.\n    clazz.ctorParameters = ctorParameters;\n  }\n  if (propDecorators !== null) {\n    // The property decorator objects are merged as it is possible different fields have different\n    // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n    // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n    // decorator that's also been downleveled.\n    if (clazz.propDecorators !== undefined) {\n      clazz.propDecorators = {...clazz.propDecorators, ...propDecorators};\n    } else {\n      clazz.propDecorators = propDecorators;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {bindingUpdated, bindingUpdated2, bindingUpdated3, bindingUpdated4, getBinding, updateBinding} from './bindings';\nimport {getBindingRoot, getLView, isCreationMode} from './state';\n\n\n\n/**\n * Bindings for pure functions are stored after regular bindings.\n *\n * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n * ------------------------------------------------------------------------------------------\n * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n * ------------------------------------------------------------------------------------------\n *                    ^                      ^\n *      TView.bindingStartIndex      TView.expandoStartIndex\n *\n * Pure function instructions are given an offset from the binding root. Adding the offset to the\n * binding root gives the first index where the bindings are stored. In component views, the binding\n * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n * any directive instances + any hostVars in directives evaluated before it.\n *\n * See VIEW_DATA.md for more information about host binding resolution.\n */\n\n/**\n * If the value hasn't been saved, calls the pure function to store and return the\n * value. If it has been saved, returns the saved value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn Function that returns a value\n * @param thisArg Optional calling context of pureFn\n * @returns value\n */\nexport function pureFunction0<T>(slotOffset: number, pureFn: () => T, thisArg?: any): T {\n  // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n  const bindingIndex = getBindingRoot() + slotOffset;\n  const lView = getLView();\n  return isCreationMode() ?\n      updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n      getBinding(lView, bindingIndex);\n}\n\n/**\n * If the value of the provided exp has changed, calls the pure function to return\n * an updated value. Or if the value has not changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn Function that returns an updated value\n * @param exp Updated expression value\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nexport function pureFunction1(\n    slotOffset: number, pureFn: (v: any) => any, exp: any, thisArg?: any): any {\n  // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n  const lView = getLView();\n  const bindingIndex = getBindingRoot() + slotOffset;\n  return bindingUpdated(lView, bindingIndex, exp) ?\n      updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n      getBinding(lView, bindingIndex + 1);\n}\n\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nexport function pureFunction2(\n    slotOffset: number, pureFn: (v1: any, v2: any) => any, exp1: any, exp2: any,\n    thisArg?: any): any {\n  // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n  const bindingIndex = getBindingRoot() + slotOffset;\n  const lView = getLView();\n  return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n      updateBinding(\n          lView, bindingIndex + 2,\n          thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n      getBinding(lView, bindingIndex + 2);\n}\n\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nexport function pureFunction3(\n    slotOffset: number, pureFn: (v1: any, v2: any, v3: any) => any, exp1: any, exp2: any, exp3: any,\n    thisArg?: any): any {\n  // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n  const bindingIndex = getBindingRoot() + slotOffset;\n  const lView = getLView();\n  return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n      updateBinding(\n          lView, bindingIndex + 3,\n          thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n      getBinding(lView, bindingIndex + 3);\n}\n\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nexport function pureFunction4(\n    slotOffset: number, pureFn: (v1: any, v2: any, v3: any, v4: any) => any, exp1: any, exp2: any,\n    exp3: any, exp4: any, thisArg?: any): any {\n  // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n  const bindingIndex = getBindingRoot() + slotOffset;\n  const lView = getLView();\n  return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n      updateBinding(\n          lView, bindingIndex + 4,\n          thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n      getBinding(lView, bindingIndex + 4);\n}\n\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nexport function pureFunction5(\n    slotOffset: number, pureFn: (v1: any, v2: any, v3: any, v4: any, v5: any) => any, exp1: any,\n    exp2: any, exp3: any, exp4: any, exp5: any, thisArg?: any): any {\n  // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n  const bindingIndex = getBindingRoot() + slotOffset;\n  const lView = getLView();\n  const different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n  return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n      updateBinding(\n          lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                                             pureFn(exp1, exp2, exp3, exp4, exp5)) :\n      getBinding(lView, bindingIndex + 5);\n}\n\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nexport function pureFunction6(\n    slotOffset: number, pureFn: (v1: any, v2: any, v3: any, v4: any, v5: any, v6: any) => any,\n    exp1: any, exp2: any, exp3: any, exp4: any, exp5: any, exp6: any, thisArg?: any): any {\n  // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n  const bindingIndex = getBindingRoot() + slotOffset;\n  const lView = getLView();\n  const different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n  return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n      updateBinding(\n          lView, bindingIndex + 6, thisArg ?\n              pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n              pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n      getBinding(lView, bindingIndex + 6);\n}\n\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param exp7\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nexport function pureFunction7(\n    slotOffset: number,\n    pureFn: (v1: any, v2: any, v3: any, v4: any, v5: any, v6: any, v7: any) => any, exp1: any,\n    exp2: any, exp3: any, exp4: any, exp5: any, exp6: any, exp7: any, thisArg?: any): any {\n  // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n  const bindingIndex = getBindingRoot() + slotOffset;\n  const lView = getLView();\n  let different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n  return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n      updateBinding(\n          lView, bindingIndex + 7, thisArg ?\n              pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n              pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n      getBinding(lView, bindingIndex + 7);\n}\n\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param exp7\n * @param exp8\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nexport function pureFunction8(\n    slotOffset: number,\n    pureFn: (v1: any, v2: any, v3: any, v4: any, v5: any, v6: any, v7: any, v8: any) => any,\n    exp1: any, exp2: any, exp3: any, exp4: any, exp5: any, exp6: any, exp7: any, exp8: any,\n    thisArg?: any): any {\n  // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n  const bindingIndex = getBindingRoot() + slotOffset;\n  const lView = getLView();\n  const different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n  return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n      updateBinding(\n          lView, bindingIndex + 8, thisArg ?\n              pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n              pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n      getBinding(lView, bindingIndex + 8);\n}\n\n/**\n * pureFunction instruction that can support any number of bindings.\n *\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param slotOffset the offset from binding root to the reserved slot\n * @param pureFn A pure function that takes binding values and builds an object or array\n * containing those values.\n * @param exps An array of binding values\n * @param thisArg Optional calling context of pureFn\n * @returns Updated or cached value\n */\nexport function pureFunctionV(\n    slotOffset: number, pureFn: (...v: any[]) => any, exps: any[], thisArg?: any): any {\n  // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n  let bindingIndex = getBindingRoot() + slotOffset;\n  let different = false;\n  const lView = getLView();\n  for (let i = 0; i < exps.length; i++) {\n    bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n  }\n  return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n                     getBinding(lView, bindingIndex);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {WrappedValue} from '../change_detection/change_detection_util';\nimport {PipeTransform} from '../change_detection/pipe_transform';\n\nimport {load, store} from './instructions';\nimport {PipeDef, PipeDefList} from './interfaces/definition';\nimport {HEADER_OFFSET, TVIEW} from './interfaces/view';\nimport {pureFunction1, pureFunction2, pureFunction3, pureFunction4, pureFunctionV} from './pure_function';\nimport {getBindingRoot, getLView} from './state';\nimport {NO_CHANGE} from './tokens';\n\n\n/**\n * Create a pipe.\n *\n * @param index Pipe index where the pipe will be stored.\n * @param pipeName The name of the pipe\n * @returns T the instance of the pipe.\n */\nexport function pipe(index: number, pipeName: string): any {\n  const tView = getLView()[TVIEW];\n  let pipeDef: PipeDef<any>;\n  const adjustedIndex = index + HEADER_OFFSET;\n\n  if (tView.firstTemplatePass) {\n    pipeDef = getPipeDef(pipeName, tView.pipeRegistry);\n    tView.data[adjustedIndex] = pipeDef;\n    if (pipeDef.onDestroy) {\n      (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [\n       ])).push(adjustedIndex, pipeDef.onDestroy);\n    }\n  } else {\n    pipeDef = tView.data[adjustedIndex] as PipeDef<any>;\n  }\n\n  const pipeInstance = pipeDef.factory(null);\n  store(index, pipeInstance);\n  return pipeInstance;\n}\n\n/**\n * Searches the pipe registry for a pipe with the given name. If one is found,\n * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n *\n * @param name Name of pipe to resolve\n * @param registry Full list of available pipes\n * @returns Matching PipeDef\n */\nfunction getPipeDef(name: string, registry: PipeDefList | null): PipeDef<any> {\n  if (registry) {\n    for (let i = registry.length - 1; i >= 0; i--) {\n      const pipeDef = registry[i];\n      if (name === pipeDef.name) {\n        return pipeDef;\n      }\n    }\n  }\n  throw new Error(`The pipe '${name}' could not be found!`);\n}\n\n/**\n * Invokes a pipe with 1 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space\n * @param v1 1st argument to {@link PipeTransform#transform}.\n */\nexport function pipeBind1(index: number, slotOffset: number, v1: any): any {\n  const pipeInstance = load<PipeTransform>(index);\n  return unwrapValue(\n      isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n                      pipeInstance.transform(v1));\n}\n\n/**\n * Invokes a pipe with 2 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n */\nexport function pipeBind2(index: number, slotOffset: number, v1: any, v2: any): any {\n  const pipeInstance = load<PipeTransform>(index);\n  return unwrapValue(\n      isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n                      pipeInstance.transform(v1, v2));\n}\n\n/**\n * Invokes a pipe with 3 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n * @param v3 4rd argument to {@link PipeTransform#transform}.\n */\nexport function pipeBind3(index: number, slotOffset: number, v1: any, v2: any, v3: any): any {\n  const pipeInstance = load<PipeTransform>(index);\n  return unwrapValue(\n      isPure(index) ? pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n                      pipeInstance.transform(v1, v2, v3));\n}\n\n/**\n * Invokes a pipe with 4 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n * @param v3 3rd argument to {@link PipeTransform#transform}.\n * @param v4 4th argument to {@link PipeTransform#transform}.\n */\nexport function pipeBind4(\n    index: number, slotOffset: number, v1: any, v2: any, v3: any, v4: any): any {\n  const pipeInstance = load<PipeTransform>(index);\n  return unwrapValue(\n      isPure(index) ?\n          pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n          pipeInstance.transform(v1, v2, v3, v4));\n}\n\n/**\n * Invokes a pipe with variable number of arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param slotOffset the offset in the reserved slot space\n * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n */\nexport function pipeBindV(index: number, slotOffset: number, values: any[]): any {\n  const pipeInstance = load<PipeTransform>(index);\n  return unwrapValue(\n      isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n                      pipeInstance.transform.apply(pipeInstance, values));\n}\n\nfunction isPure(index: number): boolean {\n  return (<PipeDef<any>>getLView()[TVIEW].data[index + HEADER_OFFSET]).pure;\n}\n\n/**\n * Unwrap the output of a pipe transformation.\n * In order to trick change detection into considering that the new value is always different from\n * the old one, the old value is overwritten by NO_CHANGE.\n *\n * @param newValue the pipe transformation output.\n */\nfunction unwrapValue(newValue: any): any {\n  if (WrappedValue.isWrapped(newValue)) {\n    newValue = WrappedValue.unwrap(newValue);\n    getLView()[getBindingRoot()] = NO_CHANGE;\n  }\n  return newValue;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/// <reference types=\"rxjs\" />\n\nimport {Subject, Subscription} from 'rxjs';\n\n/**\n * Use in directives and components to emit custom events synchronously\n * or asynchronously, and register handlers for those events by subscribing\n * to an instance.\n *\n * @usageNotes\n *\n * In the following example, a component defines two output properties\n * that create event emitters. When the title is clicked, the emitter\n * emits an open or close event to toggle the current visibility state.\n *\n * ```\n * @Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   @Output() open: EventEmitter<any> = new EventEmitter();\n *   @Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * Access the event object with the `$event` argument passed to the output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * ### Notes\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n *\n * @publicApi\n */\nexport class EventEmitter<T> extends Subject<T> {\n  // TODO: mark this as internal once all the facades are gone\n  // we can't mark it as internal now because EventEmitter exported via @angular/core would not\n  // contain this property making it incompatible with all the code that uses EventEmitter via\n  // facades, which are local to the code and do not have this property stripped.\n  /**\n   * Internal\n   */\n  __isAsync: boolean;  // tslint:disable-line\n\n  /**\n   * Creates an instance of this class that can\n   * deliver events synchronously or asynchronously.\n   *\n   * @param isAsync When true, deliver events asynchronously.\n   *\n   */\n  constructor(isAsync: boolean = false) {\n    super();\n    this.__isAsync = isAsync;\n  }\n\n  /**\n   * Emits an event containing a given value.\n   * @param value The value to emit.\n   */\n  emit(value?: T) { super.next(value); }\n\n  /**\n   * Registers handlers for events emitted by this instance.\n   * @param generatorOrNext When supplied, a custom handler for emitted events.\n   * @param error When supplied, a custom handler for an error notification\n   * from this emitter.\n   * @param complete When supplied, a custom handler for a completion\n   * notification from this emitter.\n   */\n  subscribe(generatorOrNext?: any, error?: any, complete?: any): Subscription {\n    let schedulerFn: (t: any) => any;\n    let errorFn = (err: any): any => null;\n    let completeFn = (): any => null;\n\n    if (generatorOrNext && typeof generatorOrNext === 'object') {\n      schedulerFn = this.__isAsync ? (value: any) => {\n        setTimeout(() => generatorOrNext.next(value));\n      } : (value: any) => { generatorOrNext.next(value); };\n\n      if (generatorOrNext.error) {\n        errorFn = this.__isAsync ? (err) => { setTimeout(() => generatorOrNext.error(err)); } :\n                                   (err) => { generatorOrNext.error(err); };\n      }\n\n      if (generatorOrNext.complete) {\n        completeFn = this.__isAsync ? () => { setTimeout(() => generatorOrNext.complete()); } :\n                                      () => { generatorOrNext.complete(); };\n      }\n    } else {\n      schedulerFn = this.__isAsync ? (value: any) => { setTimeout(() => generatorOrNext(value)); } :\n                                     (value: any) => { generatorOrNext(value); };\n\n      if (error) {\n        errorFn =\n            this.__isAsync ? (err) => { setTimeout(() => error(err)); } : (err) => { error(err); };\n      }\n\n      if (complete) {\n        completeFn =\n            this.__isAsync ? () => { setTimeout(() => complete()); } : () => { complete(); };\n      }\n    }\n\n    const sink = super.subscribe(schedulerFn, errorFn, completeFn);\n\n    if (generatorOrNext instanceof Subscription) {\n      generatorOrNext.add(sink);\n    }\n\n    return sink;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {injectTemplateRef as render3InjectTemplateRef} from '../render3/view_engine_compatibility';\nimport {noop} from '../util/noop';\n\nimport {ElementRef} from './element_ref';\nimport {EmbeddedViewRef} from './view_ref';\n\n\n/**\n * Represents an embedded template that can be used to instantiate embedded views.\n * To instantiate embedded views based on a template, use the `ViewContainerRef`\n * method `createEmbeddedView()`.\n *\n * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n * is injected into the constructor of the directive,\n * using the `TemplateRef` token.\n *\n * You can also use a `Query` to find a `TemplateRef` associated with\n * a component or a directive.\n *\n * @see `ViewContainerRef`\n * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n *\n * @publicApi\n */\nexport abstract class TemplateRef<C> {\n  /**\n   * The anchor element in the parent view for this embedded view.\n   *\n   * The data-binding and injection contexts of embedded views created from this `TemplateRef`\n   * inherit from the contexts of this location.\n   *\n   * Typically new embedded views are attached to the view container of this location, but in\n   * advanced use-cases, the view can be attached to a different container while keeping the\n   * data-binding and injection context from the original location.\n   *\n   */\n  // TODO(i): rename to anchor or location\n  abstract get elementRef(): ElementRef;\n\n  /**\n   * Instantiates an embedded view based on this template,\n   * and attaches it to the view container.\n   * @param context The data-binding context of the embedded view, as declared\n   * in the `<ng-template>` usage.\n   * @returns The new embedded view object.\n   */\n  abstract createEmbeddedView(context: C): EmbeddedViewRef<C>;\n\n  /** @internal */\n  static __NG_ELEMENT_ID__:\n      () => TemplateRef<any>| null = () => SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef)\n}\n\nexport const SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = render3InjectTemplateRef;\nconst SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\nconst SWITCH_TEMPLATE_REF_FACTORY: typeof render3InjectTemplateRef =\n    SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// We are temporarily importing the existing viewEngine_from core so we can be sure we are\n// correctly implementing its interfaces for backwards compatibility.\nimport {Observable} from 'rxjs';\n\nimport {EventEmitter} from '../event_emitter';\nimport {ElementRef as ViewEngine_ElementRef} from '../linker/element_ref';\nimport {QueryList as viewEngine_QueryList} from '../linker/query_list';\nimport {TemplateRef as ViewEngine_TemplateRef} from '../linker/template_ref';\nimport {Type} from '../type';\nimport {getSymbolIterator} from '../util';\n\nimport {assertDefined, assertEqual, assertPreviousIsParent} from './assert';\nimport {getNodeInjectable, locateDirectiveOrProvider} from './di';\nimport {NG_ELEMENT_ID} from './fields';\nimport {store, storeCleanupWithContext} from './instructions';\nimport {unusedValueExportToPlacateAjd as unused1} from './interfaces/definition';\nimport {unusedValueExportToPlacateAjd as unused2} from './interfaces/injector';\nimport {TContainerNode, TElementContainerNode, TElementNode, TNode, TNodeType, unusedValueExportToPlacateAjd as unused3} from './interfaces/node';\nimport {LQueries, unusedValueExportToPlacateAjd as unused4} from './interfaces/query';\nimport {LView, TVIEW} from './interfaces/view';\nimport {getIsParent, getLView, getOrCreateCurrentQueries} from './state';\nimport {flatten, isContentQueryHost} from './util';\nimport {createElementRef, createTemplateRef} from './view_engine_compatibility';\n\nconst unusedValueToPlacateAjd = unused1 + unused2 + unused3 + unused4;\n\n/**\n * A predicate which determines if a given element/directive should be included in the query\n * results.\n */\nexport interface QueryPredicate<T> {\n  /**\n   * If looking for directives then it contains the directive type.\n   */\n  type: Type<T>|null;\n\n  /**\n   * If selector then contains local names to query for.\n   */\n  selector: string[]|null;\n\n  /**\n   * Indicates which token should be read from DI for this query.\n   */\n  read: Type<T>|null;\n}\n\n/**\n * An object representing a query, which is a combination of:\n * - query predicate to determines if a given element/directive should be included in the query\n * - values collected based on a predicate\n * - `QueryList` to which collected values should be reported\n */\nexport interface LQuery<T> {\n  /**\n   * Next query. Used when queries are stored as a linked list in `LQueries`.\n   */\n  next: LQuery<any>|null;\n\n  /**\n   * Destination to which the value should be added.\n   */\n  list: QueryList<T>;\n\n  /**\n   * A predicate which determines if a given element/directive should be included in the query\n   * results.\n   */\n  predicate: QueryPredicate<T>;\n\n  /**\n   * Values which have been located.\n   *\n   * This is what builds up the `QueryList._valuesTree`.\n   */\n  values: any[];\n\n  /**\n   * A pointer to an array that stores collected values from views. This is necessary so we know a\n   * container into which to insert nodes collected from views.\n   */\n  containerValues: any[]|null;\n}\n\nexport class LQueries_ implements LQueries {\n  constructor(\n      public parent: LQueries_|null, private shallow: LQuery<any>|null,\n      private deep: LQuery<any>|null) {}\n\n  track<T>(\n      queryList: viewEngine_QueryList<T>, predicate: Type<T>|string[], descend?: boolean,\n      read?: Type<T>): void {\n    if (descend) {\n      this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n    } else {\n      this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n    }\n  }\n\n  clone(): LQueries { return new LQueries_(this, null, this.deep); }\n\n  container(): LQueries|null {\n    const shallowResults = copyQueriesToContainer(this.shallow);\n    const deepResults = copyQueriesToContainer(this.deep);\n\n    return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n  }\n\n  createView(): LQueries|null {\n    const shallowResults = copyQueriesToView(this.shallow);\n    const deepResults = copyQueriesToView(this.deep);\n\n    return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n  }\n\n  insertView(index: number): void {\n    insertView(index, this.shallow);\n    insertView(index, this.deep);\n  }\n\n  addNode(tNode: TElementNode|TContainerNode|TElementContainerNode): LQueries|null {\n    add(this.deep, tNode);\n\n    if (isContentQueryHost(tNode)) {\n      add(this.shallow, tNode);\n\n      if (tNode.parent && isContentQueryHost(tNode.parent)) {\n        // if node has a content query and parent also has a content query\n        // both queries need to check this node for shallow matches\n        add(this.parent !.shallow, tNode);\n      }\n      return this.parent;\n    }\n\n    isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n    return this;\n  }\n\n  removeView(): void {\n    removeView(this.shallow);\n    removeView(this.deep);\n  }\n}\n\nfunction isRootNodeOfQuery(tNode: TNode) {\n  return tNode.parent === null || isContentQueryHost(tNode.parent);\n}\n\nfunction copyQueriesToContainer(query: LQuery<any>| null): LQuery<any>|null {\n  let result: LQuery<any>|null = null;\n\n  while (query) {\n    const containerValues: any[] = [];  // prepare room for views\n    query.values.push(containerValues);\n    const clonedQuery: LQuery<any> = {\n      next: result,\n      list: query.list,\n      predicate: query.predicate,\n      values: containerValues,\n      containerValues: null\n    };\n    result = clonedQuery;\n    query = query.next;\n  }\n\n  return result;\n}\n\nfunction copyQueriesToView(query: LQuery<any>| null): LQuery<any>|null {\n  let result: LQuery<any>|null = null;\n\n  while (query) {\n    const clonedQuery: LQuery<any> = {\n      next: result,\n      list: query.list,\n      predicate: query.predicate,\n      values: [],\n      containerValues: query.values\n    };\n    result = clonedQuery;\n    query = query.next;\n  }\n\n  return result;\n}\n\nfunction insertView(index: number, query: LQuery<any>| null) {\n  while (query) {\n    ngDevMode &&\n        assertDefined(\n            query.containerValues, 'View queries need to have a pointer to container values.');\n    query.containerValues !.splice(index, 0, query.values);\n    query = query.next;\n  }\n}\n\nfunction removeView(query: LQuery<any>| null) {\n  while (query) {\n    ngDevMode &&\n        assertDefined(\n            query.containerValues, 'View queries need to have a pointer to container values.');\n\n    const containerValues = query.containerValues !;\n    const viewValuesIdx = containerValues.indexOf(query.values);\n    const removed = containerValues.splice(viewValuesIdx, 1);\n\n    // mark a query as dirty only when removed view had matching modes\n    ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n    if (removed[0].length) {\n      query.list.setDirty();\n    }\n\n    query = query.next;\n  }\n}\n\n\n/**\n * Iterates over local names for a given node and returns directive index\n * (or -1 if a local name points to an element).\n *\n * @param tNode static data of a node to check\n * @param selector selector to match\n * @returns directive index, -1 or null if a selector didn't match any of the local names\n */\nfunction getIdxOfMatchingSelector(tNode: TNode, selector: string): number|null {\n  const localNames = tNode.localNames;\n  if (localNames) {\n    for (let i = 0; i < localNames.length; i += 2) {\n      if (localNames[i] === selector) {\n        return localNames[i + 1] as number;\n      }\n    }\n  }\n  return null;\n}\n\n\n// TODO: \"read\" should be an AbstractType (FW-486)\nfunction queryByReadToken(read: any, tNode: TNode, currentView: LView): any {\n  const factoryFn = (read as any)[NG_ELEMENT_ID];\n  if (typeof factoryFn === 'function') {\n    return factoryFn();\n  } else {\n    const matchingIdx =\n        locateDirectiveOrProvider(tNode, currentView, read as Type<any>, false, false);\n    if (matchingIdx !== null) {\n      return getNodeInjectable(\n          currentView[TVIEW].data, currentView, matchingIdx, tNode as TElementNode);\n    }\n  }\n  return null;\n}\n\nfunction queryByTNodeType(tNode: TNode, currentView: LView): any {\n  if (tNode.type === TNodeType.Element || tNode.type === TNodeType.ElementContainer) {\n    return createElementRef(ViewEngine_ElementRef, tNode, currentView);\n  }\n  if (tNode.type === TNodeType.Container) {\n    return createTemplateRef(ViewEngine_TemplateRef, ViewEngine_ElementRef, tNode, currentView);\n  }\n  return null;\n}\n\nfunction queryByTemplateRef(\n    templateRefToken: ViewEngine_TemplateRef<any>, tNode: TNode, currentView: LView,\n    read: any): any {\n  const templateRefResult = (templateRefToken as any)[NG_ELEMENT_ID]();\n  if (read) {\n    return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n  }\n  return templateRefResult;\n}\n\nfunction queryRead(tNode: TNode, currentView: LView, read: any, matchingIdx: number): any {\n  if (read) {\n    return queryByReadToken(read, tNode, currentView);\n  }\n  if (matchingIdx > -1) {\n    return getNodeInjectable(\n        currentView[TVIEW].data, currentView, matchingIdx, tNode as TElementNode);\n  }\n  // if read token and / or strategy is not specified,\n  // detect it using appropriate tNode type\n  return queryByTNodeType(tNode, currentView);\n}\n\nfunction add(\n    query: LQuery<any>| null, tNode: TElementNode | TContainerNode | TElementContainerNode) {\n  const currentView = getLView();\n\n  while (query) {\n    const predicate = query.predicate;\n    const type = predicate.type as any;\n    if (type) {\n      let result = null;\n      if (type === ViewEngine_TemplateRef) {\n        result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n      } else {\n        const matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false, false);\n        if (matchingIdx !== null) {\n          result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n        }\n      }\n      if (result !== null) {\n        addMatch(query, result);\n      }\n    } else {\n      const selector = predicate.selector !;\n      for (let i = 0; i < selector.length; i++) {\n        const matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n        if (matchingIdx !== null) {\n          const result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n          if (result !== null) {\n            addMatch(query, result);\n          }\n        }\n      }\n    }\n    query = query.next;\n  }\n}\n\nfunction addMatch(query: LQuery<any>, matchingValue: any): void {\n  query.values.push(matchingValue);\n  query.list.setDirty();\n}\n\nfunction createPredicate<T>(predicate: Type<T>| string[], read: Type<T>| null): QueryPredicate<T> {\n  const isArray = Array.isArray(predicate);\n  return {\n    type: isArray ? null : predicate as Type<T>,\n    selector: isArray ? predicate as string[] : null,\n    read: read\n  };\n}\n\nfunction createQuery<T>(\n    previous: LQuery<any>| null, queryList: QueryList<T>, predicate: Type<T>| string[],\n    read: Type<T>| null): LQuery<T> {\n  return {\n    next: previous,\n    list: queryList,\n    predicate: createPredicate(predicate, read),\n    values: (queryList as any as QueryList_<T>)._valuesTree,\n    containerValues: null\n  };\n}\n\nclass QueryList_<T>/* implements viewEngine_QueryList<T> */ {\n  readonly dirty = true;\n  readonly changes: Observable<T> = new EventEmitter();\n  private _values: T[] = [];\n  /** @internal */\n  _valuesTree: any[] = [];\n\n  get length(): number { return this._values.length; }\n\n  get first(): T|null {\n    let values = this._values;\n    return values.length ? values[0] : null;\n  }\n\n  get last(): T|null {\n    let values = this._values;\n    return values.length ? values[values.length - 1] : null;\n  }\n\n  /**\n   * See\n   * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n   */\n  map<U>(fn: (item: T, index: number, array: T[]) => U): U[] { return this._values.map(fn); }\n\n  /**\n   * See\n   * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n   */\n  filter(fn: (item: T, index: number, array: T[]) => boolean): T[] {\n    return this._values.filter(fn);\n  }\n\n  /**\n   * See\n   * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n   */\n  find(fn: (item: T, index: number, array: T[]) => boolean): T|undefined {\n    return this._values.find(fn);\n  }\n\n  /**\n   * See\n   * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n   */\n  reduce<U>(fn: (prevValue: U, curValue: T, curIndex: number, array: T[]) => U, init: U): U {\n    return this._values.reduce(fn, init);\n  }\n\n  /**\n   * See\n   * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n   */\n  forEach(fn: (item: T, index: number, array: T[]) => void): void { this._values.forEach(fn); }\n\n  /**\n   * See\n   * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n   */\n  some(fn: (value: T, index: number, array: T[]) => boolean): boolean {\n    return this._values.some(fn);\n  }\n\n  toArray(): T[] { return this._values.slice(0); }\n\n  [getSymbolIterator()](): Iterator<T> { return (this._values as any)[getSymbolIterator()](); }\n\n  toString(): string { return this._values.toString(); }\n\n  reset(res: (any[]|T)[]): void {\n    this._values = flatten(res);\n    (this as{dirty: boolean}).dirty = false;\n  }\n\n  notifyOnChanges(): void { (this.changes as EventEmitter<any>).emit(this); }\n  setDirty(): void { (this as{dirty: boolean}).dirty = true; }\n  destroy(): void {\n    (this.changes as EventEmitter<any>).complete();\n    (this.changes as EventEmitter<any>).unsubscribe();\n  }\n}\n\n// NOTE: this hack is here because IQueryList has private members and therefore\n// it can't be implemented only extended.\nexport type QueryList<T> = viewEngine_QueryList<T>;\nexport const QueryList: typeof viewEngine_QueryList = QueryList_ as any;\n\n/**\n * Creates and returns a QueryList.\n *\n * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n * this is is a content query and the QueryList will be saved later through directiveCreate.\n * @param predicate The type for which the query will search\n * @param descend Whether or not to descend into children\n * @param read What to save in the query\n * @returns QueryList<T>\n */\nexport function query<T>(\n    memoryIndex: number | null, predicate: Type<any>| string[], descend?: boolean,\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read?: any): QueryList<T> {\n  ngDevMode && assertPreviousIsParent(getIsParent());\n  const queryList = new QueryList<T>();\n  const queries = getOrCreateCurrentQueries(LQueries_);\n  queries.track(queryList, predicate, descend, read);\n  storeCleanupWithContext(getLView(), queryList, queryList.destroy);\n  if (memoryIndex != null) {\n    store(memoryIndex, queryList);\n  }\n  return queryList;\n}\n\n/**\n * Refreshes a query by combining matches from all active views and removing matches from deleted\n * views.\n * Returns true if a query got dirty during change detection, false otherwise.\n */\nexport function queryRefresh(queryList: QueryList<any>): boolean {\n  const queryListImpl = (queryList as any as QueryList_<any>);\n  if (queryList.dirty) {\n    queryList.reset(queryListImpl._valuesTree);\n    queryList.notifyOnChanges();\n    return true;\n  }\n  return false;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ElementRef as ViewEngine_ElementRef} from '../linker/element_ref';\nimport {TemplateRef as ViewEngine_TemplateRef} from '../linker/template_ref';\n\nimport {TNode} from './interfaces/node';\nimport {LView} from './interfaces/view';\nimport {createTemplateRef} from './view_engine_compatibility';\n\n\n\n/**\n * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n * `<ng-template>` element.\n */\nexport function templateRefExtractor(tNode: TNode, currentView: LView) {\n  return createTemplateRef(ViewEngine_TemplateRef, ViewEngine_ElementRef, tNode, currentView);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nconst BRAND = '__SANITIZER_TRUSTED_BRAND__';\n\nexport const enum BypassType {\n  Url = 'Url',\n  Html = 'Html',\n  ResourceUrl = 'ResourceUrl',\n  Script = 'Script',\n  Style = 'Style',\n}\n\n/**\n * A branded trusted string used with sanitization.\n *\n * See: {@link TrustedHtmlString}, {@link TrustedResourceUrlString}, {@link TrustedScriptString},\n * {@link TrustedStyleString}, {@link TrustedUrlString}\n */\nexport interface TrustedString extends String { [BRAND]: BypassType; }\n\n/**\n * A branded trusted string used with sanitization of `html` strings.\n *\n * See: {@link bypassSanitizationTrustHtml} and {@link htmlSanitizer}.\n */\nexport interface TrustedHtmlString extends TrustedString { [BRAND]: BypassType.Html; }\n\n/**\n * A branded trusted string used with sanitization of `style` strings.\n *\n * See: {@link bypassSanitizationTrustStyle} and {@link styleSanitizer}.\n */\nexport interface TrustedStyleString extends TrustedString { [BRAND]: BypassType.Style; }\n\n/**\n * A branded trusted string used with sanitization of `url` strings.\n *\n * See: {@link bypassSanitizationTrustScript} and {@link scriptSanitizer}.\n */\nexport interface TrustedScriptString extends TrustedString { [BRAND]: BypassType.Script; }\n\n/**\n * A branded trusted string used with sanitization of `url` strings.\n *\n * See: {@link bypassSanitizationTrustUrl} and {@link urlSanitizer}.\n */\nexport interface TrustedUrlString extends TrustedString { [BRAND]: BypassType.Url; }\n\n/**\n * A branded trusted string used with sanitization of `resourceUrl` strings.\n *\n * See: {@link bypassSanitizationTrustResourceUrl} and {@link resourceUrlSanitizer}.\n */\nexport interface TrustedResourceUrlString extends TrustedString { [BRAND]: BypassType.ResourceUrl; }\n\nexport function allowSanitizationBypass(value: any, type: BypassType): boolean {\n  return (value instanceof String && (value as TrustedStyleString)[BRAND] === type);\n}\n\n/**\n * Mark `html` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n *\n * @param trustedHtml `html` string which needs to be implicitly trusted.\n * @returns a `html` `String` which has been branded to be implicitly trusted.\n */\nexport function bypassSanitizationTrustHtml(trustedHtml: string): TrustedHtmlString {\n  return bypassSanitizationTrustString(trustedHtml, BypassType.Html);\n}\n/**\n * Mark `style` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link styleSanitizer} to be trusted implicitly.\n *\n * @param trustedStyle `style` string which needs to be implicitly trusted.\n * @returns a `style` `String` which has been branded to be implicitly trusted.\n */\nexport function bypassSanitizationTrustStyle(trustedStyle: string): TrustedStyleString {\n  return bypassSanitizationTrustString(trustedStyle, BypassType.Style);\n}\n/**\n * Mark `script` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n *\n * @param trustedScript `script` string which needs to be implicitly trusted.\n * @returns a `script` `String` which has been branded to be implicitly trusted.\n */\nexport function bypassSanitizationTrustScript(trustedScript: string): TrustedScriptString {\n  return bypassSanitizationTrustString(trustedScript, BypassType.Script);\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link urlSanitizer} to be trusted implicitly.\n *\n * @param trustedUrl `url` string which needs to be implicitly trusted.\n * @returns a `url` `String` which has been branded to be implicitly trusted.\n */\nexport function bypassSanitizationTrustUrl(trustedUrl: string): TrustedUrlString {\n  return bypassSanitizationTrustString(trustedUrl, BypassType.Url);\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n *\n * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n * @returns a `url` `String` which has been branded to be implicitly trusted.\n */\nexport function bypassSanitizationTrustResourceUrl(trustedResourceUrl: string):\n    TrustedResourceUrlString {\n  return bypassSanitizationTrustString(trustedResourceUrl, BypassType.ResourceUrl);\n}\n\n\nfunction bypassSanitizationTrustString(\n    trustedString: string, mode: BypassType.Html): TrustedHtmlString;\nfunction bypassSanitizationTrustString(\n    trustedString: string, mode: BypassType.Style): TrustedStyleString;\nfunction bypassSanitizationTrustString(\n    trustedString: string, mode: BypassType.Script): TrustedScriptString;\nfunction bypassSanitizationTrustString(\n    trustedString: string, mode: BypassType.Url): TrustedUrlString;\nfunction bypassSanitizationTrustString(\n    trustedString: string, mode: BypassType.ResourceUrl): TrustedResourceUrlString;\nfunction bypassSanitizationTrustString(trustedString: string, mode: BypassType): TrustedString {\n  const trusted = new String(trustedString) as TrustedString;\n  trusted[BRAND] = mode;\n  return trusted;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isDevMode} from '../is_dev_mode';\nimport {_sanitizeUrl} from './url_sanitizer';\n\n\n/**\n * Regular expression for safe style values.\n *\n * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n *\n * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n * of XSS.\n *\n * The function expression checks only for XSS safety, not for CSS validity.\n *\n * This regular expression was taken from the Closure sanitization library, and augmented for\n * transformation values.\n */\nconst VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\nconst TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\nconst COLOR_FNS = '(?:rgb|hsl)a?';\nconst GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\nconst CSS3_FNS = '(?:calc|attr)';\nconst FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\nconst SAFE_STYLE_VALUE = new RegExp(\n    `^(${VALUES}|` +\n        `(?:${TRANSFORMATION_FNS}|${COLOR_FNS}|${GRADIENTS}|${CSS3_FNS})` +\n        `${FN_ARGS})$`,\n    'g');\n\n/**\n * Matches a `url(...)` value with an arbitrary argument as long as it does\n * not contain parentheses.\n *\n * The URL value still needs to be sanitized separately.\n *\n * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n * by observing whether scroll bars are displayed, or character ranges used by a font face\n * definition.\n *\n * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n * binding a URL value without further cooperation from the page will cause an information leak, and\n * if so, it is just a leak, not a full blown XSS vulnerability.\n *\n * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n * code is permissive and allows URLs that sanitize otherwise.\n */\nconst URL_RE = /^url\\(([^)]+)\\)$/;\n\n/**\n * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n * that neither escape (\\) nor any other character that could result in\n * breaking out of a string parsing context are allowed;\n * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n *\n * This code was taken from the Closure sanitization library.\n */\nfunction hasBalancedQuotes(value: string) {\n  let outsideSingle = true;\n  let outsideDouble = true;\n  for (let i = 0; i < value.length; i++) {\n    const c = value.charAt(i);\n    if (c === '\\'' && outsideDouble) {\n      outsideSingle = !outsideSingle;\n    } else if (c === '\"' && outsideSingle) {\n      outsideDouble = !outsideDouble;\n    }\n  }\n  return outsideSingle && outsideDouble;\n}\n\n/**\n * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n * value) and returns a value that is safe to use in a browser environment.\n */\nexport function _sanitizeStyle(value: string): string {\n  value = String(value).trim();  // Make sure it's actually a string.\n  if (!value) return '';\n\n  // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n  // reasoning behind this.\n  const urlMatch = value.match(URL_RE);\n  if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n      value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n    return value;  // Safe style values.\n  }\n\n  if (isDevMode()) {\n    console.warn(\n        `WARNING: sanitizing unsafe style value ${value} (see http://g.co/ng/security#xss).`);\n  }\n\n  return 'unsafe';\n}\n\n\n/**\n * Used to intercept and sanitize style values before they are written to the renderer.\n *\n * This function is designed to be called in two modes. When a value is not provided\n * then the function will return a boolean whether a property will be sanitized later.\n * If a value is provided then the sanitized version of that will be returned.\n */\nexport interface StyleSanitizeFn {\n  /** This mode is designed to instruct whether the property will be used for sanitization\n   * at a later point */\n  (prop: string): boolean;\n  /** This mode is designed to sanitize the provided value */\n  (prop: string, value: string): string;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {SANITIZER} from '../render3/interfaces/view';\nimport {getLView} from '../render3/state';\nimport {stringify} from '../render3/util';\n\nimport {BypassType, allowSanitizationBypass} from './bypass';\nimport {_sanitizeHtml as _sanitizeHtml} from './html_sanitizer';\nimport {Sanitizer, SecurityContext} from './security';\nimport {StyleSanitizeFn, _sanitizeStyle as _sanitizeStyle} from './style_sanitizer';\nimport {_sanitizeUrl as _sanitizeUrl} from './url_sanitizer';\n\n\n\n/**\n * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n * dangerous content.\n *\n * This method parses the `html` and locates potentially dangerous content (such as urls and\n * javascript) and removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n *\n * @param unsafeHtml untrusted `html`, typically from the user.\n * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n * and urls have been removed.\n */\nexport function sanitizeHtml(unsafeHtml: any): string {\n  const sanitizer = getSanitizer();\n  if (sanitizer) {\n    return sanitizer.sanitize(SecurityContext.HTML, unsafeHtml) || '';\n  }\n  if (allowSanitizationBypass(unsafeHtml, BypassType.Html)) {\n    return unsafeHtml.toString();\n  }\n  return _sanitizeHtml(document, stringify(unsafeHtml));\n}\n\n/**\n * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n * dangerous content.\n *\n * This method parses the `style` and locates potentially dangerous content (such as urls and\n * javascript) and removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n *\n * @param unsafeStyle untrusted `style`, typically from the user.\n * @returns `style` string which is safe to bind to the `style` properties, because all of the\n * dangerous javascript and urls have been removed.\n */\nexport function sanitizeStyle(unsafeStyle: any): string {\n  const sanitizer = getSanitizer();\n  if (sanitizer) {\n    return sanitizer.sanitize(SecurityContext.STYLE, unsafeStyle) || '';\n  }\n  if (allowSanitizationBypass(unsafeStyle, BypassType.Style)) {\n    return unsafeStyle.toString();\n  }\n  return _sanitizeStyle(stringify(unsafeStyle));\n}\n\n/**\n * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n * dangerous\n * content.\n *\n * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n * removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n *\n * @param unsafeUrl untrusted `url`, typically from the user.\n * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * all of the dangerous javascript has been removed.\n */\nexport function sanitizeUrl(unsafeUrl: any): string {\n  const sanitizer = getSanitizer();\n  if (sanitizer) {\n    return sanitizer.sanitize(SecurityContext.URL, unsafeUrl) || '';\n  }\n  if (allowSanitizationBypass(unsafeUrl, BypassType.Url)) {\n    return unsafeUrl.toString();\n  }\n  return _sanitizeUrl(stringify(unsafeUrl));\n}\n\n/**\n * A `url` sanitizer which only lets trusted `url`s through.\n *\n * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n *\n * @param unsafeResourceUrl untrusted `url`, typically from the user.\n * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * only trusted `url`s have been allowed to pass.\n */\nexport function sanitizeResourceUrl(unsafeResourceUrl: any): string {\n  const sanitizer = getSanitizer();\n  if (sanitizer) {\n    return sanitizer.sanitize(SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n  }\n  if (allowSanitizationBypass(unsafeResourceUrl, BypassType.ResourceUrl)) {\n    return unsafeResourceUrl.toString();\n  }\n  throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n}\n\n/**\n * A `script` sanitizer which only lets trusted javascript through.\n *\n * This passes only `script`s marked trusted by calling {@link\n * bypassSanitizationTrustScript}.\n *\n * @param unsafeScript untrusted `script`, typically from the user.\n * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n * because only trusted `scripts` have been allowed to pass.\n */\nexport function sanitizeScript(unsafeScript: any): string {\n  const sanitizer = getSanitizer();\n  if (sanitizer) {\n    return sanitizer.sanitize(SecurityContext.SCRIPT, unsafeScript) || '';\n  }\n  if (allowSanitizationBypass(unsafeScript, BypassType.Script)) {\n    return unsafeScript.toString();\n  }\n  throw new Error('unsafe value used in a script context');\n}\n\n/**\n * The default style sanitizer will handle sanitization for style properties by\n * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n */\nexport const defaultStyleSanitizer = (function(prop: string, value?: string): string | boolean {\n  if (value === undefined) {\n    return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n        prop === 'filter' || prop === 'list-style' || prop === 'list-style-image';\n  }\n\n  return sanitizeStyle(value);\n} as StyleSanitizeFn);\n\nfunction getSanitizer(): Sanitizer|null {\n  const lView = getLView();\n  return lView && lView[SANITIZER];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {defineInjectable, defineInjector,} from '../../di/defs';\nimport {inject} from '../../di/injector_compatibility';\nimport * as r3 from '../index';\nimport * as sanitization from '../../sanitization/sanitization';\n\n\n/**\n * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n *\n * This should be kept up to date with the public exports of @angular/core.\n */\nexport const angularCoreEnv: {[name: string]: Function} = {\n  'ÉµdefineBase': r3.defineBase,\n  'ÉµdefineComponent': r3.defineComponent,\n  'ÉµdefineDirective': r3.defineDirective,\n  'defineInjectable': defineInjectable,\n  'defineInjector': defineInjector,\n  'ÉµdefineNgModule': r3.defineNgModule,\n  'ÉµdefinePipe': r3.definePipe,\n  'ÉµdirectiveInject': r3.directiveInject,\n  'ÉµgetFactoryOf': r3.getFactoryOf,\n  'ÉµgetInheritedFactory': r3.getInheritedFactory,\n  'inject': inject,\n  'ÉµinjectAttribute': r3.injectAttribute,\n  'ÉµtemplateRefExtractor': r3.templateRefExtractor,\n  'ÉµNgOnChangesFeature': r3.NgOnChangesFeature,\n  'ÉµProvidersFeature': r3.ProvidersFeature,\n  'ÉµInheritDefinitionFeature': r3.InheritDefinitionFeature,\n  'ÉµelementAttribute': r3.elementAttribute,\n  'Éµbind': r3.bind,\n  'Éµcontainer': r3.container,\n  'ÉµnextContext': r3.nextContext,\n  'ÉµcontainerRefreshStart': r3.containerRefreshStart,\n  'ÉµcontainerRefreshEnd': r3.containerRefreshEnd,\n  'ÉµloadQueryList': r3.loadQueryList,\n  'ÉµnamespaceHTML': r3.namespaceHTML,\n  'ÉµnamespaceMathML': r3.namespaceMathML,\n  'ÉµnamespaceSVG': r3.namespaceSVG,\n  'ÉµenableBindings': r3.enableBindings,\n  'ÉµdisableBindings': r3.disableBindings,\n  'ÉµallocHostVars': r3.allocHostVars,\n  'ÉµelementStart': r3.elementStart,\n  'ÉµelementEnd': r3.elementEnd,\n  'Éµelement': r3.element,\n  'ÉµelementContainerStart': r3.elementContainerStart,\n  'ÉµelementContainerEnd': r3.elementContainerEnd,\n  'ÉµpureFunction0': r3.pureFunction0,\n  'ÉµpureFunction1': r3.pureFunction1,\n  'ÉµpureFunction2': r3.pureFunction2,\n  'ÉµpureFunction3': r3.pureFunction3,\n  'ÉµpureFunction4': r3.pureFunction4,\n  'ÉµpureFunction5': r3.pureFunction5,\n  'ÉµpureFunction6': r3.pureFunction6,\n  'ÉµpureFunction7': r3.pureFunction7,\n  'ÉµpureFunction8': r3.pureFunction8,\n  'ÉµpureFunctionV': r3.pureFunctionV,\n  'ÉµgetCurrentView': r3.getCurrentView,\n  'ÉµrestoreView': r3.restoreView,\n  'Éµinterpolation1': r3.interpolation1,\n  'Éµinterpolation2': r3.interpolation2,\n  'Éµinterpolation3': r3.interpolation3,\n  'Éµinterpolation4': r3.interpolation4,\n  'Éµinterpolation5': r3.interpolation5,\n  'Éµinterpolation6': r3.interpolation6,\n  'Éµinterpolation7': r3.interpolation7,\n  'Éµinterpolation8': r3.interpolation8,\n  'ÉµinterpolationV': r3.interpolationV,\n  'ÉµelementClassProp': r3.elementClassProp,\n  'Éµlistener': r3.listener,\n  'Éµload': r3.load,\n  'Éµprojection': r3.projection,\n  'ÉµelementProperty': r3.elementProperty,\n  'ÉµcomponentHostSyntheticProperty': r3.componentHostSyntheticProperty,\n  'ÉµpipeBind1': r3.pipeBind1,\n  'ÉµpipeBind2': r3.pipeBind2,\n  'ÉµpipeBind3': r3.pipeBind3,\n  'ÉµpipeBind4': r3.pipeBind4,\n  'ÉµpipeBindV': r3.pipeBindV,\n  'ÉµprojectionDef': r3.projectionDef,\n  'Éµpipe': r3.pipe,\n  'Éµquery': r3.query,\n  'ÉµqueryRefresh': r3.queryRefresh,\n  'ÉµregisterContentQuery': r3.registerContentQuery,\n  'Éµreference': r3.reference,\n  'ÉµelementStyling': r3.elementStyling,\n  'ÉµelementHostAttrs': r3.elementHostAttrs,\n  'ÉµelementStylingMap': r3.elementStylingMap,\n  'ÉµelementStyleProp': r3.elementStyleProp,\n  'ÉµelementStylingApply': r3.elementStylingApply,\n  'Éµtemplate': r3.template,\n  'Éµtext': r3.text,\n  'ÉµtextBinding': r3.textBinding,\n  'ÉµembeddedViewStart': r3.embeddedViewStart,\n  'ÉµembeddedViewEnd': r3.embeddedViewEnd,\n  'Éµi18n': r3.i18n,\n  'Éµi18nAttributes': r3.i18nAttributes,\n  'Éµi18nExp': r3.i18nExp,\n  'Éµi18nStart': r3.i18nStart,\n  'Éµi18nEnd': r3.i18nEnd,\n  'Éµi18nApply': r3.i18nApply,\n  'Éµi18nPostprocess': r3.i18nPostprocess,\n\n  'ÉµsanitizeHtml': sanitization.sanitizeHtml,\n  'ÉµsanitizeStyle': sanitization.sanitizeStyle,\n  'ÉµdefaultStyleSanitizer': sanitization.defaultStyleSanitizer,\n  'ÉµsanitizeResourceUrl': sanitization.sanitizeResourceUrl,\n  'ÉµsanitizeScript': sanitization.sanitizeScript,\n  'ÉµsanitizeUrl': sanitization.sanitizeUrl\n};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModuleFactory as R3NgModuleFactory, NgModuleType} from '../render3/ng_module_ref';\nimport {Type} from '../type';\nimport {stringify} from '../util';\nimport {NgModuleFactory} from './ng_module_factory';\n\n/**\n * Used to load ng module factories.\n *\n * @publicApi\n */\nexport abstract class NgModuleFactoryLoader {\n  abstract load(path: string): Promise<NgModuleFactory<any>>;\n}\n\n/**\n * Map of module-id to the corresponding NgModule.\n * - In pre Ivy we track NgModuleFactory,\n * - In post Ivy we track the NgModuleType\n */\nconst modules = new Map<string, NgModuleFactory<any>|NgModuleType>();\n\n/**\n * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n * @publicApi\n */\nexport function registerModuleFactory(id: string, factory: NgModuleFactory<any>) {\n  const existing = modules.get(id) as NgModuleFactory<any>;\n  assertNotExisting(id, existing && existing.moduleType);\n  modules.set(id, factory);\n}\n\nfunction assertNotExisting(id: string, type: Type<any>| null): void {\n  if (type) {\n    throw new Error(\n        `Duplicate module registered for ${id} - ${stringify(type)} vs ${stringify(type.name)}`);\n  }\n}\n\nexport function registerNgModuleType(id: string, ngModuleType: NgModuleType) {\n  const existing = modules.get(id) as NgModuleType | null;\n  assertNotExisting(id, existing);\n  modules.set(id, ngModuleType);\n}\n\nexport function clearModulesForTest(): void {\n  modules.clear();\n}\n\nexport function getModuleFactory__PRE_R3__(id: string): NgModuleFactory<any> {\n  const factory = modules.get(id) as NgModuleFactory<any>| null;\n  if (!factory) throw noModuleError(id);\n  return factory;\n}\n\nexport function getModuleFactory__POST_R3__(id: string): NgModuleFactory<any> {\n  const type = modules.get(id) as NgModuleType | null;\n  if (!type) throw noModuleError(id);\n  return new R3NgModuleFactory(type);\n}\n\n/**\n * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n * cannot be found.\n * @publicApi\n */\nexport const getModuleFactory: (id: string) => NgModuleFactory<any> = getModuleFactory__PRE_R3__;\n\nfunction noModuleError(id: string, ): Error {\n  return new Error(`No module with ID ${id} loaded`);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @description\n *\n * Represents a type that a Component or other object is instances of.\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n * @publicApi\n */\nexport const Type = Function;\n\nexport function isType(v: any): v is Type<any> {\n  return typeof v === 'function';\n}\n\nexport interface Type<T> extends Function { new (...args: any[]): T; }\n\nexport type Mutable<T extends{[x: string]: any}, K extends string> = {\n  [P in K]: T[P];\n};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type, isType} from '../type';\nimport {global, stringify} from '../util';\nimport {ANNOTATIONS, PARAMETERS, PROP_METADATA} from '../util/decorators';\n\nimport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\nimport {GetterFn, MethodFn, SetterFn} from './types';\n\n\n/**\n * Attention: These regex has to hold even if the code is minified!\n */\nexport const DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nexport const INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\nexport const INHERITED_CLASS_WITH_CTOR =\n    /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n\nexport class ReflectionCapabilities implements PlatformReflectionCapabilities {\n  private _reflect: any;\n\n  constructor(reflect?: any) { this._reflect = reflect || global['Reflect']; }\n\n  isReflectionEnabled(): boolean { return true; }\n\n  factory<T>(t: Type<T>): (args: any[]) => T { return (...args: any[]) => new t(...args); }\n\n  /** @internal */\n  _zipTypesAndAnnotations(paramTypes: any[], paramAnnotations: any[]): any[][] {\n    let result: any[][];\n\n    if (typeof paramTypes === 'undefined') {\n      result = new Array(paramAnnotations.length);\n    } else {\n      result = new Array(paramTypes.length);\n    }\n\n    for (let i = 0; i < result.length; i++) {\n      // TS outputs Object for parameters without types, while Traceur omits\n      // the annotations. For now we preserve the Traceur behavior to aid\n      // migration, but this can be revisited.\n      if (typeof paramTypes === 'undefined') {\n        result[i] = [];\n      } else if (paramTypes[i] != Object) {\n        result[i] = [paramTypes[i]];\n      } else {\n        result[i] = [];\n      }\n      if (paramAnnotations && paramAnnotations[i] != null) {\n        result[i] = result[i].concat(paramAnnotations[i]);\n      }\n    }\n    return result;\n  }\n\n  private _ownParameters(type: Type<any>, parentCtor: any): any[][]|null {\n    const typeStr = type.toString();\n    // If we have no decorators, we only have function.length as metadata.\n    // In that case, to detect whether a child class declared an own constructor or not,\n    // we need to look inside of that constructor to check whether it is\n    // just calling the parent.\n    // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n    // that sets 'design:paramtypes' to []\n    // if a class inherits from another class but has no ctor declared itself.\n    if (DELEGATE_CTOR.exec(typeStr) ||\n        (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n      return null;\n    }\n\n    // Prefer the direct API.\n    if ((<any>type).parameters && (<any>type).parameters !== parentCtor.parameters) {\n      return (<any>type).parameters;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    const tsickleCtorParams = (<any>type).ctorParameters;\n    if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n      // Newer tsickle uses a function closure\n      // Retain the non-function case for compatibility with older tsickle\n      const ctorParameters =\n          typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n      const paramTypes = ctorParameters.map((ctorParam: any) => ctorParam && ctorParam.type);\n      const paramAnnotations = ctorParameters.map(\n          (ctorParam: any) =>\n              ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators));\n      return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n    }\n\n    // API for metadata created by invoking the decorators.\n    const paramAnnotations = type.hasOwnProperty(PARAMETERS) && (type as any)[PARAMETERS];\n    const paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n        this._reflect.getOwnMetadata('design:paramtypes', type);\n    if (paramTypes || paramAnnotations) {\n      return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n    }\n\n    // If a class has no decorators, at least create metadata\n    // based on function.length.\n    // Note: We know that this is a real constructor as we checked\n    // the content of the constructor above.\n    return new Array((<any>type.length)).fill(undefined);\n  }\n\n  parameters(type: Type<any>): any[][] {\n    // Note: only report metadata if we have at least one class decorator\n    // to stay in sync with the static reflector.\n    if (!isType(type)) {\n      return [];\n    }\n    const parentCtor = getParentCtor(type);\n    let parameters = this._ownParameters(type, parentCtor);\n    if (!parameters && parentCtor !== Object) {\n      parameters = this.parameters(parentCtor);\n    }\n    return parameters || [];\n  }\n\n  private _ownAnnotations(typeOrFunc: Type<any>, parentCtor: any): any[]|null {\n    // Prefer the direct API.\n    if ((<any>typeOrFunc).annotations && (<any>typeOrFunc).annotations !== parentCtor.annotations) {\n      let annotations = (<any>typeOrFunc).annotations;\n      if (typeof annotations === 'function' && annotations.annotations) {\n        annotations = annotations.annotations;\n      }\n      return annotations;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    if ((<any>typeOrFunc).decorators && (<any>typeOrFunc).decorators !== parentCtor.decorators) {\n      return convertTsickleDecoratorIntoMetadata((<any>typeOrFunc).decorators);\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n      return (typeOrFunc as any)[ANNOTATIONS];\n    }\n    return null;\n  }\n\n  annotations(typeOrFunc: Type<any>): any[] {\n    if (!isType(typeOrFunc)) {\n      return [];\n    }\n    const parentCtor = getParentCtor(typeOrFunc);\n    const ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n    const parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n    return parentAnnotations.concat(ownAnnotations);\n  }\n\n  private _ownPropMetadata(typeOrFunc: any, parentCtor: any): {[key: string]: any[]}|null {\n    // Prefer the direct API.\n    if ((<any>typeOrFunc).propMetadata &&\n        (<any>typeOrFunc).propMetadata !== parentCtor.propMetadata) {\n      let propMetadata = (<any>typeOrFunc).propMetadata;\n      if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n        propMetadata = propMetadata.propMetadata;\n      }\n      return propMetadata;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    if ((<any>typeOrFunc).propDecorators &&\n        (<any>typeOrFunc).propDecorators !== parentCtor.propDecorators) {\n      const propDecorators = (<any>typeOrFunc).propDecorators;\n      const propMetadata = <{[key: string]: any[]}>{};\n      Object.keys(propDecorators).forEach(prop => {\n        propMetadata[prop] = convertTsickleDecoratorIntoMetadata(propDecorators[prop]);\n      });\n      return propMetadata;\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n      return (typeOrFunc as any)[PROP_METADATA];\n    }\n    return null;\n  }\n\n  propMetadata(typeOrFunc: any): {[key: string]: any[]} {\n    if (!isType(typeOrFunc)) {\n      return {};\n    }\n    const parentCtor = getParentCtor(typeOrFunc);\n    const propMetadata: {[key: string]: any[]} = {};\n    if (parentCtor !== Object) {\n      const parentPropMetadata = this.propMetadata(parentCtor);\n      Object.keys(parentPropMetadata).forEach((propName) => {\n        propMetadata[propName] = parentPropMetadata[propName];\n      });\n    }\n    const ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n    if (ownPropMetadata) {\n      Object.keys(ownPropMetadata).forEach((propName) => {\n        const decorators: any[] = [];\n        if (propMetadata.hasOwnProperty(propName)) {\n          decorators.push(...propMetadata[propName]);\n        }\n        decorators.push(...ownPropMetadata[propName]);\n        propMetadata[propName] = decorators;\n      });\n    }\n    return propMetadata;\n  }\n\n  hasLifecycleHook(type: any, lcProperty: string): boolean {\n    return type instanceof Type && lcProperty in type.prototype;\n  }\n\n  guards(type: any): {[key: string]: any} { return {}; }\n\n  getter(name: string): GetterFn { return <GetterFn>new Function('o', 'return o.' + name + ';'); }\n\n  setter(name: string): SetterFn {\n    return <SetterFn>new Function('o', 'v', 'return o.' + name + ' = v;');\n  }\n\n  method(name: string): MethodFn {\n    const functionBody = `if (!o.${name}) throw new Error('\"${name}\" is undefined');\n        return o.${name}.apply(o, args);`;\n    return <MethodFn>new Function('o', 'args', functionBody);\n  }\n\n  // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n  importUri(type: any): string {\n    // StaticSymbol\n    if (typeof type === 'object' && type['filePath']) {\n      return type['filePath'];\n    }\n    // Runtime type\n    return `./${stringify(type)}`;\n  }\n\n  resourceUri(type: any): string { return `./${stringify(type)}`; }\n\n  resolveIdentifier(name: string, moduleUrl: string, members: string[], runtime: any): any {\n    return runtime;\n  }\n  resolveEnum(enumIdentifier: any, name: string): any { return enumIdentifier[name]; }\n}\n\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations: any[]): any[] {\n  if (!decoratorInvocations) {\n    return [];\n  }\n  return decoratorInvocations.map(decoratorInvocation => {\n    const decoratorType = decoratorInvocation.type;\n    const annotationCls = decoratorType.annotationCls;\n    const annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n    return new annotationCls(...annotationArgs);\n  });\n}\n\nfunction getParentCtor(ctor: Function): Type<any> {\n  const parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n  const parentCtor = parentProto ? parentProto.constructor : null;\n  // Note: We always use `Object` as the null value\n  // to simplify checking later on.\n  return parentCtor || Object;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Host, Inject, Optional, Self, SkipSelf} from '../../di/metadata';\nimport {Attribute} from '../../metadata/di';\nimport {ReflectionCapabilities} from '../../reflection/reflection_capabilities';\nimport {Type} from '../../type';\n\nimport {CompilerFacade, R3DependencyMetadataFacade, getCompilerFacade} from './compiler_facade';\n\nlet _reflect: ReflectionCapabilities|null = null;\n\nexport function getReflect(): ReflectionCapabilities {\n  return (_reflect = _reflect || new ReflectionCapabilities());\n}\n\nexport function reflectDependencies(type: Type<any>): R3DependencyMetadataFacade[] {\n  return convertDependencies(getReflect().parameters(type));\n}\n\nexport function convertDependencies(deps: any[]): R3DependencyMetadataFacade[] {\n  const compiler = getCompilerFacade();\n  return deps.map(dep => reflectDependency(compiler, dep));\n}\n\nfunction reflectDependency(compiler: CompilerFacade, dep: any | any[]): R3DependencyMetadataFacade {\n  const meta: R3DependencyMetadataFacade = {\n    token: null,\n    host: false,\n    optional: false,\n    resolved: compiler.R3ResolvedDependencyType.Token,\n    self: false,\n    skipSelf: false,\n  };\n\n  function setTokenAndResolvedType(token: any): void {\n    meta.resolved = compiler.R3ResolvedDependencyType.Token;\n    meta.token = token;\n  }\n\n  if (Array.isArray(dep)) {\n    if (dep.length === 0) {\n      throw new Error('Dependency array must have arguments.');\n    }\n    for (let j = 0; j < dep.length; j++) {\n      const param = dep[j];\n      if (param === undefined) {\n        // param may be undefined if type of dep is not set by ngtsc\n        continue;\n      } else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n        meta.optional = true;\n      } else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n        meta.skipSelf = true;\n      } else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n        meta.self = true;\n      } else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n        meta.host = true;\n      } else if (param instanceof Inject) {\n        meta.token = param.token;\n      } else if (param instanceof Attribute) {\n        if (param.attributeName === undefined) {\n          throw new Error(`Attribute name must be defined.`);\n        }\n        meta.token = param.attributeName;\n        meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n      } else {\n        setTokenAndResolvedType(param);\n      }\n    }\n  } else {\n    setTokenAndResolvedType(dep);\n  }\n  return meta;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {resolveForwardRef} from '../../di/forward_ref';\nimport {registerNgModuleType} from '../../linker/ng_module_factory_loader';\nimport {Component} from '../../metadata';\nimport {ModuleWithProviders, NgModule, NgModuleDef, NgModuleTransitiveScopes} from '../../metadata/ng_module';\nimport {Type} from '../../type';\nimport {assertDefined} from '../assert';\nimport {getComponentDef, getDirectiveDef, getNgModuleDef, getPipeDef} from '../definition';\nimport {NG_COMPONENT_DEF, NG_DIRECTIVE_DEF, NG_INJECTOR_DEF, NG_MODULE_DEF, NG_PIPE_DEF} from '../fields';\nimport {ComponentDef} from '../interfaces/definition';\nimport {NgModuleType} from '../ng_module_ref';\nimport {stringify} from '../util';\n\nimport {R3InjectorMetadataFacade, getCompilerFacade} from './compiler_facade';\nimport {angularCoreEnv} from './environment';\nimport {reflectDependencies} from './util';\n\nconst EMPTY_ARRAY: Type<any>[] = [];\n\ninterface ModuleQueueItem {\n  moduleType: Type<any>;\n  ngModule: NgModule;\n}\n\nconst moduleQueue: ModuleQueueItem[] = [];\n\n/**\n * Enqueues moduleDef to be checked later to see if scope can be set on its\n * component declarations.\n */\nfunction enqueueModuleForDelayedScoping(moduleType: Type<any>, ngModule: NgModule) {\n  moduleQueue.push({moduleType, ngModule});\n}\n\nlet flushingModuleQueue = false;\n/**\n * Loops over queued module definitions, if a given module definition has all of its\n * declarations resolved, it dequeues that module definition and sets the scope on\n * its declarations.\n */\nexport function flushModuleScopingQueueAsMuchAsPossible() {\n  if (!flushingModuleQueue) {\n    flushingModuleQueue = true;\n    try {\n      for (let i = moduleQueue.length - 1; i >= 0; i--) {\n        const {moduleType, ngModule} = moduleQueue[i];\n\n        if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n          // dequeue\n          moduleQueue.splice(i, 1);\n          setScopeOnDeclaredComponents(moduleType, ngModule);\n        }\n      }\n    } finally {\n      flushingModuleQueue = false;\n    }\n  }\n}\n\n/**\n * Returns truthy if a declaration has resolved. If the declaration happens to be\n * an array of declarations, it will recurse to check each declaration in that array\n * (which may also be arrays).\n */\nfunction isResolvedDeclaration(declaration: any[] | Type<any>): boolean {\n  if (Array.isArray(declaration)) {\n    return declaration.every(isResolvedDeclaration);\n  }\n  return !!resolveForwardRef(declaration);\n}\n\n/**\n * Compiles a module in JIT mode.\n *\n * This function automatically gets called when a class has a `@NgModule` decorator.\n */\nexport function compileNgModule(moduleType: Type<any>, ngModule: NgModule = {}): void {\n  compileNgModuleDefs(moduleType as NgModuleType, ngModule);\n\n  // Because we don't know if all declarations have resolved yet at the moment the\n  // NgModule decorator is executing, we're enqueueing the setting of module scope\n  // on its declarations to be run at a later time when all declarations for the module,\n  // including forward refs, have resolved.\n  enqueueModuleForDelayedScoping(moduleType, ngModule);\n}\n\n/**\n * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n */\nexport function compileNgModuleDefs(moduleType: NgModuleType, ngModule: NgModule): void {\n  ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n  ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n  const declarations: Type<any>[] = flatten(ngModule.declarations || EMPTY_ARRAY);\n\n  let ngModuleDef: any = null;\n  Object.defineProperty(moduleType, NG_MODULE_DEF, {\n    configurable: true,\n    get: () => {\n      if (ngModuleDef === null) {\n        ngModuleDef = getCompilerFacade().compileNgModule(\n            angularCoreEnv, `ng://${moduleType.name}/ngModuleDef.js`, {\n              type: moduleType,\n              bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY, resolveForwardRef),\n              declarations: declarations.map(resolveForwardRef),\n              imports: flatten(ngModule.imports || EMPTY_ARRAY, resolveForwardRef)\n                           .map(expandModuleWithProviders),\n              exports: flatten(ngModule.exports || EMPTY_ARRAY, resolveForwardRef)\n                           .map(expandModuleWithProviders),\n              emitInline: true,\n            });\n      }\n      return ngModuleDef;\n    }\n  });\n  if (ngModule.id) {\n    registerNgModuleType(ngModule.id, moduleType);\n  }\n\n  let ngInjectorDef: any = null;\n  Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n    get: () => {\n      if (ngInjectorDef === null) {\n        ngDevMode && verifySemanticsOfNgModuleDef(moduleType as any as NgModuleType);\n        const meta: R3InjectorMetadataFacade = {\n          name: moduleType.name,\n          type: moduleType,\n          deps: reflectDependencies(moduleType),\n          providers: ngModule.providers || EMPTY_ARRAY,\n          imports: [\n            (ngModule.imports || EMPTY_ARRAY).map(resolveForwardRef),\n            (ngModule.exports || EMPTY_ARRAY).map(resolveForwardRef),\n          ],\n        };\n        ngInjectorDef = getCompilerFacade().compileInjector(\n            angularCoreEnv, `ng://${moduleType.name}/ngInjectorDef.js`, meta);\n      }\n      return ngInjectorDef;\n    },\n    // Make the property configurable in dev mode to allow overriding in tests\n    configurable: !!ngDevMode,\n  });\n}\n\nfunction verifySemanticsOfNgModuleDef(moduleType: NgModuleType): void {\n  if (verifiedNgModule.get(moduleType)) return;\n  verifiedNgModule.set(moduleType, true);\n  moduleType = resolveForwardRef(moduleType);\n  const ngModuleDef = getNgModuleDef(moduleType, true);\n  const errors: string[] = [];\n  ngModuleDef.declarations.forEach(verifyDeclarationsHaveDefinitions);\n  const combinedDeclarations: Type<any>[] = [\n    ...ngModuleDef.declarations.map(resolveForwardRef),  //\n    ...flatten(ngModuleDef.imports.map(computeCombinedExports), resolveForwardRef),\n  ];\n  ngModuleDef.exports.forEach(verifyExportsAreDeclaredOrReExported);\n  ngModuleDef.declarations.forEach(verifyDeclarationIsUnique);\n  ngModuleDef.declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n\n  const ngModule = getAnnotation<NgModule>(moduleType, 'NgModule');\n  if (ngModule) {\n    ngModule.imports &&\n        flatten(ngModule.imports, unwrapModuleWithProvidersImports)\n            .forEach(verifySemanticsOfNgModuleDef);\n    ngModule.bootstrap && ngModule.bootstrap.forEach(verifyComponentIsPartOfNgModule);\n    ngModule.entryComponents && ngModule.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n  }\n\n  // Throw Error if any errors were detected.\n  if (errors.length) {\n    throw new Error(errors.join('\\n'));\n  }\n  ////////////////////////////////////////////////////////////////////////////////////////////////\n  function verifyDeclarationsHaveDefinitions(type: Type<any>): void {\n    type = resolveForwardRef(type);\n    const def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n    if (!def) {\n      errors.push(\n          `Unexpected value '${stringify(type)}' declared by the module '${stringify(moduleType)}'. Please add a @Pipe/@Directive/@Component annotation.`);\n    }\n  }\n\n  function verifyExportsAreDeclaredOrReExported(type: Type<any>) {\n    type = resolveForwardRef(type);\n    const kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n        getPipeDef(type) && 'pipe';\n    if (kind) {\n      // only checked if we are declared as Component, Directive, or Pipe\n      // Modules don't need to be declared or imported.\n      if (combinedDeclarations.lastIndexOf(type) === -1) {\n        // We are exporting something which we don't explicitly declare or import.\n        errors.push(\n            `Can't export ${kind} ${stringify(type)} from ${stringify(moduleType)} as it was neither declared nor imported!`);\n      }\n    }\n  }\n\n  function verifyDeclarationIsUnique(type: Type<any>) {\n    type = resolveForwardRef(type);\n    const existingModule = ownerNgModule.get(type);\n    if (existingModule && existingModule !== moduleType) {\n      const modules = [existingModule, moduleType].map(stringify).sort();\n      errors.push(\n          `Type ${stringify(type)} is part of the declarations of 2 modules: ${modules[0]} and ${modules[1]}! ` +\n          `Please consider moving ${stringify(type)} to a higher module that imports ${modules[0]} and ${modules[1]}. ` +\n          `You can also create a new NgModule that exports and includes ${stringify(type)} then import that NgModule in ${modules[0]} and ${modules[1]}.`);\n    } else {\n      // Mark type as having owner.\n      ownerNgModule.set(type, moduleType);\n    }\n  }\n\n  function verifyComponentIsPartOfNgModule(type: Type<any>) {\n    type = resolveForwardRef(type);\n    const existingModule = ownerNgModule.get(type);\n    if (!existingModule) {\n      errors.push(\n          `Component ${stringify(type)} is not part of any NgModule or the module has not been imported into your module.`);\n    }\n  }\n\n  function verifyComponentEntryComponentsIsPartOfNgModule(type: Type<any>) {\n    type = resolveForwardRef(type);\n    if (getComponentDef(type)) {\n      // We know we are component\n      const component = getAnnotation<Component>(type, 'Component');\n      if (component && component.entryComponents) {\n        component.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n      }\n    }\n  }\n}\n\nfunction unwrapModuleWithProvidersImports(\n    typeOrWithProviders: NgModuleType<any>| {ngModule: NgModuleType<any>}): NgModuleType<any> {\n  typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n  return (typeOrWithProviders as any).ngModule || typeOrWithProviders;\n}\n\nfunction getAnnotation<T>(type: any, name: string): T|null {\n  let annotation: T|null = null;\n  collect(type.__annotations__);\n  collect(type.decorators);\n  return annotation;\n\n  function collect(annotations: any[] | null) {\n    if (annotations) {\n      annotations.forEach(readAnnotation);\n    }\n  }\n\n  function readAnnotation(\n      decorator: {type: {prototype: {ngMetadataName: string}, args: any[]}, args: any}): void {\n    if (!annotation) {\n      const proto = Object.getPrototypeOf(decorator);\n      if (proto.ngMetadataName == name) {\n        annotation = decorator as any;\n      } else if (decorator.type) {\n        const proto = Object.getPrototypeOf(decorator.type);\n        if (proto.ngMetadataName == name) {\n          annotation = decorator.args[0];\n        }\n      }\n    }\n  }\n}\n\n/**\n * Keep track of compiled components. This is needed because in tests we often want to compile the\n * same component with more than one NgModule. This would cause an error unless we reset which\n * NgModule the component belongs to. We keep the list of compiled components here so that the\n * TestBed can reset it later.\n */\nlet ownerNgModule = new Map<Type<any>, NgModuleType<any>>();\nlet verifiedNgModule = new Map<NgModuleType<any>, boolean>();\n\nexport function resetCompiledComponents(): void {\n  ownerNgModule = new Map<Type<any>, NgModuleType<any>>();\n  verifiedNgModule = new Map<NgModuleType<any>, boolean>();\n  moduleQueue.length = 0;\n}\n\n/**\n * Computes the combined declarations of explicit declarations, as well as declarations inherited\n * by\n * traversing the exports of imported modules.\n * @param type\n */\nfunction computeCombinedExports(type: Type<any>): Type<any>[] {\n  type = resolveForwardRef(type);\n  const ngModuleDef = getNgModuleDef(type, true);\n  return [...flatten(ngModuleDef.exports.map((type) => {\n    const ngModuleDef = getNgModuleDef(type);\n    if (ngModuleDef) {\n      verifySemanticsOfNgModuleDef(type as any as NgModuleType);\n      return computeCombinedExports(type);\n    } else {\n      return type;\n    }\n  }))];\n}\n\n/**\n * Some declared components may be compiled asynchronously, and thus may not have their\n * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n * the `ngSelectorScope` property of the declared type.\n */\nfunction setScopeOnDeclaredComponents(moduleType: Type<any>, ngModule: NgModule) {\n  const declarations: Type<any>[] = flatten(ngModule.declarations || EMPTY_ARRAY);\n\n  const transitiveScopes = transitiveScopesFor(moduleType);\n\n  declarations.forEach(declaration => {\n    if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n      // An `ngComponentDef` field exists - go ahead and patch the component directly.\n      const component = declaration as Type<any>& {ngComponentDef: ComponentDef<any>};\n      const componentDef = getComponentDef(component) !;\n      patchComponentDefWithScope(componentDef, transitiveScopes);\n    } else if (\n        !declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n      // Set `ngSelectorScope` for future reference when the component compilation finishes.\n      (declaration as Type<any>& {ngSelectorScope?: any}).ngSelectorScope = moduleType;\n    }\n  });\n}\n\n/**\n * Patch the definition of a component with directives and pipes from the compilation scope of\n * a given module.\n */\nexport function patchComponentDefWithScope<C>(\n    componentDef: ComponentDef<C>, transitiveScopes: NgModuleTransitiveScopes) {\n  componentDef.directiveDefs = () => Array.from(transitiveScopes.compilation.directives)\n                                         .map(dir => getDirectiveDef(dir) || getComponentDef(dir) !)\n                                         .filter(def => !!def);\n  componentDef.pipeDefs = () =>\n      Array.from(transitiveScopes.compilation.pipes).map(pipe => getPipeDef(pipe) !);\n}\n\n/**\n * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n *\n * This operation is memoized and the result is cached on the module's definition. It can be called\n * on modules with components that have not fully compiled yet, but the result should not be used\n * until they have.\n */\nexport function transitiveScopesFor<T>(moduleType: Type<T>): NgModuleTransitiveScopes {\n  if (!isNgModule(moduleType)) {\n    throw new Error(`${moduleType.name} does not have an ngModuleDef`);\n  }\n  const def = getNgModuleDef(moduleType) !;\n\n  if (def.transitiveCompileScopes !== null) {\n    return def.transitiveCompileScopes;\n  }\n\n  const scopes: NgModuleTransitiveScopes = {\n    compilation: {\n      directives: new Set<any>(),\n      pipes: new Set<any>(),\n    },\n    exported: {\n      directives: new Set<any>(),\n      pipes: new Set<any>(),\n    },\n  };\n\n  def.declarations.forEach(declared => {\n    const declaredWithDefs = declared as Type<any>& { ngPipeDef?: any; };\n\n    if (getPipeDef(declaredWithDefs)) {\n      scopes.compilation.pipes.add(declared);\n    } else {\n      // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n      // had its template compiled yet. In either case, it gets added to the compilation's\n      // directives.\n      scopes.compilation.directives.add(declared);\n    }\n  });\n\n  def.imports.forEach(<I>(imported: Type<I>) => {\n    const importedTyped = imported as Type<I>& {\n      // If imported is an @NgModule:\n      ngModuleDef?: NgModuleDef<I>;\n    };\n\n    if (!isNgModule<I>(importedTyped)) {\n      throw new Error(`Importing ${importedTyped.name} which does not have an ngModuleDef`);\n    }\n\n    // When this module imports another, the imported module's exported directives and pipes are\n    // added to the compilation scope of this module.\n    const importedScope = transitiveScopesFor(importedTyped);\n    importedScope.exported.directives.forEach(entry => scopes.compilation.directives.add(entry));\n    importedScope.exported.pipes.forEach(entry => scopes.compilation.pipes.add(entry));\n  });\n\n  def.exports.forEach(<E>(exported: Type<E>) => {\n    const exportedTyped = exported as Type<E>& {\n      // Components, Directives, NgModules, and Pipes can all be exported.\n      ngComponentDef?: any;\n      ngDirectiveDef?: any;\n      ngModuleDef?: NgModuleDef<E>;\n      ngPipeDef?: any;\n    };\n\n    // Either the type is a module, a pipe, or a component/directive (which may not have an\n    // ngComponentDef as it might be compiled asynchronously).\n    if (isNgModule(exportedTyped)) {\n      // When this module exports another, the exported module's exported directives and pipes are\n      // added to both the compilation and exported scopes of this module.\n      const exportedScope = transitiveScopesFor(exportedTyped);\n      exportedScope.exported.directives.forEach(entry => {\n        scopes.compilation.directives.add(entry);\n        scopes.exported.directives.add(entry);\n      });\n      exportedScope.exported.pipes.forEach(entry => {\n        scopes.compilation.pipes.add(entry);\n        scopes.exported.pipes.add(entry);\n      });\n    } else if (getPipeDef(exportedTyped)) {\n      scopes.exported.pipes.add(exportedTyped);\n    } else {\n      scopes.exported.directives.add(exportedTyped);\n    }\n  });\n\n  def.transitiveCompileScopes = scopes;\n  return scopes;\n}\n\nfunction flatten<T>(values: any[], mapFn?: (value: T) => any): Type<T>[] {\n  const out: Type<T>[] = [];\n  values.forEach(value => {\n    if (Array.isArray(value)) {\n      out.push(...flatten<T>(value, mapFn));\n    } else {\n      out.push(mapFn ? mapFn(value) : value);\n    }\n  });\n  return out;\n}\n\nfunction expandModuleWithProviders(value: Type<any>| ModuleWithProviders<{}>): Type<any> {\n  if (isModuleWithProviders(value)) {\n    return value.ngModule;\n  }\n  return value;\n}\n\nfunction isModuleWithProviders(value: any): value is ModuleWithProviders<{}> {\n  return (value as{ngModule?: any}).ngModule !== undefined;\n}\n\nfunction isNgModule<T>(value: Type<T>): value is Type<T>&{ngModuleDef: NgModuleDef<T>} {\n  return !!getNgModuleDef(value);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentType} from '..';\nimport {resolveForwardRef} from '../../di/forward_ref';\nimport {Query} from '../../metadata/di';\nimport {Component, Directive} from '../../metadata/directives';\nimport {componentNeedsResolution, maybeQueueResolutionOfComponentResources} from '../../metadata/resource_loading';\nimport {ViewEncapsulation} from '../../metadata/view';\nimport {Type} from '../../type';\nimport {EMPTY_ARRAY, EMPTY_OBJ} from '../empty';\nimport {NG_COMPONENT_DEF, NG_DIRECTIVE_DEF} from '../fields';\nimport {stringify} from '../util';\n\nimport {R3DirectiveMetadataFacade, getCompilerFacade} from './compiler_facade';\nimport {R3ComponentMetadataFacade, R3QueryMetadataFacade} from './compiler_facade_interface';\nimport {angularCoreEnv} from './environment';\nimport {flushModuleScopingQueueAsMuchAsPossible, patchComponentDefWithScope, transitiveScopesFor} from './module';\nimport {getReflect, reflectDependencies} from './util';\n\n\n\n/**\n * Compile an Angular component according to its decorator metadata, and patch the resulting\n * ngComponentDef onto the component type.\n *\n * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n * until the global queue has been resolved with a call to `resolveComponentResources`.\n */\nexport function compileComponent(type: Type<any>, metadata: Component): void {\n  let ngComponentDef: any = null;\n  // Metadata may have resources which need to be resolved.\n  maybeQueueResolutionOfComponentResources(metadata);\n  Object.defineProperty(type, NG_COMPONENT_DEF, {\n    get: () => {\n      const compiler = getCompilerFacade();\n      if (ngComponentDef === null) {\n        if (componentNeedsResolution(metadata)) {\n          const error = [`Component '${stringify(type)}' is not resolved:`];\n          if (metadata.templateUrl) {\n            error.push(` - templateUrl: ${stringify(metadata.templateUrl)}`);\n          }\n          if (metadata.styleUrls && metadata.styleUrls.length) {\n            error.push(` - styleUrls: ${JSON.stringify(metadata.styleUrls)}`);\n          }\n          error.push(`Did you run and wait for 'resolveComponentResources()'?`);\n          throw new Error(error.join('\\n'));\n        }\n\n        const meta: R3ComponentMetadataFacade = {\n          ...directiveMetadata(type, metadata),\n          template: metadata.template || '',\n          preserveWhitespaces: metadata.preserveWhitespaces || false,\n          styles: metadata.styles || EMPTY_ARRAY,\n          animations: metadata.animations,\n          viewQueries: extractQueriesMetadata(type, getReflect().propMetadata(type), isViewQuery),\n          directives: [],\n          changeDetection: metadata.changeDetection,\n          pipes: new Map(),\n          encapsulation: metadata.encapsulation || ViewEncapsulation.Emulated,\n          interpolation: metadata.interpolation,\n          viewProviders: metadata.viewProviders || null,\n        };\n        ngComponentDef = compiler.compileComponent(\n            angularCoreEnv, `ng://${stringify(type)}/template.html`, meta);\n\n        // When NgModule decorator executed, we enqueued the module definition such that\n        // it would only dequeue and add itself as module scope to all of its declarations,\n        // but only if  if all of its declarations had resolved. This call runs the check\n        // to see if any modules that are in the queue can be dequeued and add scope to\n        // their declarations.\n        flushModuleScopingQueueAsMuchAsPossible();\n\n        // If component compilation is async, then the @NgModule annotation which declares the\n        // component may execute and set an ngSelectorScope property on the component type. This\n        // allows the component to patch itself with directiveDefs from the module after it\n        // finishes compiling.\n        if (hasSelectorScope(type)) {\n          const scopes = transitiveScopesFor(type.ngSelectorScope);\n          patchComponentDefWithScope(ngComponentDef, scopes);\n        }\n      }\n      return ngComponentDef;\n    },\n    // Make the property configurable in dev mode to allow overriding in tests\n    configurable: !!ngDevMode,\n  });\n}\n\nfunction hasSelectorScope<T>(component: Type<T>): component is Type<T>&\n    {ngSelectorScope: Type<any>} {\n  return (component as{ngSelectorScope?: any}).ngSelectorScope !== undefined;\n}\n\n/**\n * Compile an Angular directive according to its decorator metadata, and patch the resulting\n * ngDirectiveDef onto the component type.\n *\n * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n * will resolve when compilation completes and the directive becomes usable.\n */\nexport function compileDirective(type: Type<any>, directive: Directive): void {\n  let ngDirectiveDef: any = null;\n  Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n    get: () => {\n      if (ngDirectiveDef === null) {\n        const facade = directiveMetadata(type as ComponentType<any>, directive);\n        ngDirectiveDef = getCompilerFacade().compileDirective(\n            angularCoreEnv, `ng://${type && type.name}/ngDirectiveDef.js`, facade);\n      }\n      return ngDirectiveDef;\n    },\n    // Make the property configurable in dev mode to allow overriding in tests\n    configurable: !!ngDevMode,\n  });\n}\n\nexport function extendsDirectlyFromObject(type: Type<any>): boolean {\n  return Object.getPrototypeOf(type.prototype) === Object.prototype;\n}\n\n/**\n * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n * `Component`).\n */\nfunction directiveMetadata(type: Type<any>, metadata: Directive): R3DirectiveMetadataFacade {\n  // Reflect inputs and outputs.\n  const propMetadata = getReflect().propMetadata(type);\n\n  return {\n    name: type.name,\n    type: type,\n    typeArgumentCount: 0,\n    selector: metadata.selector !,\n    deps: reflectDependencies(type),\n    host: metadata.host || EMPTY_OBJ,\n    propMetadata: propMetadata,\n    inputs: metadata.inputs || EMPTY_ARRAY,\n    outputs: metadata.outputs || EMPTY_ARRAY,\n    queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n    lifecycle: {\n      usesOnChanges: type.prototype.ngOnChanges !== undefined,\n    },\n    typeSourceSpan: null !,\n    usesInheritance: !extendsDirectlyFromObject(type),\n    exportAs: metadata.exportAs || null,\n    providers: metadata.providers || null,\n  };\n}\n\nfunction convertToR3QueryPredicate(selector: any): any|string[] {\n  return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n}\n\nexport function convertToR3QueryMetadata(propertyName: string, ann: Query): R3QueryMetadataFacade {\n  return {\n    propertyName: propertyName,\n    predicate: convertToR3QueryPredicate(ann.selector),\n    descendants: ann.descendants,\n    first: ann.first,\n    read: ann.read ? ann.read : null\n  };\n}\nfunction extractQueriesMetadata(\n    type: Type<any>, propMetadata: {[key: string]: any[]},\n    isQueryAnn: (ann: any) => ann is Query): R3QueryMetadataFacade[] {\n  const queriesMeta: R3QueryMetadataFacade[] = [];\n  for (const field in propMetadata) {\n    if (propMetadata.hasOwnProperty(field)) {\n      propMetadata[field].forEach(ann => {\n        if (isQueryAnn(ann)) {\n          if (!ann.selector) {\n            throw new Error(\n                `Can't construct a query for the property \"${field}\" of ` +\n                `\"${stringify(type)}\" since the query selector wasn't defined.`);\n          }\n          queriesMeta.push(convertToR3QueryMetadata(field, ann));\n        }\n      });\n    }\n  }\n  return queriesMeta;\n}\n\nfunction isContentQuery(value: any): value is Query {\n  const name = value.ngMetadataName;\n  return name === 'ContentChild' || name === 'ContentChildren';\n}\n\nfunction isViewQuery(value: any): value is Query {\n  const name = value.ngMetadataName;\n  return name === 'ViewChild' || name === 'ViewChildren';\n}\n\nfunction splitByComma(value: string): string[] {\n  return value.split(',').map(piece => piece.trim());\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Pipe} from '../../metadata/directives';\nimport {Type} from '../../type';\nimport {NG_PIPE_DEF} from '../fields';\nimport {stringify} from '../util';\n\nimport {getCompilerFacade} from './compiler_facade';\nimport {angularCoreEnv} from './environment';\nimport {reflectDependencies} from './util';\n\nexport function compilePipe(type: Type<any>, meta: Pipe): void {\n  let ngPipeDef: any = null;\n  Object.defineProperty(type, NG_PIPE_DEF, {\n    get: () => {\n      if (ngPipeDef === null) {\n        ngPipeDef = getCompilerFacade().compilePipe(\n            angularCoreEnv, `ng://${stringify(type)}/ngPipeDef.js`, {\n              type: type,\n              name: type.name,\n              deps: reflectDependencies(type),\n              pipeName: meta.name,\n              pure: meta.pure !== undefined ? meta.pure : true\n            });\n      }\n      return ngPipeDef;\n    },\n    // Make the property configurable in dev mode to allow overriding in tests\n    configurable: !!ngDevMode,\n  });\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy} from '../change_detection/constants';\nimport {Provider} from '../di';\nimport {NG_BASE_DEF} from '../render3/fields';\nimport {compileComponent as render3CompileComponent, compileDirective as render3CompileDirective} from '../render3/jit/directive';\nimport {compilePipe as render3CompilePipe} from '../render3/jit/pipe';\nimport {Type} from '../type';\nimport {TypeDecorator, makeDecorator, makePropDecorator} from '../util/decorators';\nimport {noop} from '../util/noop';\nimport {fillProperties} from '../util/property';\n\nimport {ViewEncapsulation} from './view';\n\n\n\n/**\n * Type of the Directive decorator / constructor function.\n * @publicApi\n */\nexport interface DirectiveDecorator {\n  /**\n   * Marks a class as an Angular directive. You can define your own\n   * directives to attach custom behavior to elements in the DOM.\n   * The options provide configuration metadata that determines\n   * how the directive should be processed, instantiated and used at\n   * runtime.\n   *\n   * Directive classes, like component classes, can implement\n   * [life-cycle hooks](guide/lifecycle-hooks) to influence their configuration and behavior.\n   *\n   *\n   * @usageNotes\n   * To define a directive, mark the class with the decorator and provide metadata.\n   *\n   * ```\n   * import {Directive} from '@angular/core';\n   *\n   * @Directive({\n   *   selector: 'my-directive',\n   * })\n   * export class MyDirective {\n   * ...\n   * }\n   * ```\n   *\n   * ### Declaring directives\n   *\n   * Directives are [declarables](guide/glossary#declarable).\n   * They must be declared by an NgModule\n   * in order to be usable in an app.\n   *\n   * A directive must belong to exactly one NgModule. Do not re-declare\n   * a directive imported from another module.\n   * List the directive class in the `declarations` field of an NgModule.\n   *\n   * ```\n   * declarations: [\n   *  AppComponent,\n   *  MyDirective\n   * ],\n   * ```\n   *\n   * @Annotation\n   */\n  (obj: Directive): TypeDecorator;\n\n  /**\n   * See the `Directive` decorator.\n   */\n  new (obj: Directive): Directive;\n}\n\n/**\n * Directive decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport interface Directive {\n  /**\n   * The CSS selector that identifies this directive in a template\n   * and triggers instantiation of the directive.\n   *\n   * Declare as one of the following:\n   *\n   * - `element-name`: Select by element name.\n   * - `.class`: Select by class name.\n   * - `[attribute]`: Select by attribute name.\n   * - `[attribute=value]`: Select by attribute name and value.\n   * - `:not(sub_selector)`: Select only if the element does not match the `sub_selector`.\n   * - `selector1, selector2`: Select if either `selector1` or `selector2` matches.\n   *\n   * Angular only allows directives to apply on CSS selectors that do not cross\n   * element boundaries.\n   *\n   * For the following template HTML, a directive with an `input[type=text]` selector,\n   * would be instantiated only on the `<input type=\"text\">` element.\n   *\n   * ```html\n   * <form>\n   *   <input type=\"text\">\n   *   <input type=\"radio\">\n   * <form>\n   * ```\n   *\n   */\n  selector?: string;\n\n  /**\n   * Enumerates the set of data-bound input properties for a directive\n   *\n   * Angular automatically updates input properties during change detection.\n   * The `inputs` property defines a set of `directiveProperty` to `bindingProperty`\n   * configuration:\n   *\n   * - `directiveProperty` specifies the component property where the value is written.\n   * - `bindingProperty` specifies the DOM property where the value is read from.\n   *\n   * When `bindingProperty` is not provided, it is assumed to be equal to `directiveProperty`.\n   * @usageNotes\n   *\n   * ### Example\n   *\n   * The following example creates a component with two data-bound properties.\n   *\n   * ```typescript\n   * @Component({\n   *   selector: 'bank-account',\n   *   inputs: ['bankName', 'id: account-id'],\n   *   template: `\n   *     Bank Name: {{bankName}}\n   *     Account Id: {{id}}\n   *   `\n   * })\n   * class BankAccount {\n   *   bankName: string;\n   *   id: string;\n   *\n   * ```\n   *\n   */\n  inputs?: string[];\n\n  /**\n   * Enumerates the set of event-bound output properties.\n   *\n   * When an output property emits an event, an event handler attached to that event\n   * in the template is invoked.\n   *\n   * The `outputs` property defines a set of `directiveProperty` to `bindingProperty`\n   * configuration:\n   *\n   * - `directiveProperty` specifies the component property that emits events.\n   * - `bindingProperty` specifies the DOM property the event handler is attached to.\n   *\n   * @usageNotes\n   *\n   * ### Example\n   *\n   * ```typescript\n   * @Directive({\n   *   selector: 'child-dir',\n   *   exportAs: 'child'\n   * })\n   * class ChildDir {\n   * }\n   *\n   * @Component({\n   *   selector: 'main',\n   *   template: `<child-dir #c=\"child\"></child-dir>`\n   * })\n   * class MainComponent {\n   * }\n   * ```\n   *\n   */\n  outputs?: string[];\n\n  /**\n   * Configures the [injector](guide/glossary#injector) of this\n   * directive or component with a [token](guide/glossary#di-token)\n   * that maps to a [provider](guide/glossary#provider) of a dependency.\n   */\n  providers?: Provider[];\n\n  /**\n   * Defines the name that can be used in the template to assign this directive to a variable.\n   *\n   * @usageNotes\n   *\n   * ### Simple Example\n   *\n   * ```\n   * @Directive({\n   *   selector: 'child-dir',\n   *   exportAs: 'child'\n   * })\n   * class ChildDir {\n   * }\n   *\n   * @Component({\n   *   selector: 'main',\n   *   template: `<child-dir #c=\"child\"></child-dir>`\n   * })\n   * class MainComponent {\n   * }\n   * ```\n   *\n   */\n  exportAs?: string;\n\n  /**\n   * Configures the queries that will be injected into the directive.\n   *\n   * Content queries are set before the `ngAfterContentInit` callback is called.\n   * View queries are set before the `ngAfterViewInit` callback is called.\n   *\n   * @usageNotes\n   *\n   * ### Example\n   *\n   * The following example shows how queries are defined\n   * and when their results are available in lifecycle hooks:\n   *\n   * ```\n   * @Component({\n   *   selector: 'someDir',\n   *   queries: {\n   *     contentChildren: new ContentChildren(ChildDirective),\n   *     viewChildren: new ViewChildren(ChildDirective)\n   *   },\n   *   template: '<child-directive></child-directive>'\n   * })\n   * class SomeDir {\n   *   contentChildren: QueryList<ChildDirective>,\n   *   viewChildren: QueryList<ChildDirective>\n   *\n   *   ngAfterContentInit() {\n   *     // contentChildren is set\n   *   }\n   *\n   *   ngAfterViewInit() {\n   *     // viewChildren is set\n   *   }\n   * }\n   * ```\n   *\n   * @Annotation\n   */\n  queries?: {[key: string]: any};\n\n  /**\n   * Maps class properties to host element bindings for properties,\n   * attributes, and events, using a set of key-value pairs.\n   *\n   * Angular automatically checks host property bindings during change detection.\n   * If a binding changes, Angular updates the directive's host element.\n   *\n   * When the key is a property of the host element, the property value is\n   * the propagated to the specified DOM property.\n   *\n   * When the key is a static attribute in the DOM, the attribute value\n   * is propagated to the specified property in the host element.\n   *\n   * For event handling:\n   * - The key is the DOM event that the directive listens to.\n   * To listen to global events, add the target to the event name.\n   * The target can be `window`, `document` or `body`.\n   * - The value is the statement to execute when the event occurs. If the\n   * statement evaluates to `false`, then `preventDefault` is applied on the DOM\n   * event. A handler method can refer to the `$event` local variable.\n   *\n   */\n  host?: {[key: string]: string};\n\n  /**\n   * If true, this directive/component will be skipped by the AOT compiler and so will always be\n   * compiled using JIT.\n   *\n   * This exists to support future Ivy work and has no effect currently.\n   */\n  jit?: true;\n}\n\n/**\n * Type of the Directive metadata.\n *\n * @publicApi\n */\nexport const Directive: DirectiveDecorator = makeDecorator(\n    'Directive', (dir: Directive = {}) => dir, undefined, undefined,\n    (type: Type<any>, meta: Directive) => SWITCH_COMPILE_DIRECTIVE(type, meta));\n\n/**\n * Component decorator interface\n *\n * @publicApi\n */\nexport interface ComponentDecorator {\n  /**\n   * Decorator that marks a class as an Angular component and provides configuration\n   * metadata that determines how the component should be processed,\n   * instantiated, and used at runtime.\n   *\n   * Components are the most basic UI building block of an Angular app.\n   * An Angular app contains a tree of Angular components.\n   *\n   * Angular components are a subset of directives, always associated with a template.\n   * Unlike other directives, only one component can be instantiated per an element in a template.\n   *\n   * A component must belong to an NgModule in order for it to be available\n   * to another component or application. To make it a member of an NgModule,\n   * list it in the `declarations` field of the `NgModule` metadata.\n   *\n   * Note that, in addition to these options for configuring a directive,\n   * you can control a component's runtime behavior by implementing\n   * life-cycle hooks. For more information, see the\n   * [Lifecycle Hooks](guide/lifecycle-hooks) guide.\n   *\n   * @usageNotes\n   *\n   * ### Setting component inputs\n   *\n   * The following example creates a component with two data-bound properties,\n   * specified by the `inputs` value.\n   *\n   * <code-example path=\"core/ts/metadata/directives.ts\" region=\"component-input\">\n   * </code-example>\n   *\n   *\n   * ### Setting component outputs\n   *\n   * The following example shows two event emitters that emit on an interval. One\n   * emits an output every second, while the other emits every five seconds.\n   *\n   * {@example core/ts/metadata/directives.ts region='component-output-interval'}\n   *\n   * ### Injecting a class with a view provider\n   *\n   * The following simple example injects a class into a component\n   * using the view provider specified in component metadata:\n   *\n   * ```\n   * class Greeter {\n   *    greet(name:string) {\n   *      return 'Hello ' + name + '!';\n   *    }\n   * }\n   *\n   * @Directive({\n   *   selector: 'needs-greeter'\n   * })\n   * class NeedsGreeter {\n   *   greeter:Greeter;\n   *\n   *   constructor(greeter:Greeter) {\n   *     this.greeter = greeter;\n   *   }\n   * }\n   *\n   * @Component({\n   *   selector: 'greet',\n   *   viewProviders: [\n   *     Greeter\n   *   ],\n   *   template: `<needs-greeter></needs-greeter>`\n   * })\n   * class HelloWorld {\n   * }\n   *\n   * ```\n   *\n   * ### Preserving whitespace\n   *\n   * Removing whitespace can greatly reduce AOT-generated code size and speed up view creation.\n   * As of Angular 6, the default for `preserveWhitespaces` is false (whitespace is removed).\n   * To change the default setting for all components in your application, set\n   * the `preserveWhitespaces` option of the AOT compiler.\n   *\n   * By default, the AOT compiler removes whitespace characters as follows:\n   * * Trims all whitespaces at the beginning and the end of a template.\n   * * Removes whitespace-only text nodes. For example,\n   *\n   * ```\n   * <button>Action 1</button>  <button>Action 2</button>\n   * ```\n   *\n   * becomes:\n   *\n   * ```\n   * <button>Action 1</button><button>Action 2</button>\n   * ```\n   *\n   * * Replaces a series of whitespace characters in text nodes with a single space.\n   * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n   * * Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n   * where whitespace characters are significant.\n   *\n   * Note that these transformations can influence DOM nodes layout, although impact\n   * should be minimal.\n   *\n   * You can override the default behavior to preserve whitespace characters\n   * in certain fragments of a template. For example, you can exclude an entire\n   * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n   *\n   * ```html\n   * <div ngPreserveWhitespaces>\n   *     whitespaces are preserved here\n   *     <span>    and here </span>\n   * </div>\n   * ```\n   *\n   * You can force a single space to be preserved in a text node by using `&ngsp;`,\n   * which is replaced with a space character by Angular's template\n   * compiler:\n   *\n   * ```html\n   * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n   * <!-->compiled to be equivalent to:</>\n   *  <a>Spaces</a> <a>between</a> <a>links.</a>\n   * ```\n   *\n   * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n   * the `preserveWhitespaces` option is set to `false`.\n   *\n   * ```html\n   * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n   * <!-->compiled to be equivalent to:</>\n   *  <a>Spaces</a> <a>between</a> <a>links.</a>\n   * ```\n   *\n   * To preserve sequences of whitespace characters, use the\n   * `ngPreserveWhitespaces` attribute.\n   *\n   * @Annotation\n   */\n  (obj: Component): TypeDecorator;\n  /**\n   * See the `Component` decorator.\n   */\n  new (obj: Component): Component;\n}\n\n/**\n * Supplies configuration metadata for an Angular component.\n *\n * @publicApi\n */\nexport interface Component extends Directive {\n  /**\n   * The change-detection strategy to use for this component.\n   *\n   * When a component is instantiated, Angular creates a change detector,\n   * which is responsible for propagating the component's bindings.\n   * The strategy is one of:\n   * - `ChangeDetectionStrategy#OnPush` sets the strategy to `CheckOnce` (on demand).\n   * - `ChangeDetectionStrategy#Default` sets the strategy to `CheckAlways`.\n   */\n  changeDetection?: ChangeDetectionStrategy;\n\n  /**\n   * Defines the set of injectable objects that are visible to its view DOM children.\n   * See [example](#injecting-a-class-with-a-view-provider).\n   *\n   */\n  viewProviders?: Provider[];\n\n  /**\n   * The module ID of the module that contains the component.\n   * The component must be able to resolve relative URLs for templates and styles.\n   * SystemJS exposes the `__moduleName` variable within each module.\n   * In CommonJS, this can  be set to `module.id`.\n   *\n   */\n  moduleId?: string;\n\n  /**\n   * The relative path or absolute URL of a template file for an Angular component.\n   * If provided, do not supply an inline template using `template`.\n   *\n   */\n  templateUrl?: string;\n\n  /**\n   * An inline template for an Angular component. If provided,\n   * do not supply a template file using `templateUrl`.\n   *\n   */\n  template?: string;\n\n  /**\n   * One or more relative paths or absolute URLs for files containing CSS stylesheets to use\n   * in this component.\n   */\n  styleUrls?: string[];\n\n  /**\n   * One or more inline CSS stylesheets to use\n   * in this component.\n   */\n  styles?: string[];\n\n  /**\n   * One or more animation `trigger()` calls, containing\n   * `state()` and `transition()` definitions.\n   * See the [Animations guide](/guide/animations) and animations API documentation.\n   *\n   */\n  animations?: any[];\n\n  /**\n   * An encapsulation policy for the template and CSS styles. One of:\n   * - `ViewEncapsulation.Native`: Deprecated. Use `ViewEncapsulation.ShadowDom` instead.\n   * - `ViewEncapsulation.Emulated`: Use shimmed CSS that\n   * emulates the native behavior.\n   * - `ViewEncapsulation.None`: Use global CSS without any\n   * encapsulation.\n   * - `ViewEncapsulation.ShadowDom`: Use Shadow DOM v1 to encapsulate styles.\n   *\n   * If not supplied, the value is taken from `CompilerOptions`. The default compiler option is\n   * `ViewEncapsulation.Emulated`.\n   *\n   * If the policy is set to `ViewEncapsulation.Emulated` and the component has no `styles`\n   * or `styleUrls` specified, the policy is automatically switched to `ViewEncapsulation.None`.\n   */\n  encapsulation?: ViewEncapsulation;\n\n  /**\n   * Overrides the default encapsulation start and end delimiters (`{{` and `}}`)\n   */\n  interpolation?: [string, string];\n\n  /**\n   * A set of components that should be compiled along with\n   * this component. For each component listed here,\n   * Angular creates a {@link ComponentFactory} and stores it in the\n   * {@link ComponentFactoryResolver}.\n   */\n  entryComponents?: Array<Type<any>|any[]>;\n\n  /**\n   * True to preserve or false to remove potentially superfluous whitespace characters\n   * from the compiled template. Whitespace characters are those matching the `\\s`\n   * character class in JavaScript regular expressions. Default is false, unless\n   * overridden in compiler options.\n   */\n  preserveWhitespaces?: boolean;\n}\n\n/**\n * Component decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const Component: ComponentDecorator = makeDecorator(\n    'Component', (c: Component = {}) => ({changeDetection: ChangeDetectionStrategy.Default, ...c}),\n    Directive, undefined,\n    (type: Type<any>, meta: Component) => SWITCH_COMPILE_COMPONENT(type, meta));\n\n/**\n * Type of the Pipe decorator / constructor function.\n *\n * @publicApi\n */\nexport interface PipeDecorator {\n  /**\n   *\n   * Decorator that marks a class as pipe and supplies configuration metadata.\n   *\n   * A pipe class must implement the `PipeTransform` interface.\n   * For example, if the name is \"myPipe\", use a template binding expression\n   * such as the following:\n   *\n   * ```\n   * {{ exp | myPipe }}\n   * ```\n   *\n   * The result of the expression is passed to the pipe's `transform()` method.\n   *\n   * A pipe must belong to an NgModule in order for it to be available\n   * to a template. To make it a member of an NgModule,\n   * list it in the `declarations` field of the `NgModule` metadata.\n   *\n   */\n  (obj: Pipe): TypeDecorator;\n\n  /**\n   * See the `Pipe` decorator.\n   */\n  new (obj: Pipe): Pipe;\n}\n\n/**\n * Type of the Pipe metadata.\n *\n * @publicApi\n */\nexport interface Pipe {\n  /**\n   * The pipe name to use in template bindings.\n   *\n   */\n  name: string;\n\n  /**\n   * When true, the pipe is pure, meaning that the\n   * `transform()` method is invoked only when its input arguments\n   * change. Pipes are pure by default.\n   *\n   * If the pipe has internal state (that is, the result\n   * depends on state other than its arguments), set `pure` to false.\n   * In this case, the pipe is invoked on each change-detection cycle,\n   * even if the arguments have not changed.\n   */\n  pure?: boolean;\n}\n\n/**\n * @Annotation\n * @publicApi\n */\nexport const Pipe: PipeDecorator = makeDecorator(\n    'Pipe', (p: Pipe) => ({pure: true, ...p}), undefined, undefined,\n    (type: Type<any>, meta: Pipe) => SWITCH_COMPILE_PIPE(type, meta));\n\n\n/**\n * @publicApi\n */\nexport interface InputDecorator {\n  /**\n  * Decorator that marks a class field as an input property and supplies configuration metadata.\n  * The input property is bound to a DOM property in the template. During change detection,\n  * Angular automatically updates the data property with the DOM property's value.\n  *\n  * @usageNotes\n  *\n  * You can supply an optional name to use in templates when the\n  * component is instantiated, that maps to the\n  * name of the bound property. By default, the original\n  * name of the bound property is used for input binding.\n  *\n  * The following example creates a component with two input properties,\n  * one of which is given a special binding name.\n  *\n  * ```typescript\n  * @Component({\n  *   selector: 'bank-account',\n  *   template: `\n  *     Bank Name: {{bankName}}\n  *     Account Id: {{id}}\n  *   `\n  * })\n  * class BankAccount {\n  *   // This property is bound using its original name.\n  *   @Input() bankName: string;\n  *   // this property value is bound to a different property name\n  *   // when this component is instantiated in a template.\n  *   @Input('account-id') id: string;\n  *\n  *   // this property is not bound, and is not automatically updated by Angular\n  *   normalizedBankName: string;\n  * }\n  *\n  * @Component({\n  *   selector: 'app',\n  *   template: `\n  *     <bank-account bankName=\"RBC\" account-id=\"4747\"></bank-account>\n  *   `\n  * })\n  * class App {}\n  * ```\n  */\n  (bindingPropertyName?: string): any;\n  new (bindingPropertyName?: string): any;\n}\n\n/**\n * Type of metadata for an `Input` property.\n *\n * @publicApi\n */\nexport interface Input {\n  /**\n   * The name of the DOM property to which the input property is bound.\n   */\n  bindingPropertyName?: string;\n}\n\nconst initializeBaseDef = (target: any): void => {\n  const constructor = target.constructor;\n  const inheritedBaseDef = constructor.ngBaseDef;\n\n  const baseDef = constructor.ngBaseDef = {\n    inputs: {},\n    outputs: {},\n    declaredInputs: {},\n  };\n\n  if (inheritedBaseDef) {\n    fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n    fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n    fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n  }\n};\n\n/**\n * Does the work of creating the `ngBaseDef` property for the `Input` and `Output` decorators.\n * @param key \"inputs\" or \"outputs\"\n */\nconst updateBaseDefFromIOProp = (getProp: (baseDef: {inputs?: any, outputs?: any}) => any) =>\n    (target: any, name: string, ...args: any[]) => {\n      const constructor = target.constructor;\n\n      if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n        initializeBaseDef(target);\n      }\n\n      const baseDef = constructor.ngBaseDef;\n      const defProp = getProp(baseDef);\n      defProp[name] = args[0];\n    };\n\n/**\n * @Annotation\n * @publicApi\n */\nexport const Input: InputDecorator = makePropDecorator(\n    'Input', (bindingPropertyName?: string) => ({bindingPropertyName}), undefined,\n    updateBaseDefFromIOProp(baseDef => baseDef.inputs || {}));\n\n/**\n * Type of the Output decorator / constructor function.\n *\n * @publicApi\n */\nexport interface OutputDecorator {\n  /**\n  * Decorator that marks a class field as an output property and supplies configuration metadata.\n  * The DOM property bound to the output property is automatically updated during change detection.\n  *\n  * @usageNotes\n  *\n  * You can supply an optional name to use in templates when the\n  * component is instantiated, that maps to the\n  * name of the bound property. By default, the original\n  * name of the bound property is used for output binding.\n  *\n  * See `Input` decorator for an example of providing a binding name.\n  *\n  */\n  (bindingPropertyName?: string): any;\n  new (bindingPropertyName?: string): any;\n}\n\n/**\n * Type of the Output metadata.\n *\n * @publicApi\n */\nexport interface Output {\n  /**\n  * The name of the DOM property to which the output property is bound.\n  */\n  bindingPropertyName?: string;\n}\n\n/**\n * @Annotation\n * @publicApi\n */\nexport const Output: OutputDecorator = makePropDecorator(\n    'Output', (bindingPropertyName?: string) => ({bindingPropertyName}), undefined,\n    updateBaseDefFromIOProp(baseDef => baseDef.outputs || {}));\n\n\n\n/**\n * Type of the HostBinding decorator / constructor function.\n *\n * @publicApi\n */\nexport interface HostBindingDecorator {\n  /**\n   * Decorator that marks a DOM property as a host-binding property and supplies configuration\n   * metadata.\n   * Angular automatically checks host property bindings during change detection, and\n   * if a binding changes it updates the host element of the directive.\n   *\n   * @usageNotes\n   *\n   * The following example creates a directive that sets the `valid` and `invalid`\n   * properties on the DOM element that has an `ngModel` directive on it.\n   *\n   * ```typescript\n   * @Directive({selector: '[ngModel]'})\n   * class NgModelStatus {\n   *   constructor(public control: NgModel) {}\n   *   @HostBinding('class.valid') get valid() { return this.control.valid; }\n   *   @HostBinding('class.invalid') get invalid() { return this.control.invalid; }\n   * }\n   *\n   * @Component({\n   *   selector: 'app',\n   *   template: `<input [(ngModel)]=\"prop\">`,\n   * })\n   * class App {\n   *   prop;\n   * }\n   * ```\n   *\n   */\n  (hostPropertyName?: string): any;\n  new (hostPropertyName?: string): any;\n}\n\n/**\n * Type of the HostBinding metadata.\n *\n * @publicApi\n */\nexport interface HostBinding {\n  /**\n   * The DOM property that is bound to a data property.\n   */\n  hostPropertyName?: string;\n}\n\n/**\n * @Annotation\n * @publicApi\n */\nexport const HostBinding: HostBindingDecorator =\n    makePropDecorator('HostBinding', (hostPropertyName?: string) => ({hostPropertyName}));\n\n\n/**\n * Type of the HostListener decorator / constructor function.\n *\n * @publicApi\n */\nexport interface HostListenerDecorator {\n  /**\n   * Decorator that declares a DOM event to listen for,\n   * and provides a handler method to run when that event occurs.\n   */\n  (eventName: string, args?: string[]): any;\n  new (eventName: string, args?: string[]): any;\n}\n\n/**\n * Type of the HostListener metadata.\n *\n * @publicApi\n */\nexport interface HostListener {\n  /**\n   * The CSS event to listen for.\n   */\n  eventName?: string;\n  /**\n   * A set of arguments to pass to the handler method when the event occurs.\n   */\n  args?: string[];\n}\n\n/**\n * Binds a CSS event to a host listener and supplies configuration metadata.\n * Angular invokes the supplied handler method when the host element emits the specified event,\n * and updates the bound element with the result.\n * If the handler method returns false, applies `preventDefault` on the bound element.\n *\n * @usageNotes\n *\n * The following example declares a directive\n * that attaches a click listener to a button and counts clicks.\n *\n * ```\n * @Directive({selector: 'button[counting]'})\n * class CountClicks {\n *   numberOfClicks = 0;\n *\n *   @HostListener('click', ['$event.target'])\n *   onClick(btn) {\n *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n *  }\n * }\n *\n * @Component({\n *   selector: 'app',\n *   template: '<button counting>Increment</button>',\n * })\n * class App {}\n * ```\n *\n * @Annotation\n * @publicApi\n */\nexport const HostListener: HostListenerDecorator =\n    makePropDecorator('HostListener', (eventName?: string, args?: string[]) => ({eventName, args}));\n\n\n\nexport const SWITCH_COMPILE_COMPONENT__POST_R3__ = render3CompileComponent;\nexport const SWITCH_COMPILE_DIRECTIVE__POST_R3__ = render3CompileDirective;\nexport const SWITCH_COMPILE_PIPE__POST_R3__ = render3CompilePipe;\n\nconst SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\nconst SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\nconst SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n\nconst SWITCH_COMPILE_COMPONENT: typeof render3CompileComponent = SWITCH_COMPILE_COMPONENT__PRE_R3__;\nconst SWITCH_COMPILE_DIRECTIVE: typeof render3CompileDirective = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\nconst SWITCH_COMPILE_PIPE: typeof render3CompilePipe = SWITCH_COMPILE_PIPE__PRE_R3__;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ReflectionCapabilities} from '../reflection/reflection_capabilities';\nimport {Type} from '../type';\nimport {getClosureSafeProperty} from '../util/property';\n\nimport {inject, injectArgs} from './injector_compatibility';\nimport {ClassSansProvider, ConstructorSansProvider, ExistingSansProvider, FactorySansProvider, StaticClassSansProvider, ValueProvider, ValueSansProvider} from './provider';\n\nconst USE_VALUE =\n    getClosureSafeProperty<ValueProvider>({provide: String, useValue: getClosureSafeProperty});\nconst EMPTY_ARRAY: any[] = [];\n\nexport function convertInjectableProviderToFactory(\n    type: Type<any>, provider?: ValueSansProvider | ExistingSansProvider | StaticClassSansProvider |\n        ConstructorSansProvider | FactorySansProvider | ClassSansProvider): () => any {\n  if (!provider) {\n    const reflectionCapabilities = new ReflectionCapabilities();\n    const deps = reflectionCapabilities.parameters(type);\n    // TODO - convert to flags.\n    return () => new type(...injectArgs(deps as any[]));\n  }\n\n  if (USE_VALUE in provider) {\n    const valueProvider = (provider as ValueSansProvider);\n    return () => valueProvider.useValue;\n  } else if ((provider as ExistingSansProvider).useExisting) {\n    const existingProvider = (provider as ExistingSansProvider);\n    return () => inject(existingProvider.useExisting);\n  } else if ((provider as FactorySansProvider).useFactory) {\n    const factoryProvider = (provider as FactorySansProvider);\n    return () => factoryProvider.useFactory(...injectArgs(factoryProvider.deps || EMPTY_ARRAY));\n  } else if ((provider as StaticClassSansProvider | ClassSansProvider).useClass) {\n    const classProvider = (provider as StaticClassSansProvider | ClassSansProvider);\n    let deps = (provider as StaticClassSansProvider).deps;\n    if (!deps) {\n      const reflectionCapabilities = new ReflectionCapabilities();\n      deps = reflectionCapabilities.parameters(type);\n    }\n    return () => new classProvider.useClass(...injectArgs(deps));\n  } else {\n    let deps = (provider as ConstructorSansProvider).deps;\n    if (!deps) {\n      const reflectionCapabilities = new ReflectionCapabilities();\n      deps = reflectionCapabilities.parameters(type);\n    }\n    return () => new type(...injectArgs(deps !));\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ApplicationRef} from '../application_ref';\nimport {InjectorType, defineInjector} from '../di/defs';\nimport {Provider} from '../di/provider';\nimport {convertInjectableProviderToFactory} from '../di/util';\nimport {NgModuleType} from '../render3';\nimport {compileNgModule as render3CompileNgModule} from '../render3/jit/module';\nimport {Type} from '../type';\nimport {TypeDecorator, makeDecorator} from '../util/decorators';\n\n/**\n * Represents the expansion of an `NgModule` into its scopes.\n *\n * A scope is a set of directives and pipes that are visible in a particular context. Each\n * `NgModule` has two scopes. The `compilation` scope is the set of directives and pipes that will\n * be recognized in the templates of components declared by the module. The `exported` scope is the\n * set of directives and pipes exported by a module (that is, module B's exported scope gets added\n * to module A's compilation scope when module A imports B).\n */\nexport interface NgModuleTransitiveScopes {\n  compilation: {directives: Set<any>; pipes: Set<any>;};\n  exported: {directives: Set<any>; pipes: Set<any>;};\n}\n\nexport type NgModuleDefWithMeta<T, Declarations, Imports, Exports> = NgModuleDef<T>;\n\n/**\n * Runtime link information for NgModules.\n *\n * This is the internal data structure used by the runtime to assemble components, directives,\n * pipes, and injectors.\n *\n * NOTE: Always use `defineNgModule` function to create this object,\n * never create the object directly since the shape of this object\n * can change between versions.\n */\nexport interface NgModuleDef<T> {\n  /** Token representing the module. Used by DI. */\n  type: T;\n\n  /** List of components to bootstrap. */\n  bootstrap: Type<any>[];\n\n  /** List of components, directives, and pipes declared by this module. */\n  declarations: Type<any>[];\n\n  /** List of modules or `ModuleWithProviders` imported by this module. */\n  imports: Type<any>[];\n\n  /**\n   * List of modules, `ModuleWithProviders`, components, directives, or pipes exported by this\n   * module.\n   */\n  exports: Type<any>[];\n\n  /**\n   * Cached value of computed `transitiveCompileScopes` for this module.\n   *\n   * This should never be read directly, but accessed via `transitiveScopesFor`.\n   */\n  transitiveCompileScopes: NgModuleTransitiveScopes|null;\n}\n\n/**\n * A wrapper around an NgModule that associates it with the providers.\n *\n * @param T the module type. In Ivy applications, this must be explicitly\n * provided.\n *\n * @publicApi\n */\nexport interface ModuleWithProviders<\n    T = any /** TODO(alxhub): remove default when callers pass explicit type param */> {\n  ngModule: Type<T>;\n  providers?: Provider[];\n}\n\n/**\n * A schema definition associated with an NgModule.\n *\n * @see `@NgModule`, `CUSTOM_ELEMENTS_SCHEMA`, `NO_ERRORS_SCHEMA`\n *\n * @param name The name of a defined schema.\n *\n * @publicApi\n */\nexport interface SchemaMetadata { name: string; }\n\n/**\n * Defines a schema that allows an NgModule to contain the following:\n * - Non-Angular elements named with dash case (`-`).\n * - Element properties named with dash case (`-`).\n * Dash case is the naming convention for custom elements.\n *\n * @publicApi\n */\nexport const CUSTOM_ELEMENTS_SCHEMA: SchemaMetadata = {\n  name: 'custom-elements'\n};\n\n/**\n * Defines a schema that allows any property on any element.\n *\n * @publicApi\n */\nexport const NO_ERRORS_SCHEMA: SchemaMetadata = {\n  name: 'no-errors-schema'\n};\n\n\n/**\n * Type of the NgModule decorator / constructor function.\n *\n * @publicApi\n */\nexport interface NgModuleDecorator {\n  /**\n   * Decorator that marks a class as an NgModule and supplies configuration metadata.\n   */\n  (obj?: NgModule): TypeDecorator;\n  new (obj?: NgModule): NgModule;\n}\n\n/**\n * Type of the NgModule metadata.\n *\n * @publicApi\n */\nexport interface NgModule {\n  /**\n   * The set of injectable objects that are available in the injector\n   * of this module.\n   *\n   * @see [Dependency Injection guide](guide/dependency-injection)\n   * @see [NgModule guide](guide/providers)\n   *\n   * @usageNotes\n   *\n   * Dependencies whose providers are listed here become available for injection\n   * into any component, directive, pipe or service that is a child of this injector.\n   * The NgModule used for bootstrapping uses the root injector, and can provide dependencies\n   * to any part of the app.\n   *\n   * A lazy-loaded module has its own injector, typically a child of the app root injector.\n   * Lazy-loaded services are scoped to the lazy-loaded module's injector.\n   * If a lazy-loaded module also provides the `UserService`, any component created\n   * within that module's context (such as by router navigation) gets the local instance\n   * of the service, not the instance in the root injector.\n   * Components in external modules continue to receive the instance provided by their injectors.\n   *\n   * ### Example\n   *\n   * The following example defines a class that is injected in\n   * the HelloWorld NgModule:\n   *\n   * ```\n   * class Greeter {\n   *    greet(name:string) {\n   *      return 'Hello ' + name + '!';\n   *    }\n   * }\n   *\n   * @NgModule({\n   *   providers: [\n   *     Greeter\n   *   ]\n   * })\n   * class HelloWorld {\n   *   greeter:Greeter;\n   *\n   *   constructor(greeter:Greeter) {\n   *     this.greeter = greeter;\n   *   }\n   * }\n   * ```\n   */\n  providers?: Provider[];\n\n  /**\n   * The set of components, directives, and pipes ([declarables](guide/glossary#declarable))\n   * that belong to this module.\n   *\n   * @usageNotes\n   *\n   * The set of selectors that are available to a template include those declared here, and\n   * those that are exported from imported NgModules.\n   *\n   * Declarables must belong to exactly one module.\n   * The compiler emits an error if you try to declare the same class in more than one module.\n   * Be careful not to declare a class that is imported from another module.\n   *\n   * ### Example\n   *\n   * The following example allows the CommonModule to use the `NgFor`\n   * directive.\n   *\n   * ```javascript\n   * @NgModule({\n   *   declarations: [NgFor]\n   * })\n   * class CommonModule {\n   * }\n   * ```\n   */\n  declarations?: Array<Type<any>|any[]>;\n\n  /**\n   * The set of NgModules whose exported [declarables](guide/glossary#declarable)\n   * are available to templates in this module.\n   *\n   * @usageNotes\n   *\n   * A template can use exported declarables from any\n   * imported module, including those from modules that are imported indirectly\n   * and re-exported.\n   * For example, `ModuleA` imports `ModuleB`, and also exports\n   * it, which makes the declarables from `ModuleB` available\n   * wherever `ModuleA` is imported.\n   *\n   * ### Example\n   *\n   * The following example allows MainModule to use anything exported by\n   * `CommonModule`:\n   *\n   * ```javascript\n   * @NgModule({\n   *   imports: [CommonModule]\n   * })\n   * class MainModule {\n   * }\n   * ```\n   *\n   */\n  imports?: Array<Type<any>|ModuleWithProviders<{}>|any[]>;\n\n  /**\n   * The set of components, directives, and pipes declared in this\n   * NgModule that can be used in the template of any component that is part of an\n   * NgModule that imports this NgModule. Exported declarations are the module's public API.\n   *\n   * A declarable belongs to one and only one NgModule.\n   * A module can list another module among its exports, in which case all of that module's\n   * public declaration are exported.\n   *\n   * @usageNotes\n   *\n   * Declarations are private by default.\n   * If this ModuleA does not export UserComponent, then only the components within this\n   * ModuleA can use UserComponent.\n   *\n   * ModuleA can import ModuleB and also export it, making exports from ModuleB\n   * available to an NgModule that imports ModuleA.\n   *\n   * ### Example\n   *\n   * The following example exports the `NgFor` directive from CommonModule.\n   *\n   * ```javascript\n   * @NgModule({\n   *   exports: [NgFor]\n   * })\n   * class CommonModule {\n   * }\n   * ```\n   */\n  exports?: Array<Type<any>|any[]>;\n\n  /**\n   * The set of components to compile when this NgModule is defined,\n   * so that they can be dynamically loaded into the view.\n   *\n   * For each component listed here, Angular creates a `ComponentFactory`\n   * and stores it in the `ComponentFactoryResolver`.\n   *\n   * Angular automatically adds components in the module's bootstrap\n   * and route definitions into the `entryComponents` list. Use this\n   * option to add components that are bootstrapped\n   * using one of the imperative techniques, such as `ViewContainerRef.createComponent()`.\n   *\n   * @see [Entry Components](guide/entry-components)\n   */\n  entryComponents?: Array<Type<any>|any[]>;\n\n  /**\n   * The set of components that are bootstrapped when\n   * this module is bootstrapped. The components listed here\n   * are automatically added to `entryComponents`.\n   */\n  bootstrap?: Array<Type<any>|any[]>;\n\n  /**\n   * The set of schemas that declare elements to be allowed in the NgModule.\n   * Elements and properties that are neither Angular components nor directives\n   * must be declared in a schema.\n   *\n   * Allowed value are `NO_ERRORS_SCHEMA` and `CUSTOM_ELEMENTS_SCHEMA`.\n   *\n   * @security When using one of `NO_ERRORS_SCHEMA` or `CUSTOM_ELEMENTS_SCHEMA`\n   * you must ensure that allowed elements and properties securely escape inputs.\n   */\n  schemas?: Array<SchemaMetadata|any[]>;\n\n  /**\n   * A name or path that uniquely identifies this NgModule in `getModuleFactory`.\n   * If left `undefined`, the NgModule is not registered with\n   * `getModuleFactory`.\n   */\n  id?: string;\n\n  /**\n   * If true, this module will be skipped by the AOT compiler and so will always be compiled\n   * using JIT.\n   *\n   * This exists to support future Ivy work and has no effect currently.\n   */\n  jit?: true;\n}\n\n/**\n * @Annotation\n * @publicApi\n */\nexport const NgModule: NgModuleDecorator = makeDecorator(\n    'NgModule', (ngModule: NgModule) => ngModule, undefined, undefined,\n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    (type: NgModuleType, meta: NgModule) => SWITCH_COMPILE_NGMODULE(type, meta));\n\n/**\n * @description\n * Hook for manual bootstrapping of the application instead of using bootstrap array in @NgModule\n * annotation.\n *\n * Reference to the current application is provided as a parameter.\n *\n * See [\"Bootstrapping\"](guide/bootstrapping) and [\"Entry components\"](guide/entry-components).\n *\n * @usageNotes\n * ```typescript\n * class AppModule implements DoBootstrap {\n *   ngDoBootstrap(appRef: ApplicationRef) {\n *     appRef.bootstrap(AppComponent); // Or some other component\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nexport interface DoBootstrap { ngDoBootstrap(appRef: ApplicationRef): void; }\n\nfunction preR3NgModuleCompile(moduleType: InjectorType<any>, metadata: NgModule): void {\n  let imports = (metadata && metadata.imports) || [];\n  if (metadata && metadata.exports) {\n    imports = [...imports, metadata.exports];\n  }\n\n  moduleType.ngInjectorDef = defineInjector({\n    factory: convertInjectableProviderToFactory(moduleType, {useClass: moduleType}),\n    providers: metadata && metadata.providers,\n    imports: imports,\n  });\n}\n\n\nexport const SWITCH_COMPILE_NGMODULE__POST_R3__ = render3CompileNgModule;\nconst SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\nconst SWITCH_COMPILE_NGMODULE: typeof render3CompileNgModule = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '../../di/injectable';\nimport {ClassSansProvider, ExistingSansProvider, FactorySansProvider, ValueProvider, ValueSansProvider} from '../../di/provider';\nimport {Type} from '../../type';\nimport {getClosureSafeProperty} from '../../util/property';\nimport {NG_INJECTABLE_DEF} from '../fields';\n\nimport {R3InjectableMetadataFacade, getCompilerFacade} from './compiler_facade';\nimport {angularCoreEnv} from './environment';\nimport {convertDependencies, reflectDependencies} from './util';\n\n\n\n/**\n * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n * `ngInjectableDef` onto the injectable type.\n */\nexport function compileInjectable(type: Type<any>, srcMeta?: Injectable): void {\n  let def: any = null;\n\n  // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n  if (type.hasOwnProperty(NG_INJECTABLE_DEF)) return;\n\n  Object.defineProperty(type, NG_INJECTABLE_DEF, {\n    get: () => {\n      if (def === null) {\n        // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n        const meta: Injectable = srcMeta || {providedIn: null};\n        const hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n            isUseValueProvider(meta) || isUseExistingProvider(meta);\n\n\n        const compilerMeta: R3InjectableMetadataFacade = {\n          name: type.name,\n          type: type,\n          typeArgumentCount: 0,\n          providedIn: meta.providedIn,\n          ctorDeps: reflectDependencies(type),\n          userDeps: undefined\n        };\n        if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n          compilerMeta.userDeps = convertDependencies(meta.deps);\n        }\n        if (!hasAProvider) {\n          // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n          // The deps will have been reflected above, causing the factory to create the class by\n          // calling\n          // its constructor with injected deps.\n          compilerMeta.useClass = type;\n        } else if (isUseClassProvider(meta)) {\n          // The user explicitly specified useClass, and may or may not have provided deps.\n          compilerMeta.useClass = meta.useClass;\n        } else if (isUseValueProvider(meta)) {\n          // The user explicitly specified useValue.\n          compilerMeta.useValue = meta.useValue;\n        } else if (isUseFactoryProvider(meta)) {\n          // The user explicitly specified useFactory.\n          compilerMeta.useFactory = meta.useFactory;\n        } else if (isUseExistingProvider(meta)) {\n          // The user explicitly specified useExisting.\n          compilerMeta.useExisting = meta.useExisting;\n        } else {\n          // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n          throw new Error(`Unreachable state.`);\n        }\n        def = getCompilerFacade().compileInjectable(\n            angularCoreEnv, `ng://${type.name}/ngInjectableDef.js`, compilerMeta);\n      }\n      return def;\n    },\n  });\n}\n\ntype UseClassProvider = Injectable & ClassSansProvider & {deps?: any[]};\n\nconst USE_VALUE =\n    getClosureSafeProperty<ValueProvider>({provide: String, useValue: getClosureSafeProperty});\n\nfunction isUseClassProvider(meta: Injectable): meta is UseClassProvider {\n  return (meta as UseClassProvider).useClass !== undefined;\n}\n\nfunction isUseValueProvider(meta: Injectable): meta is Injectable&ValueSansProvider {\n  return USE_VALUE in meta;\n}\n\nfunction isUseFactoryProvider(meta: Injectable): meta is Injectable&FactorySansProvider {\n  return (meta as FactorySansProvider).useFactory !== undefined;\n}\n\nfunction isUseExistingProvider(meta: Injectable): meta is Injectable&ExistingSansProvider {\n  return (meta as ExistingSansProvider).useExisting !== undefined;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {compileInjectable as render3CompileInjectable} from '../render3/jit/injectable';\nimport {Type} from '../type';\nimport {TypeDecorator, makeDecorator} from '../util/decorators';\n\nimport {InjectableDef, InjectableType, defineInjectable, getInjectableDef} from './defs';\nimport {ClassSansProvider, ConstructorSansProvider, ExistingSansProvider, FactorySansProvider, StaticClassSansProvider, ValueSansProvider} from './provider';\nimport {convertInjectableProviderToFactory} from './util';\n\n\n/**\n * Injectable providers used in `@Injectable` decorator.\n *\n * @publicApi\n */\nexport type InjectableProvider = ValueSansProvider | ExistingSansProvider |\n    StaticClassSansProvider | ConstructorSansProvider | FactorySansProvider | ClassSansProvider;\n\n/**\n * Type of the Injectable decorator / constructor function.\n *\n * @publicApi\n */\nexport interface InjectableDecorator {\n  /**\n   * Marks a class as available to `Injector` for creation.\n   *\n   * @see [Introduction to Services and DI](guide/architecture-services)\n   * @see [Dependency Injection Guide](guide/dependency-injection)\n   *\n   * @usageNotes\n   *\n   * The following example shows how service classes are properly marked as\n   * injectable.\n   *\n   * {@example core/di/ts/metadata_spec.ts region='Injectable'}\n   *\n   * `Injector` throws an error if it tries to instantiate a class that\n   * is not decorated with `@Injectable`, as shown in the following example.\n   *\n   * {@example core/di/ts/metadata_spec.ts region='InjectableThrows'}\n   *\n   */\n  (): TypeDecorator;\n  (options?: {providedIn: Type<any>| 'root' | null}&InjectableProvider): TypeDecorator;\n  new (): Injectable;\n  new (options?: {providedIn: Type<any>| 'root' | null}&InjectableProvider): Injectable;\n}\n\n/**\n * Type of the Injectable metadata.\n *\n * @publicApi\n */\nexport interface Injectable {\n  /**\n   * Determines which injectors will provide the injectable,\n   * by either associating it with an @NgModule or other `InjectorType`,\n   * or by specifying that this injectable should be provided in the\n   * 'root' injector, which will be the application-level injector in most apps.\n   */\n  providedIn?: Type<any>|'root'|null;\n}\n\n/**\n * Injectable decorator and metadata.\n *\n * @Annotation\n * @publicApi\n */\nexport const Injectable: InjectableDecorator = makeDecorator(\n    'Injectable', undefined, undefined, undefined,\n    (type: Type<any>, meta: Injectable) => SWITCH_COMPILE_INJECTABLE(type as any, meta));\n\n/**\n * Type representing injectable service.\n *\n * @publicApi\n */\nexport interface InjectableType<T> extends Type<T> { ngInjectableDef: InjectableDef<T>; }\n\n/**\n * Supports @Injectable() in JIT mode for Render2.\n */\nfunction render2CompileInjectable(\n    injectableType: InjectableType<any>,\n    options: {providedIn?: Type<any>| 'root' | null} & InjectableProvider): void {\n  if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n    injectableType.ngInjectableDef = defineInjectable({\n      providedIn: options.providedIn,\n      factory: convertInjectableProviderToFactory(injectableType, options),\n    });\n  }\n}\n\nexport const SWITCH_COMPILE_INJECTABLE__POST_R3__ = render3CompileInjectable;\nconst SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\nconst SWITCH_COMPILE_INJECTABLE: typeof render3CompileInjectable =\n    SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DebugContext} from './view';\n\nexport const ERROR_TYPE = 'ngType';\nexport const ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nexport const ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nexport const ERROR_LOGGER = 'ngErrorLogger';\n\n\nexport function getType(error: Error): Function {\n  return (error as any)[ERROR_TYPE];\n}\n\nexport function getDebugContext(error: Error): DebugContext {\n  return (error as any)[ERROR_DEBUG_CONTEXT];\n}\n\nexport function getOriginalError(error: Error): Error {\n  return (error as any)[ERROR_ORIGINAL_ERROR];\n}\n\nexport function getErrorLogger(error: Error): (console: Console, ...values: any[]) => void {\n  return (error as any)[ERROR_LOGGER] || defaultErrorLogger;\n}\n\n\nfunction defaultErrorLogger(console: Console, ...values: any[]) {\n  (<any>console.error)(...values);\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ERROR_ORIGINAL_ERROR, getDebugContext, getErrorLogger, getOriginalError} from './errors';\n\n\n\n/**\n * Provides a hook for centralized exception handling.\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * @NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n *\n * @publicApi\n */\nexport class ErrorHandler {\n  /**\n   * @internal\n   */\n  _console: Console = console;\n\n  handleError(error: any): void {\n    const originalError = this._findOriginalError(error);\n    const context = this._findContext(error);\n    // Note: Browser consoles show the place from where console.error was called.\n    // We can use this to give users additional information about the error.\n    const errorLogger = getErrorLogger(error);\n\n    errorLogger(this._console, `ERROR`, error);\n    if (originalError) {\n      errorLogger(this._console, `ORIGINAL ERROR`, originalError);\n    }\n    if (context) {\n      errorLogger(this._console, 'ERROR CONTEXT', context);\n    }\n  }\n\n  /** @internal */\n  _findContext(error: any): any {\n    if (error) {\n      return getDebugContext(error) ? getDebugContext(error) :\n                                      this._findContext(getOriginalError(error));\n    }\n\n    return null;\n  }\n\n  /** @internal */\n  _findOriginalError(error: Error): any {\n    let e = getOriginalError(error);\n    while (e && getOriginalError(e)) {\n      e = getOriginalError(e);\n    }\n\n    return e;\n  }\n}\n\nexport function wrappedError(message: string, originalError: any): Error {\n  const msg =\n      `${message} caused by: ${originalError instanceof Error ? originalError.message: originalError }`;\n  const error = Error(msg);\n  (error as any)[ERROR_ORIGINAL_ERROR] = originalError;\n  return error;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {wrappedError} from '../error_handler';\nimport {ERROR_ORIGINAL_ERROR, getOriginalError} from '../errors';\nimport {Type} from '../type';\nimport {stringify} from '../util';\n\nimport {ReflectiveInjector} from './reflective_injector';\nimport {ReflectiveKey} from './reflective_key';\n\nfunction findFirstClosedCycle(keys: any[]): any[] {\n  const res: any[] = [];\n  for (let i = 0; i < keys.length; ++i) {\n    if (res.indexOf(keys[i]) > -1) {\n      res.push(keys[i]);\n      return res;\n    }\n    res.push(keys[i]);\n  }\n  return res;\n}\n\nfunction constructResolvingPath(keys: any[]): string {\n  if (keys.length > 1) {\n    const reversed = findFirstClosedCycle(keys.slice().reverse());\n    const tokenStrs = reversed.map(k => stringify(k.token));\n    return ' (' + tokenStrs.join(' -> ') + ')';\n  }\n\n  return '';\n}\n\nexport interface InjectionError extends Error {\n  keys: ReflectiveKey[];\n  injectors: ReflectiveInjector[];\n  constructResolvingMessage: (keys: ReflectiveKey[]) => string;\n  addKey(injector: ReflectiveInjector, key: ReflectiveKey): void;\n}\n\nfunction injectionError(\n    injector: ReflectiveInjector, key: ReflectiveKey,\n    constructResolvingMessage: (keys: ReflectiveKey[]) => string,\n    originalError?: Error): InjectionError {\n  const keys = [key];\n  const errMsg = constructResolvingMessage(keys);\n  const error =\n      (originalError ? wrappedError(errMsg, originalError) : Error(errMsg)) as InjectionError;\n  error.addKey = addKey;\n  error.keys = keys;\n  error.injectors = [injector];\n  error.constructResolvingMessage = constructResolvingMessage;\n  (error as any)[ERROR_ORIGINAL_ERROR] = originalError;\n  return error;\n}\n\nfunction addKey(this: InjectionError, injector: ReflectiveInjector, key: ReflectiveKey): void {\n  this.injectors.push(injector);\n  this.keys.push(key);\n  // Note: This updated message won't be reflected in the `.stack` property\n  this.message = this.constructResolvingMessage(this.keys);\n}\n\n/**\n * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n * {@link Injector} does not have a {@link Provider} for the given key.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n */\nexport function noProviderError(injector: ReflectiveInjector, key: ReflectiveKey): InjectionError {\n  return injectionError(injector, key, function(keys: ReflectiveKey[]) {\n    const first = stringify(keys[0].token);\n    return `No provider for ${first}!${constructResolvingPath(keys)}`;\n  });\n}\n\n/**\n * Thrown when dependencies form a cycle.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n */\nexport function cyclicDependencyError(\n    injector: ReflectiveInjector, key: ReflectiveKey): InjectionError {\n  return injectionError(injector, key, function(keys: ReflectiveKey[]) {\n    return `Cannot instantiate cyclic dependency!${constructResolvingPath(keys)}`;\n  });\n}\n\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n */\nexport function instantiationError(\n    injector: ReflectiveInjector, originalException: any, originalStack: any,\n    key: ReflectiveKey): InjectionError {\n  return injectionError(injector, key, function(keys: ReflectiveKey[]) {\n    const first = stringify(keys[0].token);\n    return `${originalException.message}: Error during instantiation of ${first}!${constructResolvingPath(keys)}.`;\n  }, originalException);\n}\n\n/**\n * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n * creation.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n */\nexport function invalidProviderError(provider: any) {\n  return Error(\n      `Invalid provider - only instances of Provider and Type are allowed, got: ${provider}`);\n}\n\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n *\n */\nexport function noAnnotationError(typeOrFunc: Type<any>| Function, params: any[][]): Error {\n  const signature: string[] = [];\n  for (let i = 0, ii = params.length; i < ii; i++) {\n    const parameter = params[i];\n    if (!parameter || parameter.length == 0) {\n      signature.push('?');\n    } else {\n      signature.push(parameter.map(stringify).join(' '));\n    }\n  }\n  return Error(\n      'Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n      signature.join(', ') + '). ' +\n      'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n      stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n\n/**\n * Thrown when getting an object by index.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n *\n */\nexport function outOfBoundsError(index: number) {\n  return Error(`Index ${index} is out-of-bounds.`);\n}\n\n// TODO: add a working example after alpha38 is released\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n */\nexport function mixingMultiProvidersWithRegularProvidersError(\n    provider1: any, provider2: any): Error {\n  return Error(`Cannot mix multi providers and regular providers, got: ${provider1} ${provider2}`);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {stringify} from '../util';\nimport {resolveForwardRef} from './forward_ref';\n\n\n/**\n * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n *\n * @deprecated No replacement\n * @publicApi\n */\nexport class ReflectiveKey {\n  public readonly displayName: string;\n  /**\n   * Private\n   */\n  constructor(public token: Object, public id: number) {\n    if (!token) {\n      throw new Error('Token must be defined!');\n    }\n    this.displayName = stringify(this.token);\n  }\n\n  /**\n   * Retrieves a `Key` for a token.\n   */\n  static get(token: Object): ReflectiveKey {\n    return _globalKeyRegistry.get(resolveForwardRef(token));\n  }\n\n  /**\n   * @returns the number of keys registered in the system.\n   */\n  static get numberOfKeys(): number { return _globalKeyRegistry.numberOfKeys; }\n}\n\nexport class KeyRegistry {\n  private _allKeys = new Map<Object, ReflectiveKey>();\n\n  get(token: Object): ReflectiveKey {\n    if (token instanceof ReflectiveKey) return token;\n\n    if (this._allKeys.has(token)) {\n      return this._allKeys.get(token) !;\n    }\n\n    const newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n    this._allKeys.set(token, newKey);\n    return newKey;\n  }\n\n  get numberOfKeys(): number { return this._allKeys.size; }\n}\n\nconst _globalKeyRegistry = new KeyRegistry();\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '../type';\nimport {PlatformReflectionCapabilities} from './platform_reflection_capabilities';\nimport {GetterFn, MethodFn, SetterFn} from './types';\n\nexport {PlatformReflectionCapabilities};\nexport {GetterFn, MethodFn, SetterFn};\n\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nexport class Reflector {\n  constructor(public reflectionCapabilities: PlatformReflectionCapabilities) {}\n\n  updateCapabilities(caps: PlatformReflectionCapabilities) { this.reflectionCapabilities = caps; }\n\n  factory(type: Type<any>): Function { return this.reflectionCapabilities.factory(type); }\n\n  parameters(typeOrFunc: Type<any>): any[][] {\n    return this.reflectionCapabilities.parameters(typeOrFunc);\n  }\n\n  annotations(typeOrFunc: Type<any>): any[] {\n    return this.reflectionCapabilities.annotations(typeOrFunc);\n  }\n\n  propMetadata(typeOrFunc: Type<any>): {[key: string]: any[]} {\n    return this.reflectionCapabilities.propMetadata(typeOrFunc);\n  }\n\n  hasLifecycleHook(type: any, lcProperty: string): boolean {\n    return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n  }\n\n  getter(name: string): GetterFn { return this.reflectionCapabilities.getter(name); }\n\n  setter(name: string): SetterFn { return this.reflectionCapabilities.setter(name); }\n\n  method(name: string): MethodFn { return this.reflectionCapabilities.method(name); }\n\n  importUri(type: any): string { return this.reflectionCapabilities.importUri(type); }\n\n  resourceUri(type: any): string { return this.reflectionCapabilities.resourceUri(type); }\n\n  resolveIdentifier(name: string, moduleUrl: string, members: string[], runtime: any): any {\n    return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n  }\n\n  resolveEnum(identifier: any, name: string): any {\n    return this.reflectionCapabilities.resolveEnum(identifier, name);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ReflectionCapabilities} from './reflection_capabilities';\nimport {Reflector} from './reflector';\n\nexport {Reflector} from './reflector';\n\n/**\n * The {@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nexport const reflector = new Reflector(new ReflectionCapabilities());\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {reflector} from '../reflection/reflection';\nimport {Type} from '../type';\n\nimport {resolveForwardRef} from './forward_ref';\nimport {InjectionToken} from './injection_token';\nimport {Inject, Optional, Self, SkipSelf} from './metadata';\nimport {ClassProvider, ExistingProvider, FactoryProvider, Provider, TypeProvider, ValueProvider} from './provider';\nimport {invalidProviderError, mixingMultiProvidersWithRegularProvidersError, noAnnotationError} from './reflective_errors';\nimport {ReflectiveKey} from './reflective_key';\n\n\ninterface NormalizedProvider extends TypeProvider, ValueProvider, ClassProvider, ExistingProvider,\n    FactoryProvider {}\n\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nexport class ReflectiveDependency {\n  constructor(\n      public key: ReflectiveKey, public optional: boolean, public visibility: Self|SkipSelf|null) {}\n\n  static fromKey(key: ReflectiveKey): ReflectiveDependency {\n    return new ReflectiveDependency(key, false, null);\n  }\n}\n\nconst _EMPTY_LIST: any[] = [];\n\n/**\n * An internal resolved representation of a `Provider` used by the `Injector`.\n *\n * @usageNotes\n * This is usually created automatically by `Injector.resolveAndCreate`.\n *\n * It can be created manually, as follows:\n *\n * ### Example\n *\n * ```typescript\n * var resolvedProviders = Injector.resolve([{ provide: 'message', useValue: 'Hello' }]);\n * var injector = Injector.fromResolvedProviders(resolvedProviders);\n *\n * expect(injector.get('message')).toEqual('Hello');\n * ```\n *\n * @publicApi\n */\nexport interface ResolvedReflectiveProvider {\n  /**\n   * A key, usually a `Type<any>`.\n   */\n  key: ReflectiveKey;\n\n  /**\n   * Factory function which can return an instance of an object represented by a key.\n   */\n  resolvedFactories: ResolvedReflectiveFactory[];\n\n  /**\n   * Indicates if the provider is a multi-provider or a regular provider.\n   */\n  multiProvider: boolean;\n}\n\nexport class ResolvedReflectiveProvider_ implements ResolvedReflectiveProvider {\n  readonly resolvedFactory: ResolvedReflectiveFactory;\n\n  constructor(\n      public key: ReflectiveKey, public resolvedFactories: ResolvedReflectiveFactory[],\n      public multiProvider: boolean) {\n    this.resolvedFactory = this.resolvedFactories[0];\n  }\n}\n\n/**\n * An internal resolved representation of a factory function created by resolving `Provider`.\n * @publicApi\n */\nexport class ResolvedReflectiveFactory {\n  constructor(\n      /**\n       * Factory function which can return an instance of an object represented by a key.\n       */\n      public factory: Function,\n\n      /**\n       * Arguments (dependencies) to the `factory` function.\n       */\n      public dependencies: ReflectiveDependency[]) {}\n}\n\n\n/**\n * Resolve a single provider.\n */\nfunction resolveReflectiveFactory(provider: NormalizedProvider): ResolvedReflectiveFactory {\n  let factoryFn: Function;\n  let resolvedDeps: ReflectiveDependency[];\n  if (provider.useClass) {\n    const useClass = resolveForwardRef(provider.useClass);\n    factoryFn = reflector.factory(useClass);\n    resolvedDeps = _dependenciesFor(useClass);\n  } else if (provider.useExisting) {\n    factoryFn = (aliasInstance: any) => aliasInstance;\n    resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n  } else if (provider.useFactory) {\n    factoryFn = provider.useFactory;\n    resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n  } else {\n    factoryFn = () => provider.useValue;\n    resolvedDeps = _EMPTY_LIST;\n  }\n  return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n\n/**\n * Converts the `Provider` into `ResolvedProvider`.\n *\n * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n * syntax.\n */\nfunction resolveReflectiveProvider(provider: NormalizedProvider): ResolvedReflectiveProvider {\n  return new ResolvedReflectiveProvider_(\n      ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)],\n      provider.multi || false);\n}\n\n/**\n * Resolve a list of Providers.\n */\nexport function resolveReflectiveProviders(providers: Provider[]): ResolvedReflectiveProvider[] {\n  const normalized = _normalizeProviders(providers, []);\n  const resolved = normalized.map(resolveReflectiveProvider);\n  const resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n  return Array.from(resolvedProviderMap.values());\n}\n\n/**\n * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n * multi providers have been merged.\n */\nexport function mergeResolvedReflectiveProviders(\n    providers: ResolvedReflectiveProvider[],\n    normalizedProvidersMap: Map<number, ResolvedReflectiveProvider>):\n    Map<number, ResolvedReflectiveProvider> {\n  for (let i = 0; i < providers.length; i++) {\n    const provider = providers[i];\n    const existing = normalizedProvidersMap.get(provider.key.id);\n    if (existing) {\n      if (provider.multiProvider !== existing.multiProvider) {\n        throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n      }\n      if (provider.multiProvider) {\n        for (let j = 0; j < provider.resolvedFactories.length; j++) {\n          existing.resolvedFactories.push(provider.resolvedFactories[j]);\n        }\n      } else {\n        normalizedProvidersMap.set(provider.key.id, provider);\n      }\n    } else {\n      let resolvedProvider: ResolvedReflectiveProvider;\n      if (provider.multiProvider) {\n        resolvedProvider = new ResolvedReflectiveProvider_(\n            provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n      } else {\n        resolvedProvider = provider;\n      }\n      normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n    }\n  }\n  return normalizedProvidersMap;\n}\n\nfunction _normalizeProviders(providers: Provider[], res: Provider[]): Provider[] {\n  providers.forEach(b => {\n    if (b instanceof Type) {\n      res.push({provide: b, useClass: b});\n\n    } else if (b && typeof b == 'object' && (b as any).provide !== undefined) {\n      res.push(b as NormalizedProvider);\n\n    } else if (b instanceof Array) {\n      _normalizeProviders(b, res);\n\n    } else {\n      throw invalidProviderError(b);\n    }\n  });\n\n  return res;\n}\n\nexport function constructDependencies(\n    typeOrFunc: any, dependencies?: any[]): ReflectiveDependency[] {\n  if (!dependencies) {\n    return _dependenciesFor(typeOrFunc);\n  } else {\n    const params: any[][] = dependencies.map(t => [t]);\n    return dependencies.map(t => _extractToken(typeOrFunc, t, params));\n  }\n}\n\nfunction _dependenciesFor(typeOrFunc: any): ReflectiveDependency[] {\n  const params = reflector.parameters(typeOrFunc);\n\n  if (!params) return [];\n  if (params.some(p => p == null)) {\n    throw noAnnotationError(typeOrFunc, params);\n  }\n  return params.map(p => _extractToken(typeOrFunc, p, params));\n}\n\nfunction _extractToken(\n    typeOrFunc: any, metadata: any[] | any, params: any[][]): ReflectiveDependency {\n  let token: any = null;\n  let optional = false;\n\n  if (!Array.isArray(metadata)) {\n    if (metadata instanceof Inject) {\n      return _createDependency(metadata.token, optional, null);\n    } else {\n      return _createDependency(metadata, optional, null);\n    }\n  }\n\n  let visibility: Self|SkipSelf|null = null;\n\n  for (let i = 0; i < metadata.length; ++i) {\n    const paramMetadata = metadata[i];\n\n    if (paramMetadata instanceof Type) {\n      token = paramMetadata;\n\n    } else if (paramMetadata instanceof Inject) {\n      token = paramMetadata.token;\n\n    } else if (paramMetadata instanceof Optional) {\n      optional = true;\n\n    } else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n      visibility = paramMetadata;\n    } else if (paramMetadata instanceof InjectionToken) {\n      token = paramMetadata;\n    }\n  }\n\n  token = resolveForwardRef(token);\n\n  if (token != null) {\n    return _createDependency(token, optional, visibility);\n  } else {\n    throw noAnnotationError(typeOrFunc, params);\n  }\n}\n\nfunction _createDependency(\n    token: any, optional: boolean, visibility: Self | SkipSelf | null): ReflectiveDependency {\n  return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector, THROW_IF_NOT_FOUND} from './injector';\nimport {Self, SkipSelf} from './metadata';\nimport {Provider} from './provider';\nimport {cyclicDependencyError, instantiationError, noProviderError, outOfBoundsError} from './reflective_errors';\nimport {ReflectiveKey} from './reflective_key';\nimport {ReflectiveDependency, ResolvedReflectiveFactory, ResolvedReflectiveProvider, resolveReflectiveProviders} from './reflective_provider';\n\n// Threshold for the dynamic version\nconst UNDEFINED = new Object();\n\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * @usageNotes\n * ### Example\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * @Injectable()\n * class Engine {\n * }\n *\n * @Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n * @publicApi\n */\nexport abstract class ReflectiveInjector implements Injector {\n  /**\n   * Turns an array of provider definitions into an array of resolved providers.\n   *\n   * A resolution is a process of flattening multiple nested arrays and converting individual\n   * providers into an array of `ResolvedReflectiveProvider`s.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```typescript\n   * @Injectable()\n   * class Engine {\n   * }\n   *\n   * @Injectable()\n   * class Car {\n   *   constructor(public engine:Engine) {}\n   * }\n   *\n   * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n   *\n   * expect(providers.length).toEqual(2);\n   *\n   * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n   * expect(providers[0].key.displayName).toBe(\"Car\");\n   * expect(providers[0].dependencies.length).toEqual(1);\n   * expect(providers[0].factory).toBeDefined();\n   *\n   * expect(providers[1].key.displayName).toBe(\"Engine\");\n   * });\n   * ```\n   *\n   */\n  static resolve(providers: Provider[]): ResolvedReflectiveProvider[] {\n    return resolveReflectiveProviders(providers);\n  }\n\n  /**\n   * Resolves an array of providers and creates an injector from those providers.\n   *\n   * The passed-in providers can be an array of `Type`, `Provider`,\n   * or a recursive array of more providers.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```typescript\n   * @Injectable()\n   * class Engine {\n   * }\n   *\n   * @Injectable()\n   * class Car {\n   *   constructor(public engine:Engine) {}\n   * }\n   *\n   * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n   * expect(injector.get(Car) instanceof Car).toBe(true);\n   * ```\n   */\n  static resolveAndCreate(providers: Provider[], parent?: Injector): ReflectiveInjector {\n    const ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n    return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n  }\n\n  /**\n   * Creates an injector from previously resolved providers.\n   *\n   * This API is the recommended way to construct injectors in performance-sensitive parts.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```typescript\n   * @Injectable()\n   * class Engine {\n   * }\n   *\n   * @Injectable()\n   * class Car {\n   *   constructor(public engine:Engine) {}\n   * }\n   *\n   * var providers = ReflectiveInjector.resolve([Car, Engine]);\n   * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n   * expect(injector.get(Car) instanceof Car).toBe(true);\n   * ```\n   */\n  static fromResolvedProviders(providers: ResolvedReflectiveProvider[], parent?: Injector):\n      ReflectiveInjector {\n    return new ReflectiveInjector_(providers, parent);\n  }\n\n\n  /**\n   * Parent of this injector.\n   *\n   * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n   * -->\n   */\n  abstract get parent(): Injector|null;\n\n  /**\n   * Resolves an array of providers and creates a child injector from those providers.\n   *\n   * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n   * -->\n   *\n   * The passed-in providers can be an array of `Type`, `Provider`,\n   * or a recursive array of more providers.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```typescript\n   * class ParentProvider {}\n   * class ChildProvider {}\n   *\n   * var parent = ReflectiveInjector.resolveAndCreate([ParentProvider]);\n   * var child = parent.resolveAndCreateChild([ChildProvider]);\n   *\n   * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n   * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n   * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n   * ```\n   */\n  abstract resolveAndCreateChild(providers: Provider[]): ReflectiveInjector;\n\n  /**\n   * Creates a child injector from previously resolved providers.\n   *\n   * <!-- TODO: Add a link to the section of the user guide talking about hierarchical injection.\n   * -->\n   *\n   * This API is the recommended way to construct injectors in performance-sensitive parts.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```typescript\n   * class ParentProvider {}\n   * class ChildProvider {}\n   *\n   * var parentProviders = ReflectiveInjector.resolve([ParentProvider]);\n   * var childProviders = ReflectiveInjector.resolve([ChildProvider]);\n   *\n   * var parent = ReflectiveInjector.fromResolvedProviders(parentProviders);\n   * var child = parent.createChildFromResolved(childProviders);\n   *\n   * expect(child.get(ParentProvider) instanceof ParentProvider).toBe(true);\n   * expect(child.get(ChildProvider) instanceof ChildProvider).toBe(true);\n   * expect(child.get(ParentProvider)).toBe(parent.get(ParentProvider));\n   * ```\n   */\n  abstract createChildFromResolved(providers: ResolvedReflectiveProvider[]): ReflectiveInjector;\n\n  /**\n   * Resolves a provider and instantiates an object in the context of the injector.\n   *\n   * The created object does not get cached by the injector.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```typescript\n   * @Injectable()\n   * class Engine {\n   * }\n   *\n   * @Injectable()\n   * class Car {\n   *   constructor(public engine:Engine) {}\n   * }\n   *\n   * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n   *\n   * var car = injector.resolveAndInstantiate(Car);\n   * expect(car.engine).toBe(injector.get(Engine));\n   * expect(car).not.toBe(injector.resolveAndInstantiate(Car));\n   * ```\n   */\n  abstract resolveAndInstantiate(provider: Provider): any;\n\n  /**\n   * Instantiates an object using a resolved provider in the context of the injector.\n   *\n   * The created object does not get cached by the injector.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```typescript\n   * @Injectable()\n   * class Engine {\n   * }\n   *\n   * @Injectable()\n   * class Car {\n   *   constructor(public engine:Engine) {}\n   * }\n   *\n   * var injector = ReflectiveInjector.resolveAndCreate([Engine]);\n   * var carProvider = ReflectiveInjector.resolve([Car])[0];\n   * var car = injector.instantiateResolved(carProvider);\n   * expect(car.engine).toBe(injector.get(Engine));\n   * expect(car).not.toBe(injector.instantiateResolved(carProvider));\n   * ```\n   */\n  abstract instantiateResolved(provider: ResolvedReflectiveProvider): any;\n\n  abstract get(token: any, notFoundValue?: any): any;\n}\n\nexport class ReflectiveInjector_ implements ReflectiveInjector {\n  private static INJECTOR_KEY = ReflectiveKey.get(Injector);\n  /** @internal */\n  _constructionCounter: number = 0;\n  /** @internal */\n  public _providers: ResolvedReflectiveProvider[];\n  public readonly parent: Injector|null;\n\n  keyIds: number[];\n  objs: any[];\n  /**\n   * Private\n   */\n  constructor(_providers: ResolvedReflectiveProvider[], _parent?: Injector) {\n    this._providers = _providers;\n    this.parent = _parent || null;\n\n    const len = _providers.length;\n\n    this.keyIds = new Array(len);\n    this.objs = new Array(len);\n\n    for (let i = 0; i < len; i++) {\n      this.keyIds[i] = _providers[i].key.id;\n      this.objs[i] = UNDEFINED;\n    }\n  }\n\n  get(token: any, notFoundValue: any = THROW_IF_NOT_FOUND): any {\n    return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n  }\n\n  resolveAndCreateChild(providers: Provider[]): ReflectiveInjector {\n    const ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n    return this.createChildFromResolved(ResolvedReflectiveProviders);\n  }\n\n  createChildFromResolved(providers: ResolvedReflectiveProvider[]): ReflectiveInjector {\n    const inj = new ReflectiveInjector_(providers);\n    (inj as{parent: Injector | null}).parent = this;\n    return inj;\n  }\n\n  resolveAndInstantiate(provider: Provider): any {\n    return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n  }\n\n  instantiateResolved(provider: ResolvedReflectiveProvider): any {\n    return this._instantiateProvider(provider);\n  }\n\n  getProviderAtIndex(index: number): ResolvedReflectiveProvider {\n    if (index < 0 || index >= this._providers.length) {\n      throw outOfBoundsError(index);\n    }\n    return this._providers[index];\n  }\n\n  /** @internal */\n  _new(provider: ResolvedReflectiveProvider): any {\n    if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n      throw cyclicDependencyError(this, provider.key);\n    }\n    return this._instantiateProvider(provider);\n  }\n\n  private _getMaxNumberOfObjects(): number { return this.objs.length; }\n\n  private _instantiateProvider(provider: ResolvedReflectiveProvider): any {\n    if (provider.multiProvider) {\n      const res = new Array(provider.resolvedFactories.length);\n      for (let i = 0; i < provider.resolvedFactories.length; ++i) {\n        res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n      }\n      return res;\n    } else {\n      return this._instantiate(provider, provider.resolvedFactories[0]);\n    }\n  }\n\n  private _instantiate(\n      provider: ResolvedReflectiveProvider,\n      ResolvedReflectiveFactory: ResolvedReflectiveFactory): any {\n    const factory = ResolvedReflectiveFactory.factory;\n\n    let deps: any[];\n    try {\n      deps =\n          ResolvedReflectiveFactory.dependencies.map(dep => this._getByReflectiveDependency(dep));\n    } catch (e) {\n      if (e.addKey) {\n        e.addKey(this, provider.key);\n      }\n      throw e;\n    }\n\n    let obj: any;\n    try {\n      obj = factory(...deps);\n    } catch (e) {\n      throw instantiationError(this, e, e.stack, provider.key);\n    }\n\n    return obj;\n  }\n\n  private _getByReflectiveDependency(dep: ReflectiveDependency): any {\n    return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n  }\n\n  private _getByKey(key: ReflectiveKey, visibility: Self|SkipSelf|null, notFoundValue: any): any {\n    if (key === ReflectiveInjector_.INJECTOR_KEY) {\n      return this;\n    }\n\n    if (visibility instanceof Self) {\n      return this._getByKeySelf(key, notFoundValue);\n\n    } else {\n      return this._getByKeyDefault(key, notFoundValue, visibility);\n    }\n  }\n\n  private _getObjByKeyId(keyId: number): any {\n    for (let i = 0; i < this.keyIds.length; i++) {\n      if (this.keyIds[i] === keyId) {\n        if (this.objs[i] === UNDEFINED) {\n          this.objs[i] = this._new(this._providers[i]);\n        }\n\n        return this.objs[i];\n      }\n    }\n\n    return UNDEFINED;\n  }\n\n  /** @internal */\n  _throwOrNull(key: ReflectiveKey, notFoundValue: any): any {\n    if (notFoundValue !== THROW_IF_NOT_FOUND) {\n      return notFoundValue;\n    } else {\n      throw noProviderError(this, key);\n    }\n  }\n\n  /** @internal */\n  _getByKeySelf(key: ReflectiveKey, notFoundValue: any): any {\n    const obj = this._getObjByKeyId(key.id);\n    return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n  }\n\n  /** @internal */\n  _getByKeyDefault(key: ReflectiveKey, notFoundValue: any, visibility: Self|SkipSelf|null): any {\n    let inj: Injector|null;\n\n    if (visibility instanceof SkipSelf) {\n      inj = this.parent;\n    } else {\n      inj = this;\n    }\n\n    while (inj instanceof ReflectiveInjector_) {\n      const inj_ = <ReflectiveInjector_>inj;\n      const obj = inj_._getObjByKeyId(key.id);\n      if (obj !== UNDEFINED) return obj;\n      inj = inj_.parent;\n    }\n    if (inj !== null) {\n      return inj.get(key.token, notFoundValue);\n    } else {\n      return this._throwOrNull(key, notFoundValue);\n    }\n  }\n\n  get displayName(): string {\n    const providers =\n        _mapProviders(this, (b: ResolvedReflectiveProvider) => ' \"' + b.key.displayName + '\" ')\n            .join(', ');\n    return `ReflectiveInjector(providers: [${providers}])`;\n  }\n\n  toString(): string { return this.displayName; }\n}\n\nfunction _mapProviders(injector: ReflectiveInjector_, fn: Function): any[] {\n  const res: any[] = new Array(injector._providers.length);\n  for (let i = 0; i < injector._providers.length; ++i) {\n    res[i] = fn(injector.getProviderAtIndex(i));\n  }\n  return res;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable} from 'rxjs';\n\n/**\n * Determine if the argument is shaped like a Promise\n */\nexport function isPromise(obj: any): obj is Promise<any> {\n  // allow any Promise/A+ compliant thenable.\n  // It's up to the caller to ensure that obj.then conforms to the spec\n  return !!obj && typeof obj.then === 'function';\n}\n\n/**\n * Determine if the argument is an Observable\n */\nexport function isObservable(obj: any | Observable<any>): obj is Observable<any> {\n  // TODO: use isObservable once we update pass rxjs 6.1\n  // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n  return !!obj && typeof obj.subscribe === 'function';\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {isPromise} from '../src/util/lang';\n\nimport {Inject, Injectable, InjectionToken, Optional} from './di';\n\n\n/**\n * A function that will be executed when an application is initialized.\n *\n * @publicApi\n */\nexport const APP_INITIALIZER = new InjectionToken<Array<() => void>>('Application Initializer');\n\n/**\n * A class that reflects the state of running {@link APP_INITIALIZER}s.\n *\n * @publicApi\n */\n@Injectable()\nexport class ApplicationInitStatus {\n  // TODO(issue/24571): remove '!'.\n  private resolve !: Function;\n  // TODO(issue/24571): remove '!'.\n  private reject !: Function;\n  private initialized = false;\n  public readonly donePromise: Promise<any>;\n  public readonly done = false;\n\n  constructor(@Inject(APP_INITIALIZER) @Optional() private appInits: (() => any)[]) {\n    this.donePromise = new Promise((res, rej) => {\n      this.resolve = res;\n      this.reject = rej;\n    });\n  }\n\n  /** @internal */\n  runInitializers() {\n    if (this.initialized) {\n      return;\n    }\n\n    const asyncInitPromises: Promise<any>[] = [];\n\n    const complete = () => {\n      (this as{done: boolean}).done = true;\n      this.resolve();\n    };\n\n    if (this.appInits) {\n      for (let i = 0; i < this.appInits.length; i++) {\n        const initResult = this.appInits[i]();\n        if (isPromise(initResult)) {\n          asyncInitPromises.push(initResult);\n        }\n      }\n    }\n\n    Promise.all(asyncInitPromises).then(() => { complete(); }).catch(e => { this.reject(e); });\n\n    if (asyncInitPromises.length === 0) {\n      complete();\n    }\n    this.initialized = true;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from './di';\nimport {ComponentRef} from './linker/component_factory';\n\n\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n * using this token.\n * @publicApi\n */\nexport const APP_ID = new InjectionToken<string>('AppId');\n\nexport function _appIdRandomProviderFactory() {\n  return `${_randomChar()}${_randomChar()}${_randomChar()}`;\n}\n\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * @publicApi\n */\nexport const APP_ID_RANDOM_PROVIDER = {\n  provide: APP_ID,\n  useFactory: _appIdRandomProviderFactory,\n  deps: <any[]>[],\n};\n\nfunction _randomChar(): string {\n  return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n\n/**\n * A function that will be executed when a platform is initialized.\n * @publicApi\n */\nexport const PLATFORM_INITIALIZER = new InjectionToken<Array<() => void>>('Platform Initializer');\n\n/**\n * A token that indicates an opaque platform id.\n * @publicApi\n */\nexport const PLATFORM_ID = new InjectionToken<Object>('Platform ID');\n\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * @publicApi\n */\nexport const APP_BOOTSTRAP_LISTENER =\n    new InjectionToken<Array<(compRef: ComponentRef<any>) => void>>('appBootstrapListener');\n\n/**\n * A token which indicates the root directory of the application\n * @publicApi\n */\nexport const PACKAGE_ROOT_URL = new InjectionToken<string>('Application Packages Root URL');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from './di';\n\n@Injectable()\nexport class Console {\n  log(message: string): void {\n    // tslint:disable-next-line:no-console\n    console.log(message);\n  }\n  // Note: for reporting errors use `DOM.logError()` as it is platform specific\n  warn(message: string): void {\n    // tslint:disable-next-line:no-console\n    console.warn(message);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '../di/injectable';\nimport {InjectionToken} from '../di/injection_token';\nimport {StaticProvider} from '../di/provider';\nimport {MissingTranslationStrategy} from '../i18n/tokens';\nimport {ViewEncapsulation} from '../metadata';\nimport {NgModuleFactory as NgModuleFactoryR3} from '../render3/ng_module_ref';\nimport {Type} from '../type';\n\nimport {ComponentFactory} from './component_factory';\nimport {NgModuleFactory} from './ng_module_factory';\n\n\n\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * @publicApi\n */\nexport class ModuleWithComponentFactories<T> {\n  constructor(\n      public ngModuleFactory: NgModuleFactory<T>,\n      public componentFactories: ComponentFactory<any>[]) {}\n}\n\n\nfunction _throwError() {\n  throw new Error(`Runtime compiler is not loaded`);\n}\n\nconst Compiler_compileModuleSync__PRE_R3__: <T>(moduleType: Type<T>) => NgModuleFactory<T> =\n    _throwError as any;\nexport const Compiler_compileModuleSync__POST_R3__: <T>(moduleType: Type<T>) =>\n    NgModuleFactory<T> = function<T>(moduleType: Type<T>): NgModuleFactory<T> {\n  return new NgModuleFactoryR3(moduleType);\n};\nconst Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\n\nconst Compiler_compileModuleAsync__PRE_R3__: <T>(moduleType: Type<T>) =>\n    Promise<NgModuleFactory<T>> = _throwError as any;\nexport const Compiler_compileModuleAsync__POST_R3__: <T>(moduleType: Type<T>) =>\n    Promise<NgModuleFactory<T>> = function<T>(moduleType: Type<T>): Promise<NgModuleFactory<T>> {\n  return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n};\nconst Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\n\nconst Compiler_compileModuleAndAllComponentsSync__PRE_R3__: <T>(moduleType: Type<T>) =>\n    ModuleWithComponentFactories<T> = _throwError as any;\nexport const Compiler_compileModuleAndAllComponentsSync__POST_R3__: <T>(moduleType: Type<T>) =>\n    ModuleWithComponentFactories<T> = function<T>(moduleType: Type<T>):\n        ModuleWithComponentFactories<T> {\n  return new ModuleWithComponentFactories(Compiler_compileModuleSync__POST_R3__(moduleType), []);\n};\nconst Compiler_compileModuleAndAllComponentsSync =\n    Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\n\nconst Compiler_compileModuleAndAllComponentsAsync__PRE_R3__: <T>(moduleType: Type<T>) =>\n    Promise<ModuleWithComponentFactories<T>> = _throwError as any;\nexport const Compiler_compileModuleAndAllComponentsAsync__POST_R3__: <T>(moduleType: Type<T>) =>\n    Promise<ModuleWithComponentFactories<T>> = function<T>(moduleType: Type<T>):\n        Promise<ModuleWithComponentFactories<T>> {\n  return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n};\nconst Compiler_compileModuleAndAllComponentsAsync =\n    Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n *\n * @publicApi\n */\n@Injectable()\nexport class Compiler {\n  /**\n   * Compiles the given NgModule and all of its components. All templates of the components listed\n   * in `entryComponents` have to be inlined.\n   */\n  compileModuleSync: <T>(moduleType: Type<T>) => NgModuleFactory<T> = Compiler_compileModuleSync;\n\n  /**\n   * Compiles the given NgModule and all of its components\n   */\n  compileModuleAsync:\n      <T>(moduleType: Type<T>) => Promise<NgModuleFactory<T>> = Compiler_compileModuleAsync;\n\n  /**\n   * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n   */\n  compileModuleAndAllComponentsSync: <T>(moduleType: Type<T>) => ModuleWithComponentFactories<T> =\n      Compiler_compileModuleAndAllComponentsSync;\n\n  /**\n   * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n   */\n  compileModuleAndAllComponentsAsync: <T>(moduleType: Type<T>) =>\n      Promise<ModuleWithComponentFactories<T>> = Compiler_compileModuleAndAllComponentsAsync;\n\n  /**\n   * Clears all caches.\n   */\n  clearCache(): void {}\n\n  /**\n   * Clears the cache for the given component/ngModule.\n   */\n  clearCacheFor(type: Type<any>) {}\n\n  /**\n   * Returns the id for a given NgModule, if one is defined and known to the compiler.\n   */\n  getModuleId(moduleType: Type<any>): string|undefined { return undefined; }\n}\n\n/**\n * Options for creating a compiler\n *\n * @publicApi\n */\nexport type CompilerOptions = {\n  useJit?: boolean,\n  defaultEncapsulation?: ViewEncapsulation,\n  providers?: StaticProvider[],\n  missingTranslation?: MissingTranslationStrategy,\n  preserveWhitespaces?: boolean,\n};\n\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * @publicApi\n */\nexport const COMPILER_OPTIONS = new InjectionToken<CompilerOptions[]>('compilerOptions');\n\n/**\n * A factory for creating a Compiler\n *\n * @publicApi\n */\nexport abstract class CompilerFactory {\n  abstract createCompiler(options?: CompilerOptions[]): Compiler;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {global} from '../util';\n\n/**\n * A scope function for the Web Tracing Framework (WTF).\n *\n * @publicApi\n */\nexport interface WtfScopeFn { (arg0?: any, arg1?: any): any; }\n\ninterface WTF {\n  trace: Trace;\n}\n\ninterface Trace {\n  events: Events;\n  leaveScope(scope: Scope, returnValue: any): any /** TODO #9100 */;\n  beginTimeRange(rangeType: string, action: string): Range;\n  endTimeRange(range: Range): any /** TODO #9100 */;\n}\n\nexport interface Range {}\n\ninterface Events {\n  createScope(signature: string, flags: any): Scope;\n}\n\nexport interface Scope { (...args: any[] /** TODO #9100 */): any; }\n\nlet trace: Trace;\nlet events: Events;\n\nexport function detectWTF(): boolean {\n  const wtf: WTF = (global as any /** TODO #9100 */)['wtf'];\n  if (wtf) {\n    trace = wtf['trace'];\n    if (trace) {\n      events = trace['events'];\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function createScope(signature: string, flags: any = null): any {\n  return events.createScope(signature, flags);\n}\n\nexport function leave<T>(scope: Scope): void;\nexport function leave<T>(scope: Scope, returnValue?: T): T;\nexport function leave<T>(scope: Scope, returnValue?: any): any {\n  trace.leaveScope(scope, returnValue);\n  return returnValue;\n}\n\nexport function startTimeRange(rangeType: string, action: string): Range {\n  return trace.beginTimeRange(rangeType, action);\n}\n\nexport function endTimeRange(range: Range): void {\n  trace.endTimeRange(range);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {WtfScopeFn, createScope, detectWTF, endTimeRange, leave, startTimeRange} from './wtf_impl';\n\nexport {WtfScopeFn} from './wtf_impl';\n\n\n/**\n * True if WTF is enabled.\n */\nexport const wtfEnabled = detectWTF();\n\nfunction noopScope(arg0?: any, arg1?: any): any {\n  return null;\n}\n\n/**\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * @publicApi\n */\nexport const wtfCreateScope: (signature: string, flags?: any) => WtfScopeFn =\n    wtfEnabled ? createScope : (signature: string, flags?: any) => noopScope;\n\n/**\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * @publicApi\n */\nexport const wtfLeave: <T>(scope: any, returnValue?: T) => T =\n    wtfEnabled ? leave : (s: any, r?: any) => r;\n\n/**\n * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n * enabled.\n *\n *     someMethod() {\n *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n *        var future = new Future.delay(5).then((_) {\n *          wtfEndTimeRange(s);\n *        });\n *     }\n * @publicApi\n */\nexport const wtfStartTimeRange: (rangeType: string, action: string) => any =\n    wtfEnabled ? startTimeRange : (rangeType: string, action: string) => null;\n\n/**\n * Ends a async time range operation.\n * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n * enabled.\n * @publicApi\n */\nexport const wtfEndTimeRange: (range: any) => void = wtfEnabled ? endTimeRange : (r: any) => null;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {EventEmitter} from '../event_emitter';\n\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '@angular/core';\n * import {NgIf} from '@angular/common';\n *\n * @Component({\n *   selector: 'ng-zone-demo',\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *         // reenter the Angular zone and display done\n *         this._ngZone.run(() => { console.log('Outside Done!'); });\n *       });\n *     });\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nexport class NgZone {\n  readonly hasPendingMicrotasks: boolean = false;\n  readonly hasPendingMacrotasks: boolean = false;\n\n  /**\n   * Whether there are no outstanding microtasks or macrotasks.\n   */\n  readonly isStable: boolean = true;\n\n  /**\n   * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n   */\n  readonly onUnstable: EventEmitter<any> = new EventEmitter(false);\n\n  /**\n   * Notifies when there is no more microtasks enqueued in the current VM Turn.\n   * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n   * For this reason this event can fire multiple times per VM Turn.\n   */\n  readonly onMicrotaskEmpty: EventEmitter<any> = new EventEmitter(false);\n\n  /**\n   * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n   * implies we are about to relinquish VM turn.\n   * This event gets called just once.\n   */\n  readonly onStable: EventEmitter<any> = new EventEmitter(false);\n\n  /**\n   * Notifies that an error has been delivered.\n   */\n  readonly onError: EventEmitter<any> = new EventEmitter(false);\n\n  constructor({enableLongStackTrace = false}) {\n    if (typeof Zone == 'undefined') {\n      throw new Error(`In this configuration Angular requires Zone.js`);\n    }\n\n    Zone.assertZonePatched();\n    const self = this as any as NgZonePrivate;\n    self._nesting = 0;\n\n    self._outer = self._inner = Zone.current;\n\n    if ((Zone as any)['wtfZoneSpec']) {\n      self._inner = self._inner.fork((Zone as any)['wtfZoneSpec']);\n    }\n\n    if ((Zone as any)['TaskTrackingZoneSpec']) {\n      self._inner = self._inner.fork(new ((Zone as any)['TaskTrackingZoneSpec'] as any));\n    }\n\n    if (enableLongStackTrace && (Zone as any)['longStackTraceZoneSpec']) {\n      self._inner = self._inner.fork((Zone as any)['longStackTraceZoneSpec']);\n    }\n\n    forkInnerZoneWithAngularBehavior(self);\n  }\n\n  static isInAngularZone(): boolean { return Zone.current.get('isAngularZone') === true; }\n\n  static assertInAngularZone(): void {\n    if (!NgZone.isInAngularZone()) {\n      throw new Error('Expected to be in Angular Zone, but it is not!');\n    }\n  }\n\n  static assertNotInAngularZone(): void {\n    if (NgZone.isInAngularZone()) {\n      throw new Error('Expected to not be in Angular Zone, but it is!');\n    }\n  }\n\n  /**\n   * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n   * the function.\n   *\n   * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n   * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n   *\n   * Any future tasks or microtasks scheduled from within this function will continue executing from\n   * within the Angular zone.\n   *\n   * If a synchronous error happens it will be rethrown and not reported via `onError`.\n   */\n  run<T>(fn: (...args: any[]) => T, applyThis?: any, applyArgs?: any[]): T {\n    return (this as any as NgZonePrivate)._inner.run(fn, applyThis, applyArgs) as T;\n  }\n\n  /**\n   * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n   * returned by the function.\n   *\n   * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n   * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n   *\n   * Any future tasks or microtasks scheduled from within this function will continue executing from\n   * within the Angular zone.\n   *\n   * If a synchronous error happens it will be rethrown and not reported via `onError`.\n   */\n  runTask<T>(fn: (...args: any[]) => T, applyThis?: any, applyArgs?: any[], name?: string): T {\n    const zone = (this as any as NgZonePrivate)._inner;\n    const task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n    try {\n      return zone.runTask(task, applyThis, applyArgs) as T;\n    } finally {\n      zone.cancelTask(task);\n    }\n  }\n\n  /**\n   * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n   * rethrown.\n   */\n  runGuarded<T>(fn: (...args: any[]) => T, applyThis?: any, applyArgs?: any[]): T {\n    return (this as any as NgZonePrivate)._inner.runGuarded(fn, applyThis, applyArgs) as T;\n  }\n\n  /**\n   * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n   * the function.\n   *\n   * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n   * work that\n   * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n   *\n   * Any future tasks or microtasks scheduled from within this function will continue executing from\n   * outside of the Angular zone.\n   *\n   * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n   */\n  runOutsideAngular<T>(fn: (...args: any[]) => T): T {\n    return (this as any as NgZonePrivate)._outer.run(fn) as T;\n  }\n}\n\nfunction noop() {}\nconst EMPTY_PAYLOAD = {};\n\n\ninterface NgZonePrivate extends NgZone {\n  _outer: Zone;\n  _inner: Zone;\n  _nesting: number;\n\n  hasPendingMicrotasks: boolean;\n  hasPendingMacrotasks: boolean;\n  isStable: boolean;\n}\n\nfunction checkStable(zone: NgZonePrivate) {\n  if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n    try {\n      zone._nesting++;\n      zone.onMicrotaskEmpty.emit(null);\n    } finally {\n      zone._nesting--;\n      if (!zone.hasPendingMicrotasks) {\n        try {\n          zone.runOutsideAngular(() => zone.onStable.emit(null));\n        } finally {\n          zone.isStable = true;\n        }\n      }\n    }\n  }\n}\n\nfunction forkInnerZoneWithAngularBehavior(zone: NgZonePrivate) {\n  zone._inner = zone._inner.fork({\n    name: 'angular',\n    properties: <any>{'isAngularZone': true},\n    onInvokeTask: (delegate: ZoneDelegate, current: Zone, target: Zone, task: Task, applyThis: any,\n                   applyArgs: any): any => {\n      try {\n        onEnter(zone);\n        return delegate.invokeTask(target, task, applyThis, applyArgs);\n      } finally {\n        onLeave(zone);\n      }\n    },\n\n\n    onInvoke: (delegate: ZoneDelegate, current: Zone, target: Zone, callback: Function,\n               applyThis: any, applyArgs: any[], source: string): any => {\n      try {\n        onEnter(zone);\n        return delegate.invoke(target, callback, applyThis, applyArgs, source);\n      } finally {\n        onLeave(zone);\n      }\n    },\n\n    onHasTask:\n        (delegate: ZoneDelegate, current: Zone, target: Zone, hasTaskState: HasTaskState) => {\n          delegate.hasTask(target, hasTaskState);\n          if (current === target) {\n            // We are only interested in hasTask events which originate from our zone\n            // (A child hasTask event is not interesting to us)\n            if (hasTaskState.change == 'microTask') {\n              zone.hasPendingMicrotasks = hasTaskState.microTask;\n              checkStable(zone);\n            } else if (hasTaskState.change == 'macroTask') {\n              zone.hasPendingMacrotasks = hasTaskState.macroTask;\n            }\n          }\n        },\n\n    onHandleError: (delegate: ZoneDelegate, current: Zone, target: Zone, error: any): boolean => {\n      delegate.handleError(target, error);\n      zone.runOutsideAngular(() => zone.onError.emit(error));\n      return false;\n    }\n  });\n}\n\nfunction onEnter(zone: NgZonePrivate) {\n  zone._nesting++;\n  if (zone.isStable) {\n    zone.isStable = false;\n    zone.onUnstable.emit(null);\n  }\n}\n\nfunction onLeave(zone: NgZonePrivate) {\n  zone._nesting--;\n  checkStable(zone);\n}\n\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n */\nexport class NoopNgZone implements NgZone {\n  readonly hasPendingMicrotasks: boolean = false;\n  readonly hasPendingMacrotasks: boolean = false;\n  readonly isStable: boolean = true;\n  readonly onUnstable: EventEmitter<any> = new EventEmitter();\n  readonly onMicrotaskEmpty: EventEmitter<any> = new EventEmitter();\n  readonly onStable: EventEmitter<any> = new EventEmitter();\n  readonly onError: EventEmitter<any> = new EventEmitter();\n\n  run(fn: () => any): any { return fn(); }\n\n  runGuarded(fn: () => any): any { return fn(); }\n\n  runOutsideAngular(fn: () => any): any { return fn(); }\n\n  runTask<T>(fn: () => any): any { return fn(); }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '../di';\nimport {scheduleMicroTask} from '../util';\nimport {NgZone} from '../zone/ng_zone';\n\n/**\n * Testability API.\n * `declare` keyword causes tsickle to generate externs, so these methods are\n * not renamed by Closure Compiler.\n * @publicApi\n */\nexport declare interface PublicTestability {\n  isStable(): boolean;\n  whenStable(callback: Function, timeout?: number, updateCallback?: Function): void;\n  findProviders(using: any, provider: string, exactMatch: boolean): any[];\n}\n\n// Angular internal, not intended for public API.\nexport interface PendingMacrotask {\n  source: string;\n  creationLocation: Error;\n  runCount?: number;\n  data: TaskData;\n}\n\nexport interface TaskData {\n  target?: XMLHttpRequest;\n  delay?: number;\n  isPeriodic?: boolean;\n}\n\n// Angular internal, not intended for public API.\nexport type DoneCallback = (didWork: boolean, tasks?: PendingMacrotask[]) => void;\nexport type UpdateCallback = (tasks: PendingMacrotask[]) => boolean;\n\ninterface WaitCallback {\n  // Needs to be 'any' - setTimeout returns a number according to ES6, but\n  // on NodeJS it returns a Timer.\n  timeoutId: any;\n  doneCb: DoneCallback;\n  updateCb?: UpdateCallback;\n}\n\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * @publicApi\n */\n@Injectable()\nexport class Testability implements PublicTestability {\n  private _pendingCount: number = 0;\n  private _isZoneStable: boolean = true;\n  /**\n   * Whether any work was done since the last 'whenStable' callback. This is\n   * useful to detect if this could have potentially destabilized another\n   * component while it is stabilizing.\n   * @internal\n   */\n  private _didWork: boolean = false;\n  private _callbacks: WaitCallback[] = [];\n\n  private taskTrackingZone: {macroTasks: Task[]}|null = null;\n\n  constructor(private _ngZone: NgZone) {\n    this._watchAngularEvents();\n    _ngZone.run(() => {\n      this.taskTrackingZone =\n          typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n    });\n  }\n\n  private _watchAngularEvents(): void {\n    this._ngZone.onUnstable.subscribe({\n      next: () => {\n        this._didWork = true;\n        this._isZoneStable = false;\n      }\n    });\n\n    this._ngZone.runOutsideAngular(() => {\n      this._ngZone.onStable.subscribe({\n        next: () => {\n          NgZone.assertNotInAngularZone();\n          scheduleMicroTask(() => {\n            this._isZoneStable = true;\n            this._runCallbacksIfReady();\n          });\n        }\n      });\n    });\n  }\n\n  /**\n   * Increases the number of pending request\n   * @deprecated pending requests are now tracked with zones.\n   */\n  increasePendingRequestCount(): number {\n    this._pendingCount += 1;\n    this._didWork = true;\n    return this._pendingCount;\n  }\n\n  /**\n   * Decreases the number of pending request\n   * @deprecated pending requests are now tracked with zones\n   */\n  decreasePendingRequestCount(): number {\n    this._pendingCount -= 1;\n    if (this._pendingCount < 0) {\n      throw new Error('pending async requests below zero');\n    }\n    this._runCallbacksIfReady();\n    return this._pendingCount;\n  }\n\n  /**\n   * Whether an associated application is stable\n   */\n  isStable(): boolean {\n    return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n  }\n\n  private _runCallbacksIfReady(): void {\n    if (this.isStable()) {\n      // Schedules the call backs in a new frame so that it is always async.\n      scheduleMicroTask(() => {\n        while (this._callbacks.length !== 0) {\n          let cb = this._callbacks.pop() !;\n          clearTimeout(cb.timeoutId);\n          cb.doneCb(this._didWork);\n        }\n        this._didWork = false;\n      });\n    } else {\n      // Still not stable, send updates.\n      let pending = this.getPendingTasks();\n      this._callbacks = this._callbacks.filter((cb) => {\n        if (cb.updateCb && cb.updateCb(pending)) {\n          clearTimeout(cb.timeoutId);\n          return false;\n        }\n\n        return true;\n      });\n\n      this._didWork = true;\n    }\n  }\n\n  private getPendingTasks(): PendingMacrotask[] {\n    if (!this.taskTrackingZone) {\n      return [];\n    }\n\n    // Copy the tasks data so that we don't leak tasks.\n    return this.taskTrackingZone.macroTasks.map((t: Task) => {\n      return {\n        source: t.source,\n        // From TaskTrackingZone:\n        // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n        creationLocation: (t as any).creationLocation as Error,\n        data: t.data\n      };\n    });\n  }\n\n  private addCallback(cb: DoneCallback, timeout?: number, updateCb?: UpdateCallback) {\n    let timeoutId: any = -1;\n    if (timeout && timeout > 0) {\n      timeoutId = setTimeout(() => {\n        this._callbacks = this._callbacks.filter((cb) => cb.timeoutId !== timeoutId);\n        cb(this._didWork, this.getPendingTasks());\n      }, timeout);\n    }\n    this._callbacks.push(<WaitCallback>{doneCb: cb, timeoutId: timeoutId, updateCb: updateCb});\n  }\n\n  /**\n   * Wait for the application to be stable with a timeout. If the timeout is reached before that\n   * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n   *\n   * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n   *    whichever comes first.\n   * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n   *    specified, whenStable() will wait forever.\n   * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n   *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n   *    and no further updates will be issued.\n   */\n  whenStable(doneCb: Function, timeout?: number, updateCb?: Function): void {\n    if (updateCb && !this.taskTrackingZone) {\n      throw new Error(\n          'Task tracking zone is required when passing an update callback to ' +\n          'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n    }\n    // These arguments are 'Function' above to keep the public API simple.\n    this.addCallback(doneCb as DoneCallback, timeout, updateCb as UpdateCallback);\n    this._runCallbacksIfReady();\n  }\n\n  /**\n   * Get the number of pending requests\n   * @deprecated pending requests are now tracked with zones\n   */\n  getPendingRequestCount(): number { return this._pendingCount; }\n\n  /**\n   * Find providers by name\n   * @param using The root element to search from\n   * @param provider The name of binding variable\n   * @param exactMatch Whether using exactMatch\n   */\n  findProviders(using: any, provider: string, exactMatch: boolean): any[] {\n    // TODO(juliemr): implement.\n    return [];\n  }\n}\n\n/**\n * A global registry of {@link Testability} instances for specific elements.\n * @publicApi\n */\n@Injectable()\nexport class TestabilityRegistry {\n  /** @internal */\n  _applications = new Map<any, Testability>();\n\n  constructor() { _testabilityGetter.addToWindow(this); }\n\n  /**\n   * Registers an application with a testability hook so that it can be tracked\n   * @param token token of application, root element\n   * @param testability Testability hook\n   */\n  registerApplication(token: any, testability: Testability) {\n    this._applications.set(token, testability);\n  }\n\n  /**\n   * Unregisters an application.\n   * @param token token of application, root element\n   */\n  unregisterApplication(token: any) { this._applications.delete(token); }\n\n  /**\n   * Unregisters all applications\n   */\n  unregisterAllApplications() { this._applications.clear(); }\n\n  /**\n   * Get a testability hook associated with the application\n   * @param elem root element\n   */\n  getTestability(elem: any): Testability|null { return this._applications.get(elem) || null; }\n\n  /**\n   * Get all registered testabilities\n   */\n  getAllTestabilities(): Testability[] { return Array.from(this._applications.values()); }\n\n  /**\n   * Get all registered applications(root elements)\n   */\n  getAllRootElements(): any[] { return Array.from(this._applications.keys()); }\n\n  /**\n   * Find testability of a node in the Tree\n   * @param elem node\n   * @param findInAncestors whether finding testability in ancestors if testability was not found in\n   * current node\n   */\n  findTestabilityInTree(elem: Node, findInAncestors: boolean = true): Testability|null {\n    return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n  }\n}\n\n/**\n * Adapter interface for retrieving the `Testability` service associated for a\n * particular context.\n *\n * @publicApi\n */\nexport interface GetTestability {\n  addToWindow(registry: TestabilityRegistry): void;\n  findTestabilityInTree(registry: TestabilityRegistry, elem: any, findInAncestors: boolean):\n      Testability|null;\n}\n\nclass _NoopGetTestability implements GetTestability {\n  addToWindow(registry: TestabilityRegistry): void {}\n  findTestabilityInTree(registry: TestabilityRegistry, elem: any, findInAncestors: boolean):\n      Testability|null {\n    return null;\n  }\n}\n\n/**\n * Set the {@link GetTestability} implementation used by the Angular testing framework.\n * @publicApi\n */\nexport function setTestabilityGetter(getter: GetTestability): void {\n  _testabilityGetter = getter;\n}\n\nlet _testabilityGetter: GetTestability = new _NoopGetTestability();\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable, Observer, Subscription, merge} from 'rxjs';\nimport {share} from 'rxjs/operators';\n\nimport {ApplicationInitStatus} from './application_init';\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_INITIALIZER} from './application_tokens';\nimport {Console} from './console';\nimport {Injectable, InjectionToken, Injector, StaticProvider} from './di';\nimport {ErrorHandler} from './error_handler';\nimport {isDevMode} from './is_dev_mode';\nimport {CompilerFactory, CompilerOptions} from './linker/compiler';\nimport {ComponentFactory, ComponentRef} from './linker/component_factory';\nimport {ComponentFactoryBoundToModule, ComponentFactoryResolver} from './linker/component_factory_resolver';\nimport {InternalNgModuleRef, NgModuleFactory, NgModuleRef} from './linker/ng_module_factory';\nimport {InternalViewRef, ViewRef} from './linker/view_ref';\nimport {WtfScopeFn, wtfCreateScope, wtfLeave} from './profile/profile';\nimport {assertNgModuleType} from './render3/assert';\nimport {NgModuleFactory as R3NgModuleFactory} from './render3/ng_module_ref';\nimport {Testability, TestabilityRegistry} from './testability/testability';\nimport {Type} from './type';\nimport {scheduleMicroTask, stringify} from './util';\nimport {isPromise} from './util/lang';\nimport {NgZone, NoopNgZone} from './zone/ng_zone';\n\nlet _platform: PlatformRef;\n\nlet compileNgModuleFactory:\n    <M>(injector: Injector, options: CompilerOptions, moduleType: Type<M>) =>\n        Promise<NgModuleFactory<M>> = compileNgModuleFactory__PRE_R3__;\n\nfunction compileNgModuleFactory__PRE_R3__<M>(\n    injector: Injector, options: CompilerOptions,\n    moduleType: Type<M>): Promise<NgModuleFactory<M>> {\n  const compilerFactory: CompilerFactory = injector.get(CompilerFactory);\n  const compiler = compilerFactory.createCompiler([options]);\n  return compiler.compileModuleAsync(moduleType);\n}\n\nexport function compileNgModuleFactory__POST_R3__<M>(\n    injector: Injector, options: CompilerOptions,\n    moduleType: Type<M>): Promise<NgModuleFactory<M>> {\n  ngDevMode && assertNgModuleType(moduleType);\n  return Promise.resolve(new R3NgModuleFactory(moduleType));\n}\n\nexport const ALLOW_MULTIPLE_PLATFORMS = new InjectionToken<boolean>('AllowMultipleToken');\n\n\n\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * @publicApi\n */\nexport class NgProbeToken {\n  constructor(public name: string, public token: any) {}\n}\n\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * @publicApi\n */\nexport function createPlatform(injector: Injector): PlatformRef {\n  if (_platform && !_platform.destroyed &&\n      !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n    throw new Error(\n        'There can be only one platform. Destroy the previous one to create a new one.');\n  }\n  _platform = injector.get(PlatformRef);\n  const inits = injector.get(PLATFORM_INITIALIZER, null);\n  if (inits) inits.forEach((init: any) => init());\n  return _platform;\n}\n\n/**\n * Creates a factory for a platform\n *\n * @publicApi\n */\nexport function createPlatformFactory(\n    parentPlatformFactory: ((extraProviders?: StaticProvider[]) => PlatformRef) | null,\n    name: string, providers: StaticProvider[] = []): (extraProviders?: StaticProvider[]) =>\n    PlatformRef {\n  const desc = `Platform: ${name}`;\n  const marker = new InjectionToken(desc);\n  return (extraProviders: StaticProvider[] = []) => {\n    let platform = getPlatform();\n    if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n      if (parentPlatformFactory) {\n        parentPlatformFactory(\n            providers.concat(extraProviders).concat({provide: marker, useValue: true}));\n      } else {\n        const injectedProviders: StaticProvider[] =\n            providers.concat(extraProviders).concat({provide: marker, useValue: true});\n        createPlatform(Injector.create({providers: injectedProviders, name: desc}));\n      }\n    }\n    return assertPlatform(marker);\n  };\n}\n\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * @publicApi\n */\nexport function assertPlatform(requiredToken: any): PlatformRef {\n  const platform = getPlatform();\n\n  if (!platform) {\n    throw new Error('No platform exists!');\n  }\n\n  if (!platform.injector.get(requiredToken, null)) {\n    throw new Error(\n        'A platform with a different configuration has been created. Please destroy it first.');\n  }\n\n  return platform;\n}\n\n/**\n * Destroy the existing platform.\n *\n * @publicApi\n */\nexport function destroyPlatform(): void {\n  if (_platform && !_platform.destroyed) {\n    _platform.destroy();\n  }\n}\n\n/**\n * Returns the current platform.\n *\n * @publicApi\n */\nexport function getPlatform(): PlatformRef|null {\n  return _platform && !_platform.destroyed ? _platform : null;\n}\n\n/**\n * Provides additional options to the bootstraping process.\n *\n *\n */\nexport interface BootstrapOptions {\n  /**\n   * Optionally specify which `NgZone` should be used.\n   *\n   * - Provide your own `NgZone` instance.\n   * - `zone.js` - Use default `NgZone` which requires `Zone.js`.\n   * - `noop` - Use `NoopNgZone` which does nothing.\n   */\n  ngZone?: NgZone|'zone.js'|'noop';\n}\n\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n *\n * @publicApi\n */\n@Injectable()\nexport class PlatformRef {\n  private _modules: NgModuleRef<any>[] = [];\n  private _destroyListeners: Function[] = [];\n  private _destroyed: boolean = false;\n\n  /** @internal */\n  constructor(private _injector: Injector) {}\n\n  /**\n   * Creates an instance of an `@NgModule` for the given platform\n   * for offline compilation.\n   *\n   * @usageNotes\n   * ### Simple Example\n   *\n   * ```typescript\n   * my_module.ts:\n   *\n   * @NgModule({\n   *   imports: [BrowserModule]\n   * })\n   * class MyModule {}\n   *\n   * main.ts:\n   * import {MyModuleNgFactory} from './my_module.ngfactory';\n   * import {platformBrowser} from '@angular/platform-browser';\n   *\n   * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n   * ```\n   */\n  bootstrapModuleFactory<M>(moduleFactory: NgModuleFactory<M>, options?: BootstrapOptions):\n      Promise<NgModuleRef<M>> {\n    // Note: We need to create the NgZone _before_ we instantiate the module,\n    // as instantiating the module creates some providers eagerly.\n    // So we create a mini parent injector that just contains the new NgZone and\n    // pass that as parent to the NgModuleFactory.\n    const ngZoneOption = options ? options.ngZone : undefined;\n    const ngZone = getNgZone(ngZoneOption);\n    const providers: StaticProvider[] = [{provide: NgZone, useValue: ngZone}];\n    // Attention: Don't use ApplicationRef.run here,\n    // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n    return ngZone.run(() => {\n      const ngZoneInjector = Injector.create(\n          {providers: providers, parent: this.injector, name: moduleFactory.moduleType.name});\n      const moduleRef = <InternalNgModuleRef<M>>moduleFactory.create(ngZoneInjector);\n      const exceptionHandler: ErrorHandler = moduleRef.injector.get(ErrorHandler, null);\n      if (!exceptionHandler) {\n        throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n      }\n      moduleRef.onDestroy(() => remove(this._modules, moduleRef));\n      ngZone !.runOutsideAngular(\n          () => ngZone !.onError.subscribe(\n              {next: (error: any) => { exceptionHandler.handleError(error); }}));\n      return _callAndReportToErrorHandler(exceptionHandler, ngZone !, () => {\n        const initStatus: ApplicationInitStatus = moduleRef.injector.get(ApplicationInitStatus);\n        initStatus.runInitializers();\n        return initStatus.donePromise.then(() => {\n          this._moduleDoBootstrap(moduleRef);\n          return moduleRef;\n        });\n      });\n    });\n  }\n\n  /**\n   * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n   *\n   * @usageNotes\n   * ### Simple Example\n   *\n   * ```typescript\n   * @NgModule({\n   *   imports: [BrowserModule]\n   * })\n   * class MyModule {}\n   *\n   * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n   * ```\n   *\n   */\n  bootstrapModule<M>(\n      moduleType: Type<M>, compilerOptions: (CompilerOptions&BootstrapOptions)|\n      Array<CompilerOptions&BootstrapOptions> = []): Promise<NgModuleRef<M>> {\n    const options = optionsReducer({}, compilerOptions);\n    return compileNgModuleFactory(this.injector, options, moduleType)\n        .then(moduleFactory => this.bootstrapModuleFactory(moduleFactory, options));\n  }\n\n  private _moduleDoBootstrap(moduleRef: InternalNgModuleRef<any>): void {\n    const appRef = moduleRef.injector.get(ApplicationRef) as ApplicationRef;\n    if (moduleRef._bootstrapComponents.length > 0) {\n      moduleRef._bootstrapComponents.forEach(f => appRef.bootstrap(f));\n    } else if (moduleRef.instance.ngDoBootstrap) {\n      moduleRef.instance.ngDoBootstrap(appRef);\n    } else {\n      throw new Error(\n          `The module ${stringify(moduleRef.instance.constructor)} was bootstrapped, but it does not declare \"@NgModule.bootstrap\" components nor a \"ngDoBootstrap\" method. ` +\n          `Please define one of these.`);\n    }\n    this._modules.push(moduleRef);\n  }\n\n  /**\n   * Register a listener to be called when the platform is disposed.\n   */\n  onDestroy(callback: () => void): void { this._destroyListeners.push(callback); }\n\n  /**\n   * Retrieve the platform {@link Injector}, which is the parent injector for\n   * every Angular application on the page and provides singleton providers.\n   */\n  get injector(): Injector { return this._injector; }\n\n  /**\n   * Destroy the Angular platform and all Angular applications on the page.\n   */\n  destroy() {\n    if (this._destroyed) {\n      throw new Error('The platform has already been destroyed!');\n    }\n    this._modules.slice().forEach(module => module.destroy());\n    this._destroyListeners.forEach(listener => listener());\n    this._destroyed = true;\n  }\n\n  get destroyed() { return this._destroyed; }\n}\n\nfunction getNgZone(ngZoneOption?: NgZone | 'zone.js' | 'noop'): NgZone {\n  let ngZone: NgZone;\n\n  if (ngZoneOption === 'noop') {\n    ngZone = new NoopNgZone();\n  } else {\n    ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n        new NgZone({enableLongStackTrace: isDevMode()});\n  }\n  return ngZone;\n}\n\nfunction _callAndReportToErrorHandler(\n    errorHandler: ErrorHandler, ngZone: NgZone, callback: () => any): any {\n  try {\n    const result = callback();\n    if (isPromise(result)) {\n      return result.catch((e: any) => {\n        ngZone.runOutsideAngular(() => errorHandler.handleError(e));\n        // rethrow as the exception handler might not do it\n        throw e;\n      });\n    }\n\n    return result;\n  } catch (e) {\n    ngZone.runOutsideAngular(() => errorHandler.handleError(e));\n    // rethrow as the exception handler might not do it\n    throw e;\n  }\n}\n\nfunction optionsReducer<T extends Object>(dst: any, objs: T | T[]): T {\n  if (Array.isArray(objs)) {\n    dst = objs.reduce(optionsReducer, dst);\n  } else {\n    dst = {...dst, ...(objs as any)};\n  }\n  return dst;\n}\n\n/**\n * A reference to an Angular application running on a page.\n *\n * @usageNotes\n *\n * {@a is-stable-examples}\n * ### isStable examples and caveats\n *\n * Note two important points about `isStable`, demonstrated in the examples below:\n * - the application will never be stable if you start any kind\n * of recurrent asynchronous task when the application starts\n * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n * or using RxJS operators like `interval`);\n * - the `isStable` Observable runs outside of the Angular zone.\n *\n * Let's imagine that you start a recurrent task\n * (here incrementing a counter, using RxJS `interval`),\n * and at the same time subscribe to `isStable`.\n *\n * ```\n * constructor(appRef: ApplicationRef) {\n *   appRef.isStable.pipe(\n *      filter(stable => stable)\n *   ).subscribe(() => console.log('App is stable now');\n *   interval(1000).subscribe(counter => console.log(counter));\n * }\n * ```\n * In this example, `isStable` will never emit `true`,\n * and the trace \"App is stable now\" will never get logged.\n *\n * If you want to execute something when the app is stable,\n * you have to wait for the application to be stable\n * before starting your polling process.\n *\n * ```\n * constructor(appRef: ApplicationRef) {\n *   appRef.isStable.pipe(\n *     first(stable => stable),\n *     tap(stable => console.log('App is stable now')),\n *     switchMap(() => interval(1000))\n *   ).subscribe(counter => console.log(counter));\n * }\n * ```\n * In this example, the trace \"App is stable now\" will be logged\n * and then the counter starts incrementing every second.\n *\n * Note also that this Observable runs outside of the Angular zone,\n * which means that the code in the subscription\n * to this Observable will not trigger the change detection.\n *\n * Let's imagine that instead of logging the counter value,\n * you update a field of your component\n * and display it in its template.\n *\n * ```\n * constructor(appRef: ApplicationRef) {\n *   appRef.isStable.pipe(\n *     first(stable => stable),\n *     switchMap(() => interval(1000))\n *   ).subscribe(counter => this.value = counter);\n * }\n * ```\n * As the `isStable` Observable runs outside the zone,\n * the `value` field will be updated properly,\n * but the template will not be refreshed!\n *\n * You'll have to manually trigger the change detection to update the template.\n *\n * ```\n * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n *   appRef.isStable.pipe(\n *     first(stable => stable),\n *     switchMap(() => interval(1000))\n *   ).subscribe(counter => {\n *     this.value = counter;\n *     cd.detectChanges();\n *   });\n * }\n * ```\n *\n * Or make the subscription callback run inside the zone.\n *\n * ```\n * constructor(appRef: ApplicationRef, zone: NgZone) {\n *   appRef.isStable.pipe(\n *     first(stable => stable),\n *     switchMap(() => interval(1000))\n *   ).subscribe(counter => zone.run(() => this.value = counter));\n * }\n * ```\n *\n * @publicApi\n */\n@Injectable()\nexport class ApplicationRef {\n  /** @internal */\n  static _tickScope: WtfScopeFn = wtfCreateScope('ApplicationRef#tick()');\n  private _bootstrapListeners: ((compRef: ComponentRef<any>) => void)[] = [];\n  private _views: InternalViewRef[] = [];\n  private _runningTick: boolean = false;\n  private _enforceNoNewChanges: boolean = false;\n  private _stable = true;\n\n  /**\n   * Get a list of component types registered to this application.\n   * This list is populated even before the component is created.\n   */\n  public readonly componentTypes: Type<any>[] = [];\n\n  /**\n   * Get a list of components registered to this application.\n   */\n  public readonly components: ComponentRef<any>[] = [];\n\n  /**\n   * Returns an Observable that indicates when the application is stable or unstable.\n   *\n   * @see  [Usage notes](#is-stable-examples) for examples and caveats when using this API.\n   */\n  // TODO(issue/24571): remove '!'.\n  public readonly isStable !: Observable<boolean>;\n\n  /** @internal */\n  constructor(\n      private _zone: NgZone, private _console: Console, private _injector: Injector,\n      private _exceptionHandler: ErrorHandler,\n      private _componentFactoryResolver: ComponentFactoryResolver,\n      private _initStatus: ApplicationInitStatus) {\n    this._enforceNoNewChanges = isDevMode();\n\n    this._zone.onMicrotaskEmpty.subscribe(\n        {next: () => { this._zone.run(() => { this.tick(); }); }});\n\n    const isCurrentlyStable = new Observable<boolean>((observer: Observer<boolean>) => {\n      this._stable = this._zone.isStable && !this._zone.hasPendingMacrotasks &&\n          !this._zone.hasPendingMicrotasks;\n      this._zone.runOutsideAngular(() => {\n        observer.next(this._stable);\n        observer.complete();\n      });\n    });\n\n    const isStable = new Observable<boolean>((observer: Observer<boolean>) => {\n      // Create the subscription to onStable outside the Angular Zone so that\n      // the callback is run outside the Angular Zone.\n      let stableSub: Subscription;\n      this._zone.runOutsideAngular(() => {\n        stableSub = this._zone.onStable.subscribe(() => {\n          NgZone.assertNotInAngularZone();\n\n          // Check whether there are no pending macro/micro tasks in the next tick\n          // to allow for NgZone to update the state.\n          scheduleMicroTask(() => {\n            if (!this._stable && !this._zone.hasPendingMacrotasks &&\n                !this._zone.hasPendingMicrotasks) {\n              this._stable = true;\n              observer.next(true);\n            }\n          });\n        });\n      });\n\n      const unstableSub: Subscription = this._zone.onUnstable.subscribe(() => {\n        NgZone.assertInAngularZone();\n        if (this._stable) {\n          this._stable = false;\n          this._zone.runOutsideAngular(() => { observer.next(false); });\n        }\n      });\n\n      return () => {\n        stableSub.unsubscribe();\n        unstableSub.unsubscribe();\n      };\n    });\n\n    (this as{isStable: Observable<boolean>}).isStable =\n        merge(isCurrentlyStable, isStable.pipe(share()));\n  }\n\n  /**\n   * Bootstrap a new component at the root level of the application.\n   *\n   * @usageNotes\n   * ### Bootstrap process\n   *\n   * When bootstrapping a new root component into an application, Angular mounts the\n   * specified application component onto DOM elements identified by the componentType's\n   * selector and kicks off automatic change detection to finish initializing the component.\n   *\n   * Optionally, a component can be mounted onto a DOM element that does not match the\n   * componentType's selector.\n   *\n   * ### Example\n   * {@example core/ts/platform/platform.ts region='longform'}\n   */\n  bootstrap<C>(componentOrFactory: ComponentFactory<C>|Type<C>, rootSelectorOrNode?: string|any):\n      ComponentRef<C> {\n    if (!this._initStatus.done) {\n      throw new Error(\n          'Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n    }\n    let componentFactory: ComponentFactory<C>;\n    if (componentOrFactory instanceof ComponentFactory) {\n      componentFactory = componentOrFactory;\n    } else {\n      componentFactory =\n          this._componentFactoryResolver.resolveComponentFactory(componentOrFactory) !;\n    }\n    this.componentTypes.push(componentFactory.componentType);\n\n    // Create a factory associated with the current module if it's not bound to some other\n    const ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n        null :\n        this._injector.get(NgModuleRef);\n    const selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n    const compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n\n    compRef.onDestroy(() => { this._unloadComponent(compRef); });\n    const testability = compRef.injector.get(Testability, null);\n    if (testability) {\n      compRef.injector.get(TestabilityRegistry)\n          .registerApplication(compRef.location.nativeElement, testability);\n    }\n\n    this._loadComponent(compRef);\n    if (isDevMode()) {\n      this._console.log(\n          `Angular is running in the development mode. Call enableProdMode() to enable the production mode.`);\n    }\n    return compRef;\n  }\n\n  /**\n   * Invoke this method to explicitly process change detection and its side-effects.\n   *\n   * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n   * further changes are detected. If additional changes are picked up during this second cycle,\n   * bindings in the app have side-effects that cannot be resolved in a single change detection\n   * pass.\n   * In this case, Angular throws an error, since an Angular application can only have one change\n   * detection pass during which all change detection must complete.\n   */\n  tick(): void {\n    if (this._runningTick) {\n      throw new Error('ApplicationRef.tick is called recursively');\n    }\n\n    const scope = ApplicationRef._tickScope();\n    try {\n      this._runningTick = true;\n      this._views.forEach((view) => view.detectChanges());\n      if (this._enforceNoNewChanges) {\n        this._views.forEach((view) => view.checkNoChanges());\n      }\n    } catch (e) {\n      // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n      this._zone.runOutsideAngular(() => this._exceptionHandler.handleError(e));\n    } finally {\n      this._runningTick = false;\n      wtfLeave(scope);\n    }\n  }\n\n  /**\n   * Attaches a view so that it will be dirty checked.\n   * The view will be automatically detached when it is destroyed.\n   * This will throw if the view is already attached to a ViewContainer.\n   */\n  attachView(viewRef: ViewRef): void {\n    const view = (viewRef as InternalViewRef);\n    this._views.push(view);\n    view.attachToAppRef(this);\n  }\n\n  /**\n   * Detaches a view from dirty checking again.\n   */\n  detachView(viewRef: ViewRef): void {\n    const view = (viewRef as InternalViewRef);\n    remove(this._views, view);\n    view.detachFromAppRef();\n  }\n\n  private _loadComponent(componentRef: ComponentRef<any>): void {\n    this.attachView(componentRef.hostView);\n    this.tick();\n    this.components.push(componentRef);\n    // Get the listeners lazily to prevent DI cycles.\n    const listeners =\n        this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n    listeners.forEach((listener) => listener(componentRef));\n  }\n\n  private _unloadComponent(componentRef: ComponentRef<any>): void {\n    this.detachView(componentRef.hostView);\n    remove(this.components, componentRef);\n  }\n\n  /** @internal */\n  ngOnDestroy() {\n    // TODO(alxhub): Dispose of the NgZone.\n    this._views.slice().forEach((view) => view.destroy());\n  }\n\n  /**\n   * Returns the number of attached views.\n   */\n  get viewCount() { return this._views.length; }\n}\n\nfunction remove<T>(list: T[], el: T): void {\n  const index = list.indexOf(el);\n  if (index > -1) {\n    list.splice(index, 1);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable} from 'rxjs';\n\nimport {EventEmitter} from '../event_emitter';\nimport {getSymbolIterator} from '../util';\n\n\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * @usageNotes\n * ### Example\n * ```typescript\n * @Component({...})\n * class Container {\n *   @ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n *\n * @publicApi\n */\nexport class QueryList<T>/* implements Iterable<T> */ {\n  public readonly dirty = true;\n  private _results: Array<T> = [];\n  public readonly changes: Observable<any> = new EventEmitter();\n\n  readonly length: number = 0;\n  // TODO(issue/24571): remove '!'.\n  readonly first !: T;\n  // TODO(issue/24571): remove '!'.\n  readonly last !: T;\n\n  /**\n   * See\n   * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n   */\n  map<U>(fn: (item: T, index: number, array: T[]) => U): U[] { return this._results.map(fn); }\n\n  /**\n   * See\n   * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n   */\n  filter(fn: (item: T, index: number, array: T[]) => boolean): T[] {\n    return this._results.filter(fn);\n  }\n\n  /**\n   * See\n   * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n   */\n  find(fn: (item: T, index: number, array: T[]) => boolean): T|undefined {\n    return this._results.find(fn);\n  }\n\n  /**\n   * See\n   * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n   */\n  reduce<U>(fn: (prevValue: U, curValue: T, curIndex: number, array: T[]) => U, init: U): U {\n    return this._results.reduce(fn, init);\n  }\n\n  /**\n   * See\n   * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n   */\n  forEach(fn: (item: T, index: number, array: T[]) => void): void { this._results.forEach(fn); }\n\n  /**\n   * See\n   * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n   */\n  some(fn: (value: T, index: number, array: T[]) => boolean): boolean {\n    return this._results.some(fn);\n  }\n\n  toArray(): T[] { return this._results.slice(); }\n\n  [getSymbolIterator()](): Iterator<T> { return (this._results as any)[getSymbolIterator()](); }\n\n  toString(): string { return this._results.toString(); }\n\n  reset(res: Array<T|any[]>): void {\n    this._results = flatten(res);\n    (this as{dirty: boolean}).dirty = false;\n    (this as{length: number}).length = this._results.length;\n    (this as{last: T}).last = this._results[this.length - 1];\n    (this as{first: T}).first = this._results[0];\n  }\n\n  notifyOnChanges(): void { (this.changes as EventEmitter<any>).emit(this); }\n\n  /** internal */\n  setDirty() { (this as{dirty: boolean}).dirty = true; }\n\n  /** internal */\n  destroy(): void {\n    (this.changes as EventEmitter<any>).complete();\n    (this.changes as EventEmitter<any>).unsubscribe();\n  }\n}\n\nfunction flatten<T>(list: Array<T|T[]>): T[] {\n  return list.reduce((flat: any[], item: T | T[]): T[] => {\n    const flatItem = Array.isArray(item) ? flatten(item) : item;\n    return (<T[]>flat).concat(flatItem);\n  }, []);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable, Optional} from '../di';\n\nimport {Compiler} from './compiler';\nimport {NgModuleFactory} from './ng_module_factory';\nimport {NgModuleFactoryLoader} from './ng_module_factory_loader';\n\nconst _SEPARATOR = '#';\n\nconst FACTORY_CLASS_SUFFIX = 'NgFactory';\ndeclare var System: any;\n\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n *\n * @publicApi\n */\nexport abstract class SystemJsNgModuleLoaderConfig {\n  /**\n   * Prefix to add when computing the name of the factory module for a given module name.\n   */\n  // TODO(issue/24571): remove '!'.\n  factoryPathPrefix !: string;\n\n  /**\n   * Suffix to add when computing the name of the factory module for a given module name.\n   */\n  // TODO(issue/24571): remove '!'.\n  factoryPathSuffix !: string;\n}\n\nconst DEFAULT_CONFIG: SystemJsNgModuleLoaderConfig = {\n  factoryPathPrefix: '',\n  factoryPathSuffix: '.ngfactory',\n};\n\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * @publicApi\n */\n@Injectable()\nexport class SystemJsNgModuleLoader implements NgModuleFactoryLoader {\n  private _config: SystemJsNgModuleLoaderConfig;\n\n  constructor(private _compiler: Compiler, @Optional() config?: SystemJsNgModuleLoaderConfig) {\n    this._config = config || DEFAULT_CONFIG;\n  }\n\n  load(path: string): Promise<NgModuleFactory<any>> {\n    const offlineMode = this._compiler instanceof Compiler;\n    return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n  }\n\n  private loadAndCompile(path: string): Promise<NgModuleFactory<any>> {\n    let [module, exportName] = path.split(_SEPARATOR);\n    if (exportName === undefined) {\n      exportName = 'default';\n    }\n\n    return System.import(module)\n        .then((module: any) => module[exportName])\n        .then((type: any) => checkNotEmpty(type, module, exportName))\n        .then((type: any) => this._compiler.compileModuleAsync(type));\n  }\n\n  private loadFactory(path: string): Promise<NgModuleFactory<any>> {\n    let [module, exportName] = path.split(_SEPARATOR);\n    let factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n    if (exportName === undefined) {\n      exportName = 'default';\n      factoryClassSuffix = '';\n    }\n\n    return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n        .then((module: any) => module[exportName + factoryClassSuffix])\n        .then((factory: any) => checkNotEmpty(factory, module, exportName));\n  }\n}\n\nfunction checkNotEmpty(value: any, modulePath: string, exportName: string): any {\n  if (!value) {\n    throw new Error(`Cannot find '${exportName}' in '${modulePath}'`);\n  }\n  return value;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {injectViewContainerRef as render3InjectViewContainerRef} from '../render3/view_engine_compatibility';\nimport {noop} from '../util/noop';\n\nimport {ComponentFactory, ComponentRef} from './component_factory';\nimport {ElementRef} from './element_ref';\nimport {NgModuleRef} from './ng_module_factory';\nimport {TemplateRef} from './template_ref';\nimport {EmbeddedViewRef, ViewRef} from './view_ref';\n\n\n/**\n * Represents a container where one or more views can be attached to a component.\n *\n * Can contain *host views* (created by instantiating a\n * component with the `createComponent()` method), and *embedded views*\n * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n *\n * A view container instance can contain other view containers,\n * creating a [view hierarchy](guide/glossary#view-tree).\n *\n * @see `ComponentRef`\n * @see `EmbeddedViewRef`\n *\n * @publicApi\n */\nexport abstract class ViewContainerRef {\n  /**\n   * Anchor element that specifies the location of this container in the containing view.\n   * Each view container can have only one anchor element, and each anchor element\n   * can have only a single view container.\n   *\n   * Root elements of views attached to this container become siblings of the anchor element in\n   * the rendered view.\n   *\n   * Access the `ViewContainerRef` of an element by placing a `Directive` injected\n   * with `ViewContainerRef` on the element, or use a `ViewChild` query.\n   *\n   * <!-- TODO: rename to anchorElement -->\n   */\n  abstract get element(): ElementRef;\n\n  /**\n   * The [dependency injector](guide/glossary#injector) for this view container.\n   */\n  abstract get injector(): Injector;\n\n  /** @deprecated No replacement */\n  abstract get parentInjector(): Injector;\n\n  /**\n   * Destroys all views in this container.\n   */\n  abstract clear(): void;\n\n  /**\n   * Retrieves a view from this container.\n   * @param index The 0-based index of the view to retrieve.\n   * @returns The `ViewRef` instance, or null if the index is out of range.\n   */\n  abstract get(index: number): ViewRef|null;\n\n  /**\n   * Reports how many views are currently attached to this container.\n   * @returns The number of views.\n   */\n  abstract get length(): number;\n\n  /**\n   * Instantiates an embedded view and inserts it\n   * into this container.\n   * @param templateRef The HTML template that defines the view.\n   * @param index The 0-based index at which to insert the new view into this container.\n   * If not specified, appends the new view as the last entry.\n   *\n   * @returns The `ViewRef` instance for the newly created view.\n   */\n  abstract createEmbeddedView<C>(templateRef: TemplateRef<C>, context?: C, index?: number):\n      EmbeddedViewRef<C>;\n\n  /**\n   * Instantiates a single component and inserts its host view into this container.\n   *\n   * @param componentFactory The factory to use.\n   * @param index The index at which to insert the new component's host view into this container.\n   * If not specified, appends the new view as the last entry.\n   * @param injector The injector to use as the parent for the new component.\n   * @param projectableNodes\n   * @param ngModule\n   *\n   * @returns The new component instance, containing the host view.\n   *\n   */\n  abstract createComponent<C>(\n      componentFactory: ComponentFactory<C>, index?: number, injector?: Injector,\n      projectableNodes?: any[][], ngModule?: NgModuleRef<any>): ComponentRef<C>;\n\n  /**\n   * Inserts a view into this container.\n   * @param viewRef The view to insert.\n   * @param index The 0-based index at which to insert the view.\n   * If not specified, appends the new view as the last entry.\n   * @returns The inserted `ViewRef` instance.\n   *\n   */\n  abstract insert(viewRef: ViewRef, index?: number): ViewRef;\n\n  /**\n   * Moves a view to a new location in this container.\n   * @param viewRef The view to move.\n   * @param index The 0-based index of the new location.\n   * @returns The moved `ViewRef` instance.\n   */\n  abstract move(viewRef: ViewRef, currentIndex: number): ViewRef;\n\n  /**\n   * Returns the index of a view within the current container.\n   * @param viewRef The view to query.\n   * @returns The 0-based index of the view's position in this container,\n   * or `-1` if this container doesn't contain the view.\n   */\n  abstract indexOf(viewRef: ViewRef): number;\n\n  /**\n   * Destroys a view attached to this container\n   * @param index The 0-based index of the view to destroy.\n   * If not specified, the last view in the container is removed.\n   */\n  abstract remove(index?: number): void;\n\n  /**\n   * Detaches a view from this container without destroying it.\n   * Use along with `insert()` to move a view within the current container.\n   * @param index The 0-based index of the view to detach.\n   * If not specified, the last view in the container is detached.\n   */\n  abstract detach(index?: number): ViewRef|null;\n\n  /** @internal */\n  static __NG_ELEMENT_ID__:\n      () => ViewContainerRef = () => SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef)\n}\n\nexport const SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = render3InjectViewContainerRef;\nconst SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\nconst SWITCH_VIEW_CONTAINER_REF_FACTORY: typeof render3InjectViewContainerRef =\n    SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {injectChangeDetectorRef as render3InjectChangeDetectorRef} from '../render3/view_engine_compatibility';\n\n/**\n * Base class for Angular Views, provides change detection functionality.\n * A change-detection tree collects all views that are to be checked for changes.\n * Use the methods to add and remove views from the tree, initiate change-detection,\n * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n *\n * @usageNotes\n *\n * The following examples demonstrate how to modify default change-detection behavior\n * to perform explicit detection when needed.\n *\n * ### Use `markForCheck()` with `CheckOnce` strategy\n *\n * The following example sets the `OnPush` change-detection strategy for a component\n * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n * region=\"mark-for-check\"></code-example>\n *\n * ### Detach change detector to limit how often check occurs\n *\n * The following example defines a component with a large list of read-only data\n * that is expected to change constantly, many times per second.\n * To improve performance, we want to check and update the list\n * less often than the changes actually occur. To do that, we detach\n * the component's change detector and perform an explicit local check every five seconds.\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n *\n *\n * ### Reattaching a detached component\n *\n * The following example creates a component displaying live data.\n * The component detaches its change detector from the main change detector tree\n * when the `live` property is set to false, and reattaches it when the property\n * becomes true.\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n *\n * @publicApi\n */\nexport abstract class ChangeDetectorRef {\n  /**\n   * When a view uses the {@link ChangeDetectionStrategy#OnPush OnPush} (checkOnce)\n   * change detection strategy, explicitly marks the view as changed so that\n   * it can be checked again.\n   *\n   * Components are normally marked as dirty (in need of rerendering) when inputs\n   * have changed or events have fired in the view. Call this method to ensure that\n   * a component is checked even if these triggers have not occured.\n   *\n   * <!-- TODO: Add a link to a chapter on OnPush components -->\n   *\n   */\n  abstract markForCheck(): void;\n\n  /**\n   * Detaches this view from the change-detection tree.\n   * A detached view is  not checked until it is reattached.\n   * Use in combination with `detectChanges()` to implement local change detection checks.\n   *\n   * Detached views are not checked during change detection runs until they are\n   * re-attached, even if they are marked as dirty.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n   *\n   */\n  abstract detach(): void;\n\n  /**\n   * Checks this view and its children. Use in combination with {@link ChangeDetectorRef#detach\n   * detach}\n   * to implement local change detection checks.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n   *\n   */\n  abstract detectChanges(): void;\n\n  /**\n   * Checks the change detector and its children, and throws if any changes are detected.\n   *\n   * Use in development mode to verify that running change detection doesn't introduce\n   * other changes.\n   */\n  abstract checkNoChanges(): void;\n\n  /**\n   * Re-attaches the previously detached view to the change detection tree.\n   * Views are attached to the tree by default.\n   *\n   * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n   *\n   */\n  abstract reattach(): void;\n\n  /** @internal */\n  static __NG_ELEMENT_ID__: () => ChangeDetectorRef = () => SWITCH_CHANGE_DETECTOR_REF_FACTORY();\n}\n\n\n\nexport const SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = render3InjectChangeDetectorRef;\nconst SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = (...args: any[]): any => {};\nconst SWITCH_CHANGE_DETECTOR_REF_FACTORY: typeof render3InjectChangeDetectorRef =\n    SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ApplicationRef} from '../application_ref';\nimport {ChangeDetectorRef} from '../change_detection/change_detector_ref';\n\n/**\n * Represents an Angular [view](guide/glossary#view),\n * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n * Also serves as the base class\n * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n *\n * @see `EmbeddedViewRef`\n *\n * @publicApi\n */\nexport abstract class ViewRef extends ChangeDetectorRef {\n  /**\n   * Destroys this view and all of the data structures associated with it.\n   */\n  abstract destroy(): void;\n\n  /**\n   * Reports whether this view has been destroyed.\n   * @returns True after the `destroy()` method has been called, false otherwise.\n   */\n  abstract get destroyed(): boolean;\n\n  /**\n   * A lifecycle hook that provides additional developer-defined cleanup\n   * functionality for views.\n   * @param callback A handler function that cleans up developer-defined data\n   * associated with a view. Called when the `destroy()` method is invoked.\n   */\n  abstract onDestroy(callback: Function): any /** TODO #9100 */;\n}\n\n/**\n * Represents an Angular [view](guide/glossary#view) in a view container.\n * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n * other than the hosting component whose template defines it, or it can be defined\n * independently by a `TemplateRef`.\n *\n * Properties of elements in a view can change, but the structure (number and order) of elements in\n * a view cannot. Change the structure of elements by inserting, moving, or\n * removing nested views in a view container.\n *\n * @see `ViewContainerRef`\n *\n * @usageNotes\n *\n * The following template breaks down into two separate `TemplateRef` instances,\n * an outer one and an inner one.\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * This is the outer `TemplateRef`:\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * This is the inner `TemplateRef`:\n *\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * The outer and inner `TemplateRef` instances are assembled into views as follows:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * @publicApi\n */\nexport abstract class EmbeddedViewRef<C> extends ViewRef {\n  /**\n   * The context for this view, inherited from the anchor element.\n   */\n  abstract get context(): C;\n\n  /**\n   * The root nodes for this embedded view.\n   */\n  abstract get rootNodes(): any[];\n}\n\nexport interface InternalViewRef extends ViewRef {\n  detachFromAppRef(): void;\n  attachToAppRef(appRef: ApplicationRef): void;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di';\nimport {assertDomNode} from '../render3/assert';\nimport {getComponent, getContext, getInjectionTokens, getInjector, getListeners, getLocalRefs, isBrowserEvents, loadLContext, loadLContextFromNode} from '../render3/discovery_utils';\nimport {TNode} from '../render3/interfaces/node';\nimport {StylingIndex} from '../render3/interfaces/styling';\nimport {TVIEW} from '../render3/interfaces/view';\nimport {getProp, getValue, isClassBasedValue} from '../render3/styling/class_and_style_bindings';\nimport {getStylingContext} from '../render3/styling/util';\nimport {DebugContext} from '../view/index';\n\nexport class EventListener {\n  constructor(public name: string, public callback: Function) {}\n}\n\n/**\n * @publicApi\n */\nexport interface DebugNode {\n  readonly listeners: EventListener[];\n  readonly parent: DebugElement|null;\n  readonly nativeNode: any;\n  readonly injector: Injector;\n  readonly componentInstance: any;\n  readonly context: any;\n  readonly references: {[key: string]: any};\n  readonly providerTokens: any[];\n}\nexport class DebugNode__PRE_R3__ {\n  readonly listeners: EventListener[] = [];\n  readonly parent: DebugElement|null = null;\n  readonly nativeNode: any;\n  private readonly _debugContext: DebugContext;\n\n  constructor(nativeNode: any, parent: DebugNode|null, _debugContext: DebugContext) {\n    this._debugContext = _debugContext;\n    this.nativeNode = nativeNode;\n    if (parent && parent instanceof DebugElement__PRE_R3__) {\n      parent.addChild(this);\n    }\n  }\n\n  get injector(): Injector { return this._debugContext.injector; }\n\n  get componentInstance(): any { return this._debugContext.component; }\n\n  get context(): any { return this._debugContext.context; }\n\n  get references(): {[key: string]: any} { return this._debugContext.references; }\n\n  get providerTokens(): any[] { return this._debugContext.providerTokens; }\n}\n\n/**\n * @publicApi\n */\nexport interface DebugElement extends DebugNode {\n  readonly name: string;\n  readonly properties: {[key: string]: any};\n  readonly attributes: {[key: string]: string | null};\n  readonly classes: {[key: string]: boolean};\n  readonly styles: {[key: string]: string | null};\n  readonly childNodes: DebugNode[];\n  readonly nativeElement: any;\n  readonly children: DebugElement[];\n\n  query(predicate: Predicate<DebugElement>): DebugElement;\n  queryAll(predicate: Predicate<DebugElement>): DebugElement[];\n  queryAllNodes(predicate: Predicate<DebugNode>): DebugNode[];\n  triggerEventHandler(eventName: string, eventObj: any): void;\n}\nexport class DebugElement__PRE_R3__ extends DebugNode__PRE_R3__ implements DebugElement {\n  readonly name !: string;\n  readonly properties: {[key: string]: any} = {};\n  readonly attributes: {[key: string]: string | null} = {};\n  readonly classes: {[key: string]: boolean} = {};\n  readonly styles: {[key: string]: string | null} = {};\n  readonly childNodes: DebugNode[] = [];\n  readonly nativeElement: any;\n\n  constructor(nativeNode: any, parent: any, _debugContext: DebugContext) {\n    super(nativeNode, parent, _debugContext);\n    this.nativeElement = nativeNode;\n  }\n\n  addChild(child: DebugNode) {\n    if (child) {\n      this.childNodes.push(child);\n      (child as{parent: DebugNode}).parent = this;\n    }\n  }\n\n  removeChild(child: DebugNode) {\n    const childIndex = this.childNodes.indexOf(child);\n    if (childIndex !== -1) {\n      (child as{parent: DebugNode | null}).parent = null;\n      this.childNodes.splice(childIndex, 1);\n    }\n  }\n\n  insertChildrenAfter(child: DebugNode, newChildren: DebugNode[]) {\n    const siblingIndex = this.childNodes.indexOf(child);\n    if (siblingIndex !== -1) {\n      this.childNodes.splice(siblingIndex + 1, 0, ...newChildren);\n      newChildren.forEach(c => {\n        if (c.parent) {\n          (c.parent as DebugElement__PRE_R3__).removeChild(c);\n        }\n        (child as{parent: DebugNode}).parent = this;\n      });\n    }\n  }\n\n  insertBefore(refChild: DebugNode, newChild: DebugNode): void {\n    const refIndex = this.childNodes.indexOf(refChild);\n    if (refIndex === -1) {\n      this.addChild(newChild);\n    } else {\n      if (newChild.parent) {\n        (newChild.parent as DebugElement__PRE_R3__).removeChild(newChild);\n      }\n      (newChild as{parent: DebugNode}).parent = this;\n      this.childNodes.splice(refIndex, 0, newChild);\n    }\n  }\n\n  query(predicate: Predicate<DebugElement>): DebugElement {\n    const results = this.queryAll(predicate);\n    return results[0] || null;\n  }\n\n  queryAll(predicate: Predicate<DebugElement>): DebugElement[] {\n    const matches: DebugElement[] = [];\n    _queryElementChildren(this, predicate, matches);\n    return matches;\n  }\n\n  queryAllNodes(predicate: Predicate<DebugNode>): DebugNode[] {\n    const matches: DebugNode[] = [];\n    _queryNodeChildren(this, predicate, matches);\n    return matches;\n  }\n\n  get children(): DebugElement[] {\n    return this\n        .childNodes  //\n        .filter((node) => node instanceof DebugElement__PRE_R3__) as DebugElement[];\n  }\n\n  triggerEventHandler(eventName: string, eventObj: any) {\n    this.listeners.forEach((listener) => {\n      if (listener.name == eventName) {\n        listener.callback(eventObj);\n      }\n    });\n  }\n}\n\n/**\n * @publicApi\n */\nexport function asNativeElements(debugEls: DebugElement[]): any {\n  return debugEls.map((el) => el.nativeElement);\n}\n\nfunction _queryElementChildren(\n    element: DebugElement, predicate: Predicate<DebugElement>, matches: DebugElement[]) {\n  element.childNodes.forEach(node => {\n    if (node instanceof DebugElement__PRE_R3__) {\n      if (predicate(node)) {\n        matches.push(node);\n      }\n      _queryElementChildren(node, predicate, matches);\n    }\n  });\n}\n\nfunction _queryNodeChildren(\n    parentNode: DebugNode, predicate: Predicate<DebugNode>, matches: DebugNode[]) {\n  if (parentNode instanceof DebugElement__PRE_R3__) {\n    parentNode.childNodes.forEach(node => {\n      if (predicate(node)) {\n        matches.push(node);\n      }\n      if (node instanceof DebugElement__PRE_R3__) {\n        _queryNodeChildren(node, predicate, matches);\n      }\n    });\n  }\n}\n\nfunction notImplemented(): Error {\n  throw new Error('Missing proper ivy implementation.');\n}\n\nclass DebugNode__POST_R3__ implements DebugNode {\n  readonly nativeNode: Node;\n\n  constructor(nativeNode: Node) { this.nativeNode = nativeNode; }\n\n  get parent(): DebugElement|null {\n    const parent = this.nativeNode.parentNode as Element;\n    return parent ? new DebugElement__POST_R3__(parent) : null;\n  }\n\n  get injector(): Injector { return getInjector(this.nativeNode); }\n\n  get componentInstance(): any {\n    const nativeElement = this.nativeNode;\n    return nativeElement && getComponent(nativeElement as Element);\n  }\n  get context(): any { return getContext(this.nativeNode as Element); }\n\n  get listeners(): EventListener[] {\n    return getListeners(this.nativeNode as Element).filter(isBrowserEvents);\n  }\n\n  get references(): {[key: string]: any;} { return getLocalRefs(this.nativeNode); }\n\n  get providerTokens(): any[] { return getInjectionTokens(this.nativeNode as Element); }\n}\n\nclass DebugElement__POST_R3__ extends DebugNode__POST_R3__ implements DebugElement {\n  constructor(nativeNode: Element) {\n    ngDevMode && assertDomNode(nativeNode);\n    super(nativeNode);\n  }\n\n  get nativeElement(): Element|null {\n    return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode as Element : null;\n  }\n\n  get name(): string { return this.nativeElement !.nodeName; }\n\n  get properties(): {[key: string]: any;} {\n    const context = loadLContext(this.nativeNode) !;\n    const lView = context.lView;\n    const tView = lView[TVIEW];\n    const tNode = tView.data[context.nodeIndex] as TNode;\n    const properties = {};\n    // TODO: https://angular-team.atlassian.net/browse/FW-681\n    // Missing implementation here...\n    return properties;\n  }\n\n  get attributes(): {[key: string]: string | null;} {\n    const attributes: {[key: string]: string | null;} = {};\n    const element = this.nativeElement;\n    if (element) {\n      const eAttrs = element.attributes;\n      for (let i = 0; i < eAttrs.length; i++) {\n        const attr = eAttrs[i];\n        attributes[attr.name] = attr.value;\n      }\n    }\n    return attributes;\n  }\n\n  get classes(): {[key: string]: boolean;} {\n    const classes: {[key: string]: boolean;} = {};\n    const element = this.nativeElement;\n    if (element) {\n      const lContext = loadLContextFromNode(element);\n      const lNode = lContext.lView[lContext.nodeIndex];\n      const stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n      if (stylingContext) {\n        for (let i = StylingIndex.SingleStylesStartPosition; i < lNode.length;\n             i += StylingIndex.Size) {\n          if (isClassBasedValue(lNode, i)) {\n            const className = getProp(lNode, i);\n            const value = getValue(lNode, i);\n            if (typeof value == 'boolean') {\n              // we want to ignore `null` since those don't overwrite the values.\n              classes[className] = value;\n            }\n          }\n        }\n      } else {\n        // Fallback, just read DOM.\n        const eClasses = element.classList;\n        for (let i = 0; i < eClasses.length; i++) {\n          classes[eClasses[i]] = true;\n        }\n      }\n    }\n    return classes;\n  }\n\n  get styles(): {[key: string]: string | null;} {\n    const styles: {[key: string]: string | null;} = {};\n    const element = this.nativeElement;\n    if (element) {\n      const lContext = loadLContextFromNode(element);\n      const lNode = lContext.lView[lContext.nodeIndex];\n      const stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n      if (stylingContext) {\n        for (let i = StylingIndex.SingleStylesStartPosition; i < lNode.length;\n             i += StylingIndex.Size) {\n          if (!isClassBasedValue(lNode, i)) {\n            const styleName = getProp(lNode, i);\n            const value = getValue(lNode, i) as string | null;\n            if (value !== null) {\n              // we want to ignore `null` since those don't overwrite the values.\n              styles[styleName] = value;\n            }\n          }\n        }\n      } else {\n        // Fallback, just read DOM.\n        const eStyles = (element as HTMLElement).style;\n        for (let i = 0; i < eStyles.length; i++) {\n          const name = eStyles.item(i);\n          styles[name] = eStyles.getPropertyValue(name);\n        }\n      }\n    }\n    return styles;\n  }\n\n  get childNodes(): DebugNode[] {\n    const childNodes = this.nativeNode.childNodes;\n    const children: DebugNode[] = [];\n    for (let i = 0; i < childNodes.length; i++) {\n      const element = childNodes[i];\n      children.push(getDebugNode__POST_R3__(element));\n    }\n    return children;\n  }\n\n  get children(): DebugElement[] {\n    const nativeElement = this.nativeElement;\n    if (!nativeElement) return [];\n    const childNodes = nativeElement.children;\n    const children: DebugElement[] = [];\n    for (let i = 0; i < childNodes.length; i++) {\n      const element = childNodes[i];\n      children.push(getDebugNode__POST_R3__(element));\n    }\n    return children;\n  }\n\n  query(predicate: Predicate<DebugElement>): DebugElement {\n    const results = this.queryAll(predicate);\n    return results[0] || null;\n  }\n\n  queryAll(predicate: Predicate<DebugElement>): DebugElement[] {\n    const matches: DebugElement[] = [];\n    _queryNodeChildrenR3(this, predicate, matches, true);\n    return matches;\n  }\n\n  queryAllNodes(predicate: Predicate<DebugNode>): DebugNode[] {\n    const matches: DebugNode[] = [];\n    _queryNodeChildrenR3(this, predicate, matches, false);\n    return matches;\n  }\n\n  triggerEventHandler(eventName: string, eventObj: any): void {\n    this.listeners.forEach((listener) => {\n      if (listener.name === eventName) {\n        listener.callback(eventObj);\n      }\n    });\n  }\n}\n\nfunction _queryNodeChildrenR3(\n    parentNode: DebugNode, predicate: Predicate<DebugNode>, matches: DebugNode[],\n    elementsOnly: boolean) {\n  if (parentNode instanceof DebugElement__POST_R3__) {\n    parentNode.childNodes.forEach(node => {\n      if (predicate(node)) {\n        matches.push(node);\n      }\n      if (node instanceof DebugElement__POST_R3__) {\n        if (elementsOnly ? node.nativeElement : true) {\n          _queryNodeChildrenR3(node, predicate, matches, elementsOnly);\n        }\n      }\n    });\n  }\n}\n\n\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nconst _nativeNodeToDebugNode = new Map<any, DebugNode>();\n\nfunction getDebugNode__PRE_R3__(nativeNode: any): DebugNode|null {\n  return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n\nexport function getDebugNode__POST_R3__(nativeNode: Element): DebugElement__POST_R3__;\nexport function getDebugNode__POST_R3__(nativeNode: Node): DebugNode__POST_R3__;\nexport function getDebugNode__POST_R3__(nativeNode: null): null;\nexport function getDebugNode__POST_R3__(nativeNode: any): DebugNode|null {\n  if (nativeNode instanceof Node) {\n    return nativeNode.nodeType == Node.ELEMENT_NODE ?\n        new DebugElement__POST_R3__(nativeNode as Element) :\n        new DebugNode__POST_R3__(nativeNode);\n  }\n  return null;\n}\n\n/**\n * @publicApi\n */\nexport const getDebugNode: (nativeNode: any) => DebugNode | null = getDebugNode__PRE_R3__;\n\nexport function getAllDebugNodes(): DebugNode[] {\n  return Array.from(_nativeNodeToDebugNode.values());\n}\n\nexport function indexDebugNode(node: DebugNode) {\n  _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n\nexport function removeDebugNodeFromIndex(node: DebugNode) {\n  _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n\n/**\n * A boolean-valued function over a value, possibly including context information\n * regarding that value's position in an array.\n *\n * @publicApi\n */\nexport interface Predicate<T> { (value: T): boolean; }\n\n/**\n * @publicApi\n */\nexport const DebugNode: {new (...args: any[]): DebugNode} = DebugNode__PRE_R3__ as any;\n\n/**\n * @publicApi\n */\nexport const DebugElement: {new (...args: any[]): DebugElement} = DebugElement__PRE_R3__ as any;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {looseIdentical, stringify} from '../../util';\nimport {isListLikeIterable, iterateListLike} from '../change_detection_util';\nimport {IterableChangeRecord, IterableChanges, IterableDiffer, IterableDifferFactory, NgIterable, TrackByFunction} from './iterable_differs';\n\n\nexport class DefaultIterableDifferFactory implements IterableDifferFactory {\n  constructor() {}\n  supports(obj: Object|null|undefined): boolean { return isListLikeIterable(obj); }\n\n  create<V>(trackByFn?: TrackByFunction<V>): DefaultIterableDiffer<V> {\n    return new DefaultIterableDiffer<V>(trackByFn);\n  }\n}\n\nconst trackByIdentity = (index: number, item: any) => item;\n\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n * @publicApi\n */\nexport class DefaultIterableDiffer<V> implements IterableDiffer<V>, IterableChanges<V> {\n  public readonly length: number = 0;\n  // TODO(issue/24571): remove '!'.\n  public readonly collection !: V[] | Iterable<V>| null;\n  // Keeps track of the used records at any point in time (during & across `_check()` calls)\n  private _linkedRecords: _DuplicateMap<V>|null = null;\n  // Keeps track of the removed records at any point in time during `_check()` calls.\n  private _unlinkedRecords: _DuplicateMap<V>|null = null;\n  private _previousItHead: IterableChangeRecord_<V>|null = null;\n  private _itHead: IterableChangeRecord_<V>|null = null;\n  private _itTail: IterableChangeRecord_<V>|null = null;\n  private _additionsHead: IterableChangeRecord_<V>|null = null;\n  private _additionsTail: IterableChangeRecord_<V>|null = null;\n  private _movesHead: IterableChangeRecord_<V>|null = null;\n  private _movesTail: IterableChangeRecord_<V>|null = null;\n  private _removalsHead: IterableChangeRecord_<V>|null = null;\n  private _removalsTail: IterableChangeRecord_<V>|null = null;\n  // Keeps track of records where custom track by is the same, but item identity has changed\n  private _identityChangesHead: IterableChangeRecord_<V>|null = null;\n  private _identityChangesTail: IterableChangeRecord_<V>|null = null;\n  private _trackByFn: TrackByFunction<V>;\n\n  constructor(trackByFn?: TrackByFunction<V>) { this._trackByFn = trackByFn || trackByIdentity; }\n\n  forEachItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let record: IterableChangeRecord_<V>|null;\n    for (record = this._itHead; record !== null; record = record._next) {\n      fn(record);\n    }\n  }\n\n  forEachOperation(\n      fn: (item: IterableChangeRecord<V>, previousIndex: number|null, currentIndex: number|null) =>\n          void) {\n    let nextIt = this._itHead;\n    let nextRemove = this._removalsHead;\n    let addRemoveOffset = 0;\n    let moveOffsets: number[]|null = null;\n    while (nextIt || nextRemove) {\n      // Figure out which is the next record to process\n      // Order: remove, add, move\n      const record: IterableChangeRecord<V> = !nextRemove ||\n              nextIt &&\n                  nextIt.currentIndex ! <\n                      getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n          nextIt ! :\n          nextRemove;\n      const adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n      const currentIndex = record.currentIndex;\n\n      // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n      if (record === nextRemove) {\n        addRemoveOffset--;\n        nextRemove = nextRemove._nextRemoved;\n      } else {\n        nextIt = nextIt !._next;\n        if (record.previousIndex == null) {\n          addRemoveOffset++;\n        } else {\n          // INVARIANT:  currentIndex < previousIndex\n          if (!moveOffsets) moveOffsets = [];\n          const localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n          const localCurrentIndex = currentIndex ! - addRemoveOffset;\n          if (localMovePreviousIndex != localCurrentIndex) {\n            for (let i = 0; i < localMovePreviousIndex; i++) {\n              const offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n              const index = offset + i;\n              if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                moveOffsets[i] = offset + 1;\n              }\n            }\n            const previousIndex = record.previousIndex;\n            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n          }\n        }\n      }\n\n      if (adjPreviousIndex !== currentIndex) {\n        fn(record, adjPreviousIndex, currentIndex);\n      }\n    }\n  }\n\n  forEachPreviousItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let record: IterableChangeRecord_<V>|null;\n    for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n      fn(record);\n    }\n  }\n\n  forEachAddedItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let record: IterableChangeRecord_<V>|null;\n    for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n      fn(record);\n    }\n  }\n\n  forEachMovedItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let record: IterableChangeRecord_<V>|null;\n    for (record = this._movesHead; record !== null; record = record._nextMoved) {\n      fn(record);\n    }\n  }\n\n  forEachRemovedItem(fn: (record: IterableChangeRecord_<V>) => void) {\n    let record: IterableChangeRecord_<V>|null;\n    for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n      fn(record);\n    }\n  }\n\n  forEachIdentityChange(fn: (record: IterableChangeRecord_<V>) => void) {\n    let record: IterableChangeRecord_<V>|null;\n    for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n      fn(record);\n    }\n  }\n\n  diff(collection: NgIterable<V>): DefaultIterableDiffer<V>|null {\n    if (collection == null) collection = [];\n    if (!isListLikeIterable(collection)) {\n      throw new Error(\n          `Error trying to diff '${stringify(collection)}'. Only arrays and iterables are allowed`);\n    }\n\n    if (this.check(collection)) {\n      return this;\n    } else {\n      return null;\n    }\n  }\n\n  onDestroy() {}\n\n  check(collection: NgIterable<V>): boolean {\n    this._reset();\n\n    let record: IterableChangeRecord_<V>|null = this._itHead;\n    let mayBeDirty: boolean = false;\n    let index: number;\n    let item: V;\n    let itemTrackBy: any;\n    if (Array.isArray(collection)) {\n      (this as{length: number}).length = collection.length;\n\n      for (let index = 0; index < this.length; index++) {\n        item = collection[index];\n        itemTrackBy = this._trackByFn(index, item);\n        if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n          record = this._mismatch(record, item, itemTrackBy, index);\n          mayBeDirty = true;\n        } else {\n          if (mayBeDirty) {\n            // TODO(misko): can we limit this to duplicates only?\n            record = this._verifyReinsertion(record, item, itemTrackBy, index);\n          }\n          if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n        }\n\n        record = record._next;\n      }\n    } else {\n      index = 0;\n      iterateListLike(collection, (item: V) => {\n        itemTrackBy = this._trackByFn(index, item);\n        if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n          record = this._mismatch(record, item, itemTrackBy, index);\n          mayBeDirty = true;\n        } else {\n          if (mayBeDirty) {\n            // TODO(misko): can we limit this to duplicates only?\n            record = this._verifyReinsertion(record, item, itemTrackBy, index);\n          }\n          if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n        }\n        record = record._next;\n        index++;\n      });\n      (this as{length: number}).length = index;\n    }\n\n    this._truncate(record);\n    (this as{collection: V[] | Iterable<V>}).collection = collection;\n    return this.isDirty;\n  }\n\n  /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n   * changes.\n   */\n  get isDirty(): boolean {\n    return this._additionsHead !== null || this._movesHead !== null ||\n        this._removalsHead !== null || this._identityChangesHead !== null;\n  }\n\n  /**\n   * Reset the state of the change objects to show no changes. This means set previousKey to\n   * currentKey, and clear all of the queues (additions, moves, removals).\n   * Set the previousIndexes of moved and added items to their currentIndexes\n   * Reset the list of additions, moves and removals\n   *\n   * @internal\n   */\n  _reset() {\n    if (this.isDirty) {\n      let record: IterableChangeRecord_<V>|null;\n      let nextRecord: IterableChangeRecord_<V>|null;\n\n      for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n        record._nextPrevious = record._next;\n      }\n\n      for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n        record.previousIndex = record.currentIndex;\n      }\n      this._additionsHead = this._additionsTail = null;\n\n      for (record = this._movesHead; record !== null; record = nextRecord) {\n        record.previousIndex = record.currentIndex;\n        nextRecord = record._nextMoved;\n      }\n      this._movesHead = this._movesTail = null;\n      this._removalsHead = this._removalsTail = null;\n      this._identityChangesHead = this._identityChangesTail = null;\n\n      // TODO(vicb): when assert gets supported\n      // assert(!this.isDirty);\n    }\n  }\n\n  /**\n   * This is the core function which handles differences between collections.\n   *\n   * - `record` is the record which we saw at this position last time. If null then it is a new\n   *   item.\n   * - `item` is the current item in the collection\n   * - `index` is the position of the item in the collection\n   *\n   * @internal\n   */\n  _mismatch(record: IterableChangeRecord_<V>|null, item: V, itemTrackBy: any, index: number):\n      IterableChangeRecord_<V> {\n    // The previous record after which we will append the current one.\n    let previousRecord: IterableChangeRecord_<V>|null;\n\n    if (record === null) {\n      previousRecord = this._itTail;\n    } else {\n      previousRecord = record._prev;\n      // Remove the record from the collection since we know it does not match the item.\n      this._remove(record);\n    }\n\n    // Attempt to see if we have seen the item before.\n    record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n    if (record !== null) {\n      // We have seen this before, we need to move it forward in the collection.\n      // But first we need to check if identity changed, so we can update in view if necessary\n      if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n\n      this._moveAfter(record, previousRecord, index);\n    } else {\n      // Never seen it, check evicted list.\n      record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n      if (record !== null) {\n        // It is an item which we have evicted earlier: reinsert it back into the list.\n        // But first we need to check if identity changed, so we can update in view if necessary\n        if (!looseIdentical(record.item, item)) this._addIdentityChange(record, item);\n\n        this._reinsertAfter(record, previousRecord, index);\n      } else {\n        // It is a new item: add it.\n        record =\n            this._addAfter(new IterableChangeRecord_<V>(item, itemTrackBy), previousRecord, index);\n      }\n    }\n    return record;\n  }\n\n  /**\n   * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n   *\n   * Use case: `[a, a]` => `[b, a, a]`\n   *\n   * If we did not have this check then the insertion of `b` would:\n   *   1) evict first `a`\n   *   2) insert `b` at `0` index.\n   *   3) leave `a` at index `1` as is. <-- this is wrong!\n   *   3) reinsert `a` at index 2. <-- this is wrong!\n   *\n   * The correct behavior is:\n   *   1) evict first `a`\n   *   2) insert `b` at `0` index.\n   *   3) reinsert `a` at index 1.\n   *   3) move `a` at from `1` to `2`.\n   *\n   *\n   * Double check that we have not evicted a duplicate item. We need to check if the item type may\n   * have already been removed:\n   * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n   * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n   * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n   * at the end.\n   *\n   * @internal\n   */\n  _verifyReinsertion(record: IterableChangeRecord_<V>, item: V, itemTrackBy: any, index: number):\n      IterableChangeRecord_<V> {\n    let reinsertRecord: IterableChangeRecord_<V>|null =\n        this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n    if (reinsertRecord !== null) {\n      record = this._reinsertAfter(reinsertRecord, record._prev !, index);\n    } else if (record.currentIndex != index) {\n      record.currentIndex = index;\n      this._addToMoves(record, index);\n    }\n    return record;\n  }\n\n  /**\n   * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n   *\n   * - `record` The first excess {@link IterableChangeRecord_}.\n   *\n   * @internal\n   */\n  _truncate(record: IterableChangeRecord_<V>|null) {\n    // Anything after that needs to be removed;\n    while (record !== null) {\n      const nextRecord: IterableChangeRecord_<V>|null = record._next;\n      this._addToRemovals(this._unlink(record));\n      record = nextRecord;\n    }\n    if (this._unlinkedRecords !== null) {\n      this._unlinkedRecords.clear();\n    }\n\n    if (this._additionsTail !== null) {\n      this._additionsTail._nextAdded = null;\n    }\n    if (this._movesTail !== null) {\n      this._movesTail._nextMoved = null;\n    }\n    if (this._itTail !== null) {\n      this._itTail._next = null;\n    }\n    if (this._removalsTail !== null) {\n      this._removalsTail._nextRemoved = null;\n    }\n    if (this._identityChangesTail !== null) {\n      this._identityChangesTail._nextIdentityChange = null;\n    }\n  }\n\n  /** @internal */\n  _reinsertAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>|null,\n      index: number): IterableChangeRecord_<V> {\n    if (this._unlinkedRecords !== null) {\n      this._unlinkedRecords.remove(record);\n    }\n    const prev = record._prevRemoved;\n    const next = record._nextRemoved;\n\n    if (prev === null) {\n      this._removalsHead = next;\n    } else {\n      prev._nextRemoved = next;\n    }\n    if (next === null) {\n      this._removalsTail = prev;\n    } else {\n      next._prevRemoved = prev;\n    }\n\n    this._insertAfter(record, prevRecord, index);\n    this._addToMoves(record, index);\n    return record;\n  }\n\n  /** @internal */\n  _moveAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>|null,\n      index: number): IterableChangeRecord_<V> {\n    this._unlink(record);\n    this._insertAfter(record, prevRecord, index);\n    this._addToMoves(record, index);\n    return record;\n  }\n\n  /** @internal */\n  _addAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>|null,\n      index: number): IterableChangeRecord_<V> {\n    this._insertAfter(record, prevRecord, index);\n\n    if (this._additionsTail === null) {\n      // TODO(vicb):\n      // assert(this._additionsHead === null);\n      this._additionsTail = this._additionsHead = record;\n    } else {\n      // TODO(vicb):\n      // assert(_additionsTail._nextAdded === null);\n      // assert(record._nextAdded === null);\n      this._additionsTail = this._additionsTail._nextAdded = record;\n    }\n    return record;\n  }\n\n  /** @internal */\n  _insertAfter(\n      record: IterableChangeRecord_<V>, prevRecord: IterableChangeRecord_<V>|null,\n      index: number): IterableChangeRecord_<V> {\n    // TODO(vicb):\n    // assert(record != prevRecord);\n    // assert(record._next === null);\n    // assert(record._prev === null);\n\n    const next: IterableChangeRecord_<V>|null =\n        prevRecord === null ? this._itHead : prevRecord._next;\n    // TODO(vicb):\n    // assert(next != record);\n    // assert(prevRecord != record);\n    record._next = next;\n    record._prev = prevRecord;\n    if (next === null) {\n      this._itTail = record;\n    } else {\n      next._prev = record;\n    }\n    if (prevRecord === null) {\n      this._itHead = record;\n    } else {\n      prevRecord._next = record;\n    }\n\n    if (this._linkedRecords === null) {\n      this._linkedRecords = new _DuplicateMap<V>();\n    }\n    this._linkedRecords.put(record);\n\n    record.currentIndex = index;\n    return record;\n  }\n\n  /** @internal */\n  _remove(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    return this._addToRemovals(this._unlink(record));\n  }\n\n  /** @internal */\n  _unlink(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    if (this._linkedRecords !== null) {\n      this._linkedRecords.remove(record);\n    }\n\n    const prev = record._prev;\n    const next = record._next;\n\n    // TODO(vicb):\n    // assert((record._prev = null) === null);\n    // assert((record._next = null) === null);\n\n    if (prev === null) {\n      this._itHead = next;\n    } else {\n      prev._next = next;\n    }\n    if (next === null) {\n      this._itTail = prev;\n    } else {\n      next._prev = prev;\n    }\n\n    return record;\n  }\n\n  /** @internal */\n  _addToMoves(record: IterableChangeRecord_<V>, toIndex: number): IterableChangeRecord_<V> {\n    // TODO(vicb):\n    // assert(record._nextMoved === null);\n\n    if (record.previousIndex === toIndex) {\n      return record;\n    }\n\n    if (this._movesTail === null) {\n      // TODO(vicb):\n      // assert(_movesHead === null);\n      this._movesTail = this._movesHead = record;\n    } else {\n      // TODO(vicb):\n      // assert(_movesTail._nextMoved === null);\n      this._movesTail = this._movesTail._nextMoved = record;\n    }\n\n    return record;\n  }\n\n  private _addToRemovals(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    if (this._unlinkedRecords === null) {\n      this._unlinkedRecords = new _DuplicateMap<V>();\n    }\n    this._unlinkedRecords.put(record);\n    record.currentIndex = null;\n    record._nextRemoved = null;\n\n    if (this._removalsTail === null) {\n      // TODO(vicb):\n      // assert(_removalsHead === null);\n      this._removalsTail = this._removalsHead = record;\n      record._prevRemoved = null;\n    } else {\n      // TODO(vicb):\n      // assert(_removalsTail._nextRemoved === null);\n      // assert(record._nextRemoved === null);\n      record._prevRemoved = this._removalsTail;\n      this._removalsTail = this._removalsTail._nextRemoved = record;\n    }\n    return record;\n  }\n\n  /** @internal */\n  _addIdentityChange(record: IterableChangeRecord_<V>, item: V) {\n    record.item = item;\n    if (this._identityChangesTail === null) {\n      this._identityChangesTail = this._identityChangesHead = record;\n    } else {\n      this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n    }\n    return record;\n  }\n}\n\nexport class IterableChangeRecord_<V> implements IterableChangeRecord<V> {\n  currentIndex: number|null = null;\n  previousIndex: number|null = null;\n\n  /** @internal */\n  _nextPrevious: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _prev: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _next: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _prevDup: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _nextDup: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _prevRemoved: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _nextRemoved: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _nextAdded: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _nextMoved: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _nextIdentityChange: IterableChangeRecord_<V>|null = null;\n\n\n  constructor(public item: V, public trackById: any) {}\n}\n\n// A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\nclass _DuplicateItemRecordList<V> {\n  /** @internal */\n  _head: IterableChangeRecord_<V>|null = null;\n  /** @internal */\n  _tail: IterableChangeRecord_<V>|null = null;\n\n  /**\n   * Append the record to the list of duplicates.\n   *\n   * Note: by design all records in the list of duplicates hold the same value in record.item.\n   */\n  add(record: IterableChangeRecord_<V>): void {\n    if (this._head === null) {\n      this._head = this._tail = record;\n      record._nextDup = null;\n      record._prevDup = null;\n    } else {\n      // TODO(vicb):\n      // assert(record.item ==  _head.item ||\n      //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n      this._tail !._nextDup = record;\n      record._prevDup = this._tail;\n      record._nextDup = null;\n      this._tail = record;\n    }\n  }\n\n  // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n  // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n  get(trackById: any, atOrAfterIndex: number|null): IterableChangeRecord_<V>|null {\n    let record: IterableChangeRecord_<V>|null;\n    for (record = this._head; record !== null; record = record._nextDup) {\n      if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex !) &&\n          looseIdentical(record.trackById, trackById)) {\n        return record;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n   *\n   * Returns whether the list of duplicates is empty.\n   */\n  remove(record: IterableChangeRecord_<V>): boolean {\n    // TODO(vicb):\n    // assert(() {\n    //  // verify that the record being removed is in the list.\n    //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n    //    if (identical(cursor, record)) return true;\n    //  }\n    //  return false;\n    //});\n\n    const prev: IterableChangeRecord_<V>|null = record._prevDup;\n    const next: IterableChangeRecord_<V>|null = record._nextDup;\n    if (prev === null) {\n      this._head = next;\n    } else {\n      prev._nextDup = next;\n    }\n    if (next === null) {\n      this._tail = prev;\n    } else {\n      next._prevDup = prev;\n    }\n    return this._head === null;\n  }\n}\n\nclass _DuplicateMap<V> {\n  map = new Map<any, _DuplicateItemRecordList<V>>();\n\n  put(record: IterableChangeRecord_<V>) {\n    const key = record.trackById;\n\n    let duplicates = this.map.get(key);\n    if (!duplicates) {\n      duplicates = new _DuplicateItemRecordList<V>();\n      this.map.set(key, duplicates);\n    }\n    duplicates.add(record);\n  }\n\n  /**\n   * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n   * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n   *\n   * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n   * have any more `a`s needs to return the second `a`.\n   */\n  get(trackById: any, atOrAfterIndex: number|null): IterableChangeRecord_<V>|null {\n    const key = trackById;\n    const recordList = this.map.get(key);\n    return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n  }\n\n  /**\n   * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n   *\n   * The list of duplicates also is removed from the map if it gets empty.\n   */\n  remove(record: IterableChangeRecord_<V>): IterableChangeRecord_<V> {\n    const key = record.trackById;\n    const recordList: _DuplicateItemRecordList<V> = this.map.get(key) !;\n    // Remove the list of duplicates when it gets empty\n    if (recordList.remove(record)) {\n      this.map.delete(key);\n    }\n    return record;\n  }\n\n  get isEmpty(): boolean { return this.map.size === 0; }\n\n  clear() { this.map.clear(); }\n}\n\nfunction getPreviousIndex(\n    item: any, addRemoveOffset: number, moveOffsets: number[] | null): number {\n  const previousIndex = item.previousIndex;\n  if (previousIndex === null) return previousIndex;\n  let moveOffset = 0;\n  if (moveOffsets && previousIndex < moveOffsets.length) {\n    moveOffset = moveOffsets[previousIndex];\n  }\n  return previousIndex + addRemoveOffset + moveOffset;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {looseIdentical, stringify} from '../../util';\nimport {isJsObject} from '../change_detection_util';\nimport {KeyValueChangeRecord, KeyValueChanges, KeyValueDiffer, KeyValueDifferFactory} from './keyvalue_differs';\n\n\nexport class DefaultKeyValueDifferFactory<K, V> implements KeyValueDifferFactory {\n  constructor() {}\n  supports(obj: any): boolean { return obj instanceof Map || isJsObject(obj); }\n\n  create<K, V>(): KeyValueDiffer<K, V> { return new DefaultKeyValueDiffer<K, V>(); }\n}\n\nexport class DefaultKeyValueDiffer<K, V> implements KeyValueDiffer<K, V>, KeyValueChanges<K, V> {\n  private _records = new Map<K, KeyValueChangeRecord_<K, V>>();\n  private _mapHead: KeyValueChangeRecord_<K, V>|null = null;\n  // _appendAfter is used in the check loop\n  private _appendAfter: KeyValueChangeRecord_<K, V>|null = null;\n  private _previousMapHead: KeyValueChangeRecord_<K, V>|null = null;\n  private _changesHead: KeyValueChangeRecord_<K, V>|null = null;\n  private _changesTail: KeyValueChangeRecord_<K, V>|null = null;\n  private _additionsHead: KeyValueChangeRecord_<K, V>|null = null;\n  private _additionsTail: KeyValueChangeRecord_<K, V>|null = null;\n  private _removalsHead: KeyValueChangeRecord_<K, V>|null = null;\n  private _removalsTail: KeyValueChangeRecord_<K, V>|null = null;\n\n  get isDirty(): boolean {\n    return this._additionsHead !== null || this._changesHead !== null ||\n        this._removalsHead !== null;\n  }\n\n  forEachItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._mapHead; record !== null; record = record._next) {\n      fn(record);\n    }\n  }\n\n  forEachPreviousItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n      fn(record);\n    }\n  }\n\n  forEachChangedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._changesHead; record !== null; record = record._nextChanged) {\n      fn(record);\n    }\n  }\n\n  forEachAddedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n      fn(record);\n    }\n  }\n\n  forEachRemovedItem(fn: (r: KeyValueChangeRecord<K, V>) => void) {\n    let record: KeyValueChangeRecord_<K, V>|null;\n    for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n      fn(record);\n    }\n  }\n\n  diff(map?: Map<any, any>|{[k: string]: any}|null): any {\n    if (!map) {\n      map = new Map();\n    } else if (!(map instanceof Map || isJsObject(map))) {\n      throw new Error(\n          `Error trying to diff '${stringify(map)}'. Only maps and objects are allowed`);\n    }\n\n    return this.check(map) ? this : null;\n  }\n\n  onDestroy() {}\n\n  /**\n   * Check the current state of the map vs the previous.\n   * The algorithm is optimised for when the keys do no change.\n   */\n  check(map: Map<any, any>|{[k: string]: any}): boolean {\n    this._reset();\n\n    let insertBefore = this._mapHead;\n    this._appendAfter = null;\n\n    this._forEach(map, (value: any, key: any) => {\n      if (insertBefore && insertBefore.key === key) {\n        this._maybeAddToChanges(insertBefore, value);\n        this._appendAfter = insertBefore;\n        insertBefore = insertBefore._next;\n      } else {\n        const record = this._getOrCreateRecordForKey(key, value);\n        insertBefore = this._insertBeforeOrAppend(insertBefore, record);\n      }\n    });\n\n    // Items remaining at the end of the list have been deleted\n    if (insertBefore) {\n      if (insertBefore._prev) {\n        insertBefore._prev._next = null;\n      }\n\n      this._removalsHead = insertBefore;\n\n      for (let record: KeyValueChangeRecord_<K, V>|null = insertBefore; record !== null;\n           record = record._nextRemoved) {\n        if (record === this._mapHead) {\n          this._mapHead = null;\n        }\n        this._records.delete(record.key);\n        record._nextRemoved = record._next;\n        record.previousValue = record.currentValue;\n        record.currentValue = null;\n        record._prev = null;\n        record._next = null;\n      }\n    }\n\n    // Make sure tails have no next records from previous runs\n    if (this._changesTail) this._changesTail._nextChanged = null;\n    if (this._additionsTail) this._additionsTail._nextAdded = null;\n\n    return this.isDirty;\n  }\n\n  /**\n   * Inserts a record before `before` or append at the end of the list when `before` is null.\n   *\n   * Notes:\n   * - This method appends at `this._appendAfter`,\n   * - This method updates `this._appendAfter`,\n   * - The return value is the new value for the insertion pointer.\n   */\n  private _insertBeforeOrAppend(\n      before: KeyValueChangeRecord_<K, V>|null,\n      record: KeyValueChangeRecord_<K, V>): KeyValueChangeRecord_<K, V>|null {\n    if (before) {\n      const prev = before._prev;\n      record._next = before;\n      record._prev = prev;\n      before._prev = record;\n      if (prev) {\n        prev._next = record;\n      }\n      if (before === this._mapHead) {\n        this._mapHead = record;\n      }\n\n      this._appendAfter = before;\n      return before;\n    }\n\n    if (this._appendAfter) {\n      this._appendAfter._next = record;\n      record._prev = this._appendAfter;\n    } else {\n      this._mapHead = record;\n    }\n\n    this._appendAfter = record;\n    return null;\n  }\n\n  private _getOrCreateRecordForKey(key: K, value: V): KeyValueChangeRecord_<K, V> {\n    if (this._records.has(key)) {\n      const record = this._records.get(key) !;\n      this._maybeAddToChanges(record, value);\n      const prev = record._prev;\n      const next = record._next;\n      if (prev) {\n        prev._next = next;\n      }\n      if (next) {\n        next._prev = prev;\n      }\n      record._next = null;\n      record._prev = null;\n\n      return record;\n    }\n\n    const record = new KeyValueChangeRecord_<K, V>(key);\n    this._records.set(key, record);\n    record.currentValue = value;\n    this._addToAdditions(record);\n    return record;\n  }\n\n  /** @internal */\n  _reset() {\n    if (this.isDirty) {\n      let record: KeyValueChangeRecord_<K, V>|null;\n      // let `_previousMapHead` contain the state of the map before the changes\n      this._previousMapHead = this._mapHead;\n      for (record = this._previousMapHead; record !== null; record = record._next) {\n        record._nextPrevious = record._next;\n      }\n\n      // Update `record.previousValue` with the value of the item before the changes\n      // We need to update all changed items (that's those which have been added and changed)\n      for (record = this._changesHead; record !== null; record = record._nextChanged) {\n        record.previousValue = record.currentValue;\n      }\n      for (record = this._additionsHead; record != null; record = record._nextAdded) {\n        record.previousValue = record.currentValue;\n      }\n\n      this._changesHead = this._changesTail = null;\n      this._additionsHead = this._additionsTail = null;\n      this._removalsHead = null;\n    }\n  }\n\n  // Add the record or a given key to the list of changes only when the value has actually changed\n  private _maybeAddToChanges(record: KeyValueChangeRecord_<K, V>, newValue: any): void {\n    if (!looseIdentical(newValue, record.currentValue)) {\n      record.previousValue = record.currentValue;\n      record.currentValue = newValue;\n      this._addToChanges(record);\n    }\n  }\n\n  private _addToAdditions(record: KeyValueChangeRecord_<K, V>) {\n    if (this._additionsHead === null) {\n      this._additionsHead = this._additionsTail = record;\n    } else {\n      this._additionsTail !._nextAdded = record;\n      this._additionsTail = record;\n    }\n  }\n\n  private _addToChanges(record: KeyValueChangeRecord_<K, V>) {\n    if (this._changesHead === null) {\n      this._changesHead = this._changesTail = record;\n    } else {\n      this._changesTail !._nextChanged = record;\n      this._changesTail = record;\n    }\n  }\n\n  /** @internal */\n  private _forEach<K, V>(obj: Map<K, V>|{[k: string]: V}, fn: (v: V, k: any) => void) {\n    if (obj instanceof Map) {\n      obj.forEach(fn);\n    } else {\n      Object.keys(obj).forEach(k => fn(obj[k], k));\n    }\n  }\n}\n\nclass KeyValueChangeRecord_<K, V> implements KeyValueChangeRecord<K, V> {\n  previousValue: V|null = null;\n  currentValue: V|null = null;\n\n  /** @internal */\n  _nextPrevious: KeyValueChangeRecord_<K, V>|null = null;\n  /** @internal */\n  _next: KeyValueChangeRecord_<K, V>|null = null;\n  /** @internal */\n  _prev: KeyValueChangeRecord_<K, V>|null = null;\n  /** @internal */\n  _nextAdded: KeyValueChangeRecord_<K, V>|null = null;\n  /** @internal */\n  _nextRemoved: KeyValueChangeRecord_<K, V>|null = null;\n  /** @internal */\n  _nextChanged: KeyValueChangeRecord_<K, V>|null = null;\n\n  constructor(public key: K) {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {defineInjectable} from '../../di/defs';\nimport {Optional, SkipSelf} from '../../di/metadata';\nimport {StaticProvider} from '../../di/provider';\nimport {DefaultIterableDifferFactory} from '../differs/default_iterable_differ';\n\n\n/**\n * A type describing supported iterable types.\n *\n * @publicApi\n */\nexport type NgIterable<T> = Array<T>| Iterable<T>;\n\n/**\n * A strategy for tracking changes over time to an iterable. Used by {@link NgForOf} to\n * respond to changes in an iterable by effecting equivalent changes in the DOM.\n *\n * @publicApi\n */\nexport interface IterableDiffer<V> {\n  /**\n   * Compute a difference between the previous state and the new `object` state.\n   *\n   * @param object containing the new value.\n   * @returns an object describing the difference. The return value is only valid until the next\n   * `diff()` invocation.\n   */\n  diff(object: NgIterable<V>): IterableChanges<V>|null;\n}\n\n/**\n * An object describing the changes in the `Iterable` collection since last time\n * `IterableDiffer#diff()` was invoked.\n *\n * @publicApi\n */\nexport interface IterableChanges<V> {\n  /**\n   * Iterate over all changes. `IterableChangeRecord` will contain information about changes\n   * to each item.\n   */\n  forEachItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /**\n   * Iterate over a set of operations which when applied to the original `Iterable` will produce the\n   * new `Iterable`.\n   *\n   * NOTE: These are not necessarily the actual operations which were applied to the original\n   * `Iterable`, rather these are a set of computed operations which may not be the same as the\n   * ones applied.\n   *\n   * @param record A change which needs to be applied\n   * @param previousIndex The `IterableChangeRecord#previousIndex` of the `record` refers to the\n   *        original `Iterable` location, where as `previousIndex` refers to the transient location\n   *        of the item, after applying the operations up to this point.\n   * @param currentIndex The `IterableChangeRecord#currentIndex` of the `record` refers to the\n   *        original `Iterable` location, where as `currentIndex` refers to the transient location\n   *        of the item, after applying the operations up to this point.\n   */\n  forEachOperation(\n      fn:\n          (record: IterableChangeRecord<V>, previousIndex: number|null,\n           currentIndex: number|null) => void): void;\n\n  /**\n   * Iterate over changes in the order of original `Iterable` showing where the original items\n   * have moved.\n   */\n  forEachPreviousItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all added items. */\n  forEachAddedItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all moved items. */\n  forEachMovedItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all removed items. */\n  forEachRemovedItem(fn: (record: IterableChangeRecord<V>) => void): void;\n\n  /** Iterate over all items which had their identity (as computed by the `TrackByFunction`)\n   * changed. */\n  forEachIdentityChange(fn: (record: IterableChangeRecord<V>) => void): void;\n}\n\n/**\n * Record representing the item change information.\n *\n * @publicApi\n */\nexport interface IterableChangeRecord<V> {\n  /** Current index of the item in `Iterable` or null if removed. */\n  readonly currentIndex: number|null;\n\n  /** Previous index of the item in `Iterable` or null if added. */\n  readonly previousIndex: number|null;\n\n  /** The item. */\n  readonly item: V;\n\n  /** Track by identity as computed by the `TrackByFunction`. */\n  readonly trackById: any;\n}\n\n/**\n * @deprecated v4.0.0 - Use IterableChangeRecord instead.\n * @publicApi\n */\nexport interface CollectionChangeRecord<V> extends IterableChangeRecord<V> {}\n\n/**\n * An optional function passed into {@link NgForOf} that defines how to track\n * items in an iterable (e.g. fby index or id)\n *\n * @publicApi\n */\nexport interface TrackByFunction<T> { (index: number, item: T): any; }\n\n/**\n * Provides a factory for {@link IterableDiffer}.\n *\n * @publicApi\n */\nexport interface IterableDifferFactory {\n  supports(objects: any): boolean;\n  create<V>(trackByFn?: TrackByFunction<V>): IterableDiffer<V>;\n}\n\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n *\n * @publicApi\n */\nexport class IterableDiffers {\n  /** @nocollapse */\n  static ngInjectableDef = defineInjectable({\n    providedIn: 'root',\n    factory: () => new IterableDiffers([new DefaultIterableDifferFactory()])\n  });\n\n  /**\n   * @deprecated v4.0.0 - Should be private\n   */\n  factories: IterableDifferFactory[];\n  constructor(factories: IterableDifferFactory[]) { this.factories = factories; }\n\n  static create(factories: IterableDifferFactory[], parent?: IterableDiffers): IterableDiffers {\n    if (parent != null) {\n      const copied = parent.factories.slice();\n      factories = factories.concat(copied);\n    }\n\n    return new IterableDiffers(factories);\n  }\n\n  /**\n   * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n   * inherited {@link IterableDiffers} instance with the provided factories and return a new\n   * {@link IterableDiffers} instance.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * The following example shows how to extend an existing list of factories,\n   * which will only be applied to the injector for this component and its children.\n   * This step is all that's required to make a new {@link IterableDiffer} available.\n   *\n   * ```\n   * @Component({\n   *   viewProviders: [\n   *     IterableDiffers.extend([new ImmutableListDiffer()])\n   *   ]\n   * })\n   * ```\n   */\n  static extend(factories: IterableDifferFactory[]): StaticProvider {\n    return {\n      provide: IterableDiffers,\n      useFactory: (parent: IterableDiffers) => {\n        if (!parent) {\n          // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n          // to\n          // bootstrap(), which would override default pipes instead of extending them.\n          throw new Error('Cannot extend IterableDiffers without a parent injector');\n        }\n        return IterableDiffers.create(factories, parent);\n      },\n      // Dependency technically isn't optional, but we can provide a better error message this way.\n      deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n    };\n  }\n\n  find(iterable: any): IterableDifferFactory {\n    const factory = this.factories.find(f => f.supports(iterable));\n    if (factory != null) {\n      return factory;\n    } else {\n      throw new Error(\n          `Cannot find a differ supporting object '${iterable}' of type '${getTypeNameForDebugging(iterable)}'`);\n    }\n  }\n}\n\nexport function getTypeNameForDebugging(type: any): string {\n  return type['name'] || typeof type;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Optional, SkipSelf, StaticProvider, defineInjectable} from '../../di';\nimport {DefaultKeyValueDifferFactory} from './default_keyvalue_differ';\n\n\n/**\n * A differ that tracks changes made to an object over time.\n *\n * @publicApi\n */\nexport interface KeyValueDiffer<K, V> {\n  /**\n   * Compute a difference between the previous state and the new `object` state.\n   *\n   * @param object containing the new value.\n   * @returns an object describing the difference. The return value is only valid until the next\n   * `diff()` invocation.\n   */\n  diff(object: Map<K, V>): KeyValueChanges<K, V>|null;\n\n  /**\n   * Compute a difference between the previous state and the new `object` state.\n   *\n   * @param object containing the new value.\n   * @returns an object describing the difference. The return value is only valid until the next\n   * `diff()` invocation.\n   */\n  diff(object: {[key: string]: V}): KeyValueChanges<string, V>|null;\n  // TODO(TS2.1): diff<KP extends string>(this: KeyValueDiffer<KP, V>, object: Record<KP, V>):\n  // KeyValueDiffer<KP, V>;\n}\n\n/**\n * An object describing the changes in the `Map` or `{[k:string]: string}` since last time\n * `KeyValueDiffer#diff()` was invoked.\n *\n * @publicApi\n */\nexport interface KeyValueChanges<K, V> {\n  /**\n   * Iterate over all changes. `KeyValueChangeRecord` will contain information about changes\n   * to each item.\n   */\n  forEachItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over changes in the order of original Map showing where the original items\n   * have moved.\n   */\n  forEachPreviousItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over all keys for which values have changed.\n   */\n  forEachChangedItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over all added items.\n   */\n  forEachAddedItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n\n  /**\n   * Iterate over all removed items.\n   */\n  forEachRemovedItem(fn: (r: KeyValueChangeRecord<K, V>) => void): void;\n}\n\n/**\n * Record representing the item change information.\n *\n * @publicApi\n */\nexport interface KeyValueChangeRecord<K, V> {\n  /**\n   * Current key in the Map.\n   */\n  readonly key: K;\n\n  /**\n   * Current value for the key or `null` if removed.\n   */\n  readonly currentValue: V|null;\n\n  /**\n   * Previous value for the key or `null` if added.\n   */\n  readonly previousValue: V|null;\n}\n\n/**\n * Provides a factory for {@link KeyValueDiffer}.\n *\n * @publicApi\n */\nexport interface KeyValueDifferFactory {\n  /**\n   * Test to see if the differ knows how to diff this kind of object.\n   */\n  supports(objects: any): boolean;\n\n  /**\n   * Create a `KeyValueDiffer`.\n   */\n  create<K, V>(): KeyValueDiffer<K, V>;\n}\n\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n *\n * @publicApi\n */\nexport class KeyValueDiffers {\n  /** @nocollapse */\n  static ngInjectableDef = defineInjectable({\n    providedIn: 'root',\n    factory: () => new KeyValueDiffers([new DefaultKeyValueDifferFactory()])\n  });\n\n  /**\n   * @deprecated v4.0.0 - Should be private.\n   */\n  factories: KeyValueDifferFactory[];\n\n  constructor(factories: KeyValueDifferFactory[]) { this.factories = factories; }\n\n  static create<S>(factories: KeyValueDifferFactory[], parent?: KeyValueDiffers): KeyValueDiffers {\n    if (parent) {\n      const copied = parent.factories.slice();\n      factories = factories.concat(copied);\n    }\n    return new KeyValueDiffers(factories);\n  }\n\n  /**\n   * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n   * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n   * {@link KeyValueDiffers} instance.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * The following example shows how to extend an existing list of factories,\n   * which will only be applied to the injector for this component and its children.\n   * This step is all that's required to make a new {@link KeyValueDiffer} available.\n   *\n   * ```\n   * @Component({\n   *   viewProviders: [\n   *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n   *   ]\n   * })\n   * ```\n   */\n  static extend<S>(factories: KeyValueDifferFactory[]): StaticProvider {\n    return {\n      provide: KeyValueDiffers,\n      useFactory: (parent: KeyValueDiffers) => {\n        if (!parent) {\n          // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n          // to bootstrap(), which would override default pipes instead of extending them.\n          throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n        }\n        return KeyValueDiffers.create(factories, parent);\n      },\n      // Dependency technically isn't optional, but we can provide a better error message this way.\n      deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n    };\n  }\n\n  find(kv: any): KeyValueDifferFactory {\n    const factory = this.factories.find(f => f.supports(kv));\n    if (factory) {\n      return factory;\n    }\n    throw new Error(`Cannot find a differ supporting object '${kv}'`);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DefaultIterableDifferFactory} from './differs/default_iterable_differ';\nimport {DefaultKeyValueDifferFactory} from './differs/default_keyvalue_differ';\nimport {IterableDifferFactory, IterableDiffers} from './differs/iterable_differs';\nimport {KeyValueDifferFactory, KeyValueDiffers} from './differs/keyvalue_differs';\n\nexport {SimpleChanges} from '../metadata/lifecycle_hooks';\nexport {SimpleChange, WrappedValue, devModeEqual} from './change_detection_util';\nexport {ChangeDetectorRef} from './change_detector_ref';\nexport {ChangeDetectionStrategy, ChangeDetectorStatus, isDefaultChangeDetectionStrategy} from './constants';\nexport {DefaultIterableDifferFactory} from './differs/default_iterable_differ';\nexport {DefaultIterableDiffer} from './differs/default_iterable_differ';\nexport {DefaultKeyValueDifferFactory} from './differs/default_keyvalue_differ';\nexport {CollectionChangeRecord, IterableChangeRecord, IterableChanges, IterableDiffer, IterableDifferFactory, IterableDiffers, NgIterable, TrackByFunction} from './differs/iterable_differs';\nexport {KeyValueChangeRecord, KeyValueChanges, KeyValueDiffer, KeyValueDifferFactory, KeyValueDiffers} from './differs/keyvalue_differs';\nexport {PipeTransform} from './pipe_transform';\n\n\n\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nconst keyValDiff: KeyValueDifferFactory[] = [new DefaultKeyValueDifferFactory()];\n\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nconst iterableDiff: IterableDifferFactory[] = [new DefaultIterableDifferFactory()];\n\nexport const defaultIterableDiffers = new IterableDiffers(iterableDiff);\n\nexport const defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PlatformRef, createPlatformFactory} from './application_ref';\nimport {PLATFORM_ID} from './application_tokens';\nimport {Console} from './console';\nimport {Injector, StaticProvider} from './di';\nimport {TestabilityRegistry} from './testability/testability';\n\nconst _CORE_PLATFORM_PROVIDERS: StaticProvider[] = [\n  // Set a default platform name for platforms that don't set it explicitly.\n  {provide: PLATFORM_ID, useValue: 'unknown'},\n  {provide: PlatformRef, deps: [Injector]},\n  {provide: TestabilityRegistry, deps: []},\n  {provide: Console, deps: []},\n];\n\n/**\n * This platform has to be included in any other platform\n *\n * @publicApi\n */\nexport const platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '../di/injection_token';\n\n/**\n * Provide this token to set the locale of your application.\n * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n * DecimalPipe and PercentPipe) and by ICU expressions.\n *\n * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { LOCALE_ID } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n * });\n * ```\n *\n * @publicApi\n */\nexport const LOCALE_ID = new InjectionToken<string>('LocaleId');\n\n/**\n * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n * `xlf` or `xlf2`) when you want to translate your application in another language.\n *\n * See the [i18n guide](guide/i18n#merge) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * // content of your translation file\n * const translations = '....';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n * });\n * ```\n *\n * @publicApi\n */\nexport const TRANSLATIONS = new InjectionToken<string>('Translations');\n\n/**\n * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n * `xlf` or `xlf2`.\n *\n * See the [i18n guide](guide/i18n#merge) for more information.\n *\n * @usageNotes\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS_FORMAT } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n * });\n * ```\n *\n * @publicApi\n */\nexport const TRANSLATIONS_FORMAT = new InjectionToken<string>('TranslationsFormat');\n\n/**\n * Use this enum at bootstrap as an option of `bootstrapModule` to define the strategy\n * that the compiler should use in case of missing translations:\n * - Error: throw if you have missing translations.\n * - Warning (default): show a warning in the console and/or shell.\n * - Ignore: do nothing.\n *\n * See the [i18n guide](guide/i18n#missing-translation) for more information.\n *\n * @usageNotes\n * ### Example\n * ```typescript\n * import { MissingTranslationStrategy } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   missingTranslation: MissingTranslationStrategy.Error\n * });\n * ```\n *\n * @publicApi\n */\nexport enum MissingTranslationStrategy {\n  Error = 0,\n  Warning = 1,\n  Ignore = 2,\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {APP_INITIALIZER, ApplicationInitStatus} from './application_init';\nimport {ApplicationRef} from './application_ref';\nimport {APP_ID_RANDOM_PROVIDER} from './application_tokens';\nimport {IterableDiffers, KeyValueDiffers, defaultIterableDiffers, defaultKeyValueDiffers} from './change_detection/change_detection';\nimport {Console} from './console';\nimport {InjectionToken, Injector, StaticProvider} from './di';\nimport {Inject, Optional, SkipSelf} from './di/metadata';\nimport {ErrorHandler} from './error_handler';\nimport {LOCALE_ID} from './i18n/tokens';\nimport {ComponentFactoryResolver} from './linker';\nimport {Compiler} from './linker/compiler';\nimport {NgModule} from './metadata';\nimport {NgZone} from './zone';\n\nexport function _iterableDiffersFactory() {\n  return defaultIterableDiffers;\n}\n\nexport function _keyValueDiffersFactory() {\n  return defaultKeyValueDiffers;\n}\n\nexport function _localeFactory(locale?: string): string {\n  return locale || 'en-US';\n}\n\n/**\n * A built-in [dependency injection token](guide/glossary#di-token)\n * that is used to configure the root injector for bootstrapping.\n */\nexport const APPLICATION_MODULE_PROVIDERS: StaticProvider[] = [\n  {\n    provide: ApplicationRef,\n    useClass: ApplicationRef,\n    deps:\n        [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n  },\n  {\n    provide: ApplicationInitStatus,\n    useClass: ApplicationInitStatus,\n    deps: [[new Optional(), APP_INITIALIZER]]\n  },\n  {provide: Compiler, useClass: Compiler, deps: []},\n  APP_ID_RANDOM_PROVIDER,\n  {provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: []},\n  {provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: []},\n  {\n    provide: LOCALE_ID,\n    useFactory: _localeFactory,\n    deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n  },\n];\n\n/**\n * Configures the root injector for an app with\n * providers of `@angular/core` dependencies that `ApplicationRef` needs\n * to bootstrap components.\n *\n * Re-exported by `BrowserModule`, which is included automatically in the root\n * `AppModule` when you create a new app with the CLI `new` command.\n *\n * @publicApi\n */\n@NgModule({providers: APPLICATION_MODULE_PROVIDERS})\nexport class ApplicationModule {\n  // Inject ApplicationRef to make it eager...\n  constructor(appRef: ApplicationRef) {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport const SWITCH_IVY_ENABLED__POST_R3__ = true;\nconst SWITCH_IVY_ENABLED__PRE_R3__ = false;\nexport const ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di';\nimport {ErrorHandler} from '../error_handler';\nimport {ComponentFactory} from '../linker/component_factory';\nimport {NgModuleRef} from '../linker/ng_module_factory';\nimport {QueryList} from '../linker/query_list';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {Renderer2, RendererFactory2, RendererType2} from '../render/api';\nimport {Sanitizer, SecurityContext} from '../sanitization/security';\nimport {Type} from '../type';\n\n\n// -------------------------------------\n// Defs\n// -------------------------------------\n\n/**\n * Factory for ViewDefinitions/NgModuleDefinitions.\n * We use a function so we can reexeute it in case an error happens and use the given logger\n * function to log the error from the definition of the node, which is shown in all browser\n * logs.\n */\nexport interface DefinitionFactory<D extends Definition<any>> { (logger: NodeLogger): D; }\n\n/**\n * Function to call console.error at the right source location. This is an indirection\n * via another function as browser will log the location that actually called\n * `console.error`.\n */\nexport interface NodeLogger { (): () => void; }\n\nexport interface Definition<DF extends DefinitionFactory<any>> { factory: DF|null; }\n\nexport interface NgModuleDefinition extends Definition<NgModuleDefinitionFactory> {\n  providers: NgModuleProviderDef[];\n  providersByKey: {[tokenKey: string]: NgModuleProviderDef};\n  modules: any[];\n  isRoot: boolean;\n}\n\nexport interface NgModuleDefinitionFactory extends DefinitionFactory<NgModuleDefinition> {}\n\nexport interface ViewDefinition extends Definition<ViewDefinitionFactory> {\n  flags: ViewFlags;\n  updateDirectives: ViewUpdateFn;\n  updateRenderer: ViewUpdateFn;\n  handleEvent: ViewHandleEventFn;\n  /**\n   * Order: Depth first.\n   * Especially providers are before elements / anchors.\n   */\n  nodes: NodeDef[];\n  /** aggregated NodeFlags for all nodes **/\n  nodeFlags: NodeFlags;\n  rootNodeFlags: NodeFlags;\n  lastRenderRootNode: NodeDef|null;\n  bindingCount: number;\n  outputCount: number;\n  /**\n   * Binary or of all query ids that are matched by one of the nodes.\n   * This includes query ids from templates as well.\n   * Used as a bloom filter.\n   */\n  nodeMatchedQueries: number;\n}\n\nexport interface ViewDefinitionFactory extends DefinitionFactory<ViewDefinition> {}\n\n\nexport interface ViewUpdateFn { (check: NodeCheckFn, view: ViewData): void; }\n\n// helper functions to create an overloaded function type.\nexport interface NodeCheckFn {\n  (view: ViewData, nodeIndex: number, argStyle: ArgumentType.Dynamic, values: any[]): any;\n\n  (view: ViewData, nodeIndex: number, argStyle: ArgumentType.Inline, v0?: any, v1?: any, v2?: any,\n   v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any;\n}\n\nexport const enum ArgumentType {Inline = 0, Dynamic = 1}\n\nexport interface ViewHandleEventFn {\n  (view: ViewData, nodeIndex: number, eventName: string, event: any): boolean;\n}\n\n/**\n * Bitmask for ViewDefinition.flags.\n */\nexport const enum ViewFlags {\n  None = 0,\n  OnPush = 1 << 1,\n}\n\n/**\n * A node definition in the view.\n *\n * Note: We use one type for all nodes so that loops that loop over all nodes\n * of a ViewDefinition stay monomorphic!\n */\nexport interface NodeDef {\n  flags: NodeFlags;\n  // Index of the node in view data and view definition (those are the same)\n  nodeIndex: number;\n  // Index of the node in the check functions\n  // Differ from nodeIndex when nodes are added or removed at runtime (ie after compilation)\n  checkIndex: number;\n  parent: NodeDef|null;\n  renderParent: NodeDef|null;\n  /** this is checked against NgContentDef.index to find matched nodes */\n  ngContentIndex: number|null;\n  /** number of transitive children */\n  childCount: number;\n  /** aggregated NodeFlags for all transitive children (does not include self) **/\n  childFlags: NodeFlags;\n  /** aggregated NodeFlags for all direct children (does not include self) **/\n  directChildFlags: NodeFlags;\n\n  bindingIndex: number;\n  bindings: BindingDef[];\n  bindingFlags: BindingFlags;\n  outputIndex: number;\n  outputs: OutputDef[];\n  /**\n   * references that the user placed on the element\n   */\n  references: {[refId: string]: QueryValueType};\n  /**\n   * ids and value types of all queries that are matched by this node.\n   */\n  matchedQueries: {[queryId: number]: QueryValueType};\n  /** Binary or of all matched query ids of this node. */\n  matchedQueryIds: number;\n  /**\n   * Binary or of all query ids that are matched by one of the children.\n   * This includes query ids from templates as well.\n   * Used as a bloom filter.\n   */\n  childMatchedQueries: number;\n  element: ElementDef|null;\n  provider: ProviderDef|null;\n  text: TextDef|null;\n  query: QueryDef|null;\n  ngContent: NgContentDef|null;\n}\n\n/**\n * Bitmask for NodeDef.flags.\n * Naming convention:\n * - `Type...`: flags that are mutually exclusive\n * - `Cat...`: union of multiple `Type...` (short for category).\n */\nexport const enum NodeFlags {\n  None = 0,\n  TypeElement = 1 << 0,\n  TypeText = 1 << 1,\n  ProjectedTemplate = 1 << 2,\n  CatRenderNode = TypeElement | TypeText,\n  TypeNgContent = 1 << 3,\n  TypePipe = 1 << 4,\n  TypePureArray = 1 << 5,\n  TypePureObject = 1 << 6,\n  TypePurePipe = 1 << 7,\n  CatPureExpression = TypePureArray | TypePureObject | TypePurePipe,\n  TypeValueProvider = 1 << 8,\n  TypeClassProvider = 1 << 9,\n  TypeFactoryProvider = 1 << 10,\n  TypeUseExistingProvider = 1 << 11,\n  LazyProvider = 1 << 12,\n  PrivateProvider = 1 << 13,\n  TypeDirective = 1 << 14,\n  Component = 1 << 15,\n  CatProviderNoDirective =\n      TypeValueProvider | TypeClassProvider | TypeFactoryProvider | TypeUseExistingProvider,\n  CatProvider = CatProviderNoDirective | TypeDirective,\n  OnInit = 1 << 16,\n  OnDestroy = 1 << 17,\n  DoCheck = 1 << 18,\n  OnChanges = 1 << 19,\n  AfterContentInit = 1 << 20,\n  AfterContentChecked = 1 << 21,\n  AfterViewInit = 1 << 22,\n  AfterViewChecked = 1 << 23,\n  EmbeddedViews = 1 << 24,\n  ComponentView = 1 << 25,\n  TypeContentQuery = 1 << 26,\n  TypeViewQuery = 1 << 27,\n  StaticQuery = 1 << 28,\n  DynamicQuery = 1 << 29,\n  TypeNgModule = 1 << 30,\n  CatQuery = TypeContentQuery | TypeViewQuery,\n\n  // mutually exclusive values...\n  Types = CatRenderNode | TypeNgContent | TypePipe | CatPureExpression | CatProvider | CatQuery\n}\n\nexport interface BindingDef {\n  flags: BindingFlags;\n  ns: string|null;\n  name: string|null;\n  nonMinifiedName: string|null;\n  securityContext: SecurityContext|null;\n  suffix: string|null;\n}\n\nexport const enum BindingFlags {\n  TypeElementAttribute = 1 << 0,\n  TypeElementClass = 1 << 1,\n  TypeElementStyle = 1 << 2,\n  TypeProperty = 1 << 3,\n  SyntheticProperty = 1 << 4,\n  SyntheticHostProperty = 1 << 5,\n  CatSyntheticProperty = SyntheticProperty | SyntheticHostProperty,\n\n  // mutually exclusive values...\n  Types = TypeElementAttribute | TypeElementClass | TypeElementStyle | TypeProperty\n}\n\nexport interface OutputDef {\n  type: OutputType;\n  target: 'window'|'document'|'body'|'component'|null;\n  eventName: string;\n  propName: string|null;\n}\n\nexport const enum OutputType {ElementOutput, DirectiveOutput}\n\nexport const enum QueryValueType {\n  ElementRef = 0,\n  RenderElement = 1,\n  TemplateRef = 2,\n  ViewContainerRef = 3,\n  Provider = 4\n}\n\nexport interface ElementDef {\n  // set to null for `<ng-container>`\n  name: string|null;\n  ns: string|null;\n  /** ns, name, value */\n  attrs: [string, string, string][]|null;\n  template: ViewDefinition|null;\n  componentProvider: NodeDef|null;\n  componentRendererType: RendererType2|null;\n  // closure to allow recursive components\n  componentView: ViewDefinitionFactory|null;\n  /**\n   * visible public providers for DI in the view,\n   * as see from this element. This does not include private providers.\n   */\n  publicProviders: {[tokenKey: string]: NodeDef}|null;\n  /**\n   * same as visiblePublicProviders, but also includes private providers\n   * that are located on this element.\n   */\n  allProviders: {[tokenKey: string]: NodeDef}|null;\n  handleEvent: ElementHandleEventFn|null;\n}\n\nexport interface ElementHandleEventFn { (view: ViewData, eventName: string, event: any): boolean; }\n\nexport interface ProviderDef {\n  token: any;\n  value: any;\n  deps: DepDef[];\n}\n\nexport interface NgModuleProviderDef {\n  flags: NodeFlags;\n  index: number;\n  token: any;\n  value: any;\n  deps: DepDef[];\n}\n\nexport interface DepDef {\n  flags: DepFlags;\n  token: any;\n  tokenKey: string;\n}\n\n/**\n * Bitmask for DI flags\n */\nexport const enum DepFlags {\n  None = 0,\n  SkipSelf = 1 << 0,\n  Optional = 1 << 1,\n  Self = 1 << 2,\n  Value = 1 << 3,\n}\n\nexport interface TextDef { prefix: string; }\n\nexport interface QueryDef {\n  id: number;\n  // variant of the id that can be used to check against NodeDef.matchedQueryIds, ...\n  filterId: number;\n  bindings: QueryBindingDef[];\n}\n\nexport interface QueryBindingDef {\n  propName: string;\n  bindingType: QueryBindingType;\n}\n\nexport const enum QueryBindingType {First = 0, All = 1}\n\nexport interface NgContentDef {\n  /**\n   * this index is checked against NodeDef.ngContentIndex to find the nodes\n   * that are matched by this ng-content.\n   * Note that a NodeDef with an ng-content can be reprojected, i.e.\n   * have a ngContentIndex on its own.\n   */\n  index: number;\n}\n\n// -------------------------------------\n// Data\n// -------------------------------------\n\nexport interface NgModuleData extends Injector, NgModuleRef<any> {\n  // Note: we are using the prefix _ as NgModuleData is an NgModuleRef and therefore directly\n  // exposed to the user.\n  _def: NgModuleDefinition;\n  _parent: Injector;\n  _providers: any[];\n}\n\n/**\n * View instance data.\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ViewData {\n  def: ViewDefinition;\n  root: RootData;\n  renderer: Renderer2;\n  // index of component provider / anchor.\n  parentNodeDef: NodeDef|null;\n  parent: ViewData|null;\n  viewContainerParent: ViewData|null;\n  component: any;\n  context: any;\n  // Attention: Never loop over this, as this will\n  // create a polymorphic usage site.\n  // Instead: Always loop over ViewDefinition.nodes,\n  // and call the right accessor (e.g. `elementData`) based on\n  // the NodeType.\n  nodes: {[key: number]: NodeData};\n  state: ViewState;\n  oldValues: any[];\n  disposables: DisposableFn[]|null;\n  initIndex: number;\n}\n\n/**\n * Bitmask of states\n */\nexport const enum ViewState {\n  BeforeFirstCheck = 1 << 0,\n  FirstCheck = 1 << 1,\n  Attached = 1 << 2,\n  ChecksEnabled = 1 << 3,\n  IsProjectedView = 1 << 4,\n  CheckProjectedView = 1 << 5,\n  CheckProjectedViews = 1 << 6,\n  Destroyed = 1 << 7,\n\n  // InitState Uses 3 bits\n  InitState_Mask = 7 << 8,\n  InitState_BeforeInit = 0 << 8,\n  InitState_CallingOnInit = 1 << 8,\n  InitState_CallingAfterContentInit = 2 << 8,\n  InitState_CallingAfterViewInit = 3 << 8,\n  InitState_AfterInit = 4 << 8,\n\n  CatDetectChanges = Attached | ChecksEnabled,\n  CatInit = BeforeFirstCheck | CatDetectChanges | InitState_BeforeInit\n}\n\n// Called before each cycle of a view's check to detect whether this is in the\n// initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n// lifecycle methods. Returns true if this check cycle should call lifecycle\n// methods.\nexport function shiftInitState(\n    view: ViewData, priorInitState: ViewState, newInitState: ViewState): boolean {\n  // Only update the InitState if we are currently in the prior state.\n  // For example, only move into CallingInit if we are in BeforeInit. Only\n  // move into CallingContentInit if we are in CallingInit. Normally this will\n  // always be true because of how checkCycle is called in checkAndUpdateView.\n  // However, if checkAndUpdateView is called recursively or if an exception is\n  // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n  // from the beginning. This ensures the state is monotonically increasing,\n  // terminating in the AfterInit state, which ensures the Init methods are called\n  // at least once and only once.\n  const state = view.state;\n  const initState = state & ViewState.InitState_Mask;\n  if (initState === priorInitState) {\n    view.state = (state & ~ViewState.InitState_Mask) | newInitState;\n    view.initIndex = -1;\n    return true;\n  }\n  return initState === newInitState;\n}\n\n// Returns true if the lifecycle init method should be called for the node with\n// the given init index.\nexport function shouldCallLifecycleInitHook(\n    view: ViewData, initState: ViewState, index: number): boolean {\n  if ((view.state & ViewState.InitState_Mask) === initState && view.initIndex <= index) {\n    view.initIndex = index + 1;\n    return true;\n  }\n  return false;\n}\n\nexport interface DisposableFn { (): void; }\n\n/**\n * Node instance data.\n *\n * We have a separate type per NodeType to save memory\n * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n *\n * To keep our code monomorphic,\n * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n * purposes.\n */\nexport class NodeData { private __brand: any; }\n\n/**\n * Data for an instantiated NodeType.Text.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface TextData { renderText: any; }\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nexport function asTextData(view: ViewData, index: number): TextData {\n  return <any>view.nodes[index];\n}\n\n/**\n * Data for an instantiated NodeType.Element.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ElementData {\n  renderElement: any;\n  componentView: ViewData;\n  viewContainer: ViewContainerData|null;\n  template: TemplateData;\n}\n\nexport interface ViewContainerData extends ViewContainerRef {\n  // Note: we are using the prefix _ as ViewContainerData is a ViewContainerRef and therefore\n  // directly\n  // exposed to the user.\n  _embeddedViews: ViewData[];\n}\n\nexport interface TemplateData extends TemplateRef<any> {\n  // views that have been created from the template\n  // of this element,\n  // but inserted into the embeddedViews of another element.\n  // By default, this is undefined.\n  // Note: we are using the prefix _ as TemplateData is a TemplateRef and therefore directly\n  // exposed to the user.\n  _projectedViews: ViewData[];\n}\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nexport function asElementData(view: ViewData, index: number): ElementData {\n  return <any>view.nodes[index];\n}\n\n/**\n * Data for an instantiated NodeType.Provider.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface ProviderData { instance: any; }\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nexport function asProviderData(view: ViewData, index: number): ProviderData {\n  return <any>view.nodes[index];\n}\n\n/**\n * Data for an instantiated NodeType.PureExpression.\n *\n * Attention: Adding fields to this is performance sensitive!\n */\nexport interface PureExpressionData { value: any; }\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nexport function asPureExpressionData(view: ViewData, index: number): PureExpressionData {\n  return <any>view.nodes[index];\n}\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nexport function asQueryList(view: ViewData, index: number): QueryList<any> {\n  return <any>view.nodes[index];\n}\n\nexport interface RootData {\n  injector: Injector;\n  ngModule: NgModuleRef<any>;\n  projectableNodes: any[][];\n  selectorOrNode: any;\n  renderer: Renderer2;\n  rendererFactory: RendererFactory2;\n  errorHandler: ErrorHandler;\n  sanitizer: Sanitizer;\n}\n\nexport abstract class DebugContext {\n  abstract get view(): ViewData;\n  abstract get nodeIndex(): number|null;\n  abstract get injector(): Injector;\n  abstract get component(): any;\n  abstract get providerTokens(): any[];\n  abstract get references(): {[key: string]: any};\n  abstract get context(): any;\n  abstract get componentRenderElement(): any;\n  abstract get renderNode(): any;\n  abstract logError(console: Console, ...values: any[]): void;\n}\n\n// -------------------------------------\n// Other\n// -------------------------------------\n\nexport const enum CheckType {CheckAndUpdate, CheckNoChanges}\n\nexport interface ProviderOverride {\n  token: any;\n  flags: NodeFlags;\n  value: any;\n  deps: ([DepFlags, any]|any)[];\n  deprecatedBehavior: boolean;\n}\n\nexport interface Services {\n  setCurrentNode(view: ViewData, nodeIndex: number): void;\n  createRootView(\n      injector: Injector, projectableNodes: any[][], rootSelectorOrNode: string|any,\n      def: ViewDefinition, ngModule: NgModuleRef<any>, context?: any): ViewData;\n  createEmbeddedView(parent: ViewData, anchorDef: NodeDef, viewDef: ViewDefinition, context?: any):\n      ViewData;\n  createComponentView(\n      parentView: ViewData, nodeDef: NodeDef, viewDef: ViewDefinition, hostElement: any): ViewData;\n  createNgModuleRef(\n      moduleType: Type<any>, parent: Injector, bootstrapComponents: Type<any>[],\n      def: NgModuleDefinition): NgModuleRef<any>;\n  overrideProvider(override: ProviderOverride): void;\n  overrideComponentView(compType: Type<any>, compFactory: ComponentFactory<any>): void;\n  clearOverrides(): void;\n  checkAndUpdateView(view: ViewData): void;\n  checkNoChangesView(view: ViewData): void;\n  destroyView(view: ViewData): void;\n  resolveDep(\n      view: ViewData, elDef: NodeDef|null, allowPrivateServices: boolean, depDef: DepDef,\n      notFoundValue?: any): any;\n  createDebugContext(view: ViewData, nodeIndex: number): DebugContext;\n  handleEvent: ViewHandleEventFn;\n  updateDirectives: (view: ViewData, checkType: CheckType) => void;\n  updateRenderer: (view: ViewData, checkType: CheckType) => void;\n  dirtyParentQueries: (view: ViewData) => void;\n}\n\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nexport const Services: Services = {\n  setCurrentNode: undefined !,\n  createRootView: undefined !,\n  createEmbeddedView: undefined !,\n  createComponentView: undefined !,\n  createNgModuleRef: undefined !,\n  overrideProvider: undefined !,\n  overrideComponentView: undefined !,\n  clearOverrides: undefined !,\n  checkAndUpdateView: undefined !,\n  checkNoChangesView: undefined !,\n  destroyView: undefined !,\n  resolveDep: undefined !,\n  createDebugContext: undefined !,\n  handleEvent: undefined !,\n  updateDirectives: undefined !,\n  updateRenderer: undefined !,\n  dirtyParentQueries: undefined !,\n};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ERROR_DEBUG_CONTEXT, ERROR_LOGGER, getDebugContext} from '../errors';\nimport {DebugContext, ViewState} from './types';\n\nexport function expressionChangedAfterItHasBeenCheckedError(\n    context: DebugContext, oldValue: any, currValue: any, isFirstCheck: boolean): Error {\n  let msg =\n      `ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '${oldValue}'. Current value: '${currValue}'.`;\n  if (isFirstCheck) {\n    msg +=\n        ` It seems like the view has been created after its parent and its children have been dirty checked.` +\n        ` Has it been created in a change detection hook ?`;\n  }\n  return viewDebugError(msg, context);\n}\n\nexport function viewWrappedDebugError(err: any, context: DebugContext): Error {\n  if (!(err instanceof Error)) {\n    // errors that are not Error instances don't have a stack,\n    // so it is ok to wrap them into a new Error object...\n    err = new Error(err.toString());\n  }\n  _addDebugContext(err, context);\n  return err;\n}\n\nexport function viewDebugError(msg: string, context: DebugContext): Error {\n  const err = new Error(msg);\n  _addDebugContext(err, context);\n  return err;\n}\n\nfunction _addDebugContext(err: Error, context: DebugContext) {\n  (err as any)[ERROR_DEBUG_CONTEXT] = context;\n  (err as any)[ERROR_LOGGER] = context.logError.bind(context);\n}\n\nexport function isViewDebugError(err: Error): boolean {\n  return !!getDebugContext(err);\n}\n\nexport function viewDestroyedError(action: string): Error {\n  return new Error(`ViewDestroyedError: Attempt to use a destroyed view: ${action}`);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {WrappedValue, devModeEqual} from '../change_detection/change_detection';\nimport {SOURCE} from '../di/injector';\nimport {ViewEncapsulation} from '../metadata/view';\nimport {RendererType2} from '../render/api';\nimport {looseIdentical, stringify} from '../util';\nimport {expressionChangedAfterItHasBeenCheckedError} from './errors';\nimport {BindingDef, BindingFlags, Definition, DefinitionFactory, DepDef, DepFlags, ElementData, NodeDef, NodeFlags, QueryValueType, Services, ViewData, ViewDefinition, ViewDefinitionFactory, ViewFlags, ViewState, asElementData, asTextData} from './types';\n\nexport const NOOP: any = () => {};\n\nconst _tokenKeyCache = new Map<any, string>();\n\nexport function tokenKey(token: any): string {\n  let key = _tokenKeyCache.get(token);\n  if (!key) {\n    key = stringify(token) + '_' + _tokenKeyCache.size;\n    _tokenKeyCache.set(token, key);\n  }\n  return key;\n}\n\nexport function unwrapValue(view: ViewData, nodeIdx: number, bindingIdx: number, value: any): any {\n  if (WrappedValue.isWrapped(value)) {\n    value = WrappedValue.unwrap(value);\n    const globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n    const oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n    view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n  }\n  return value;\n}\n\nconst UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\nconst EMPTY_RENDERER_TYPE_ID = '$$empty';\n\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nexport function createRendererType2(values: {\n  styles: (string | any[])[],\n  encapsulation: ViewEncapsulation,\n  data: {[kind: string]: any[]}\n}): RendererType2 {\n  return {\n    id: UNDEFINED_RENDERER_TYPE_ID,\n    styles: values.styles,\n    encapsulation: values.encapsulation,\n    data: values.data\n  };\n}\n\nlet _renderCompCount = 0;\n\nexport function resolveRendererType2(type?: RendererType2 | null): RendererType2|null {\n  if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n    // first time we see this RendererType2. Initialize it...\n    const isFilled =\n        ((type.encapsulation != null && type.encapsulation !== ViewEncapsulation.None) ||\n         type.styles.length || Object.keys(type.data).length);\n    if (isFilled) {\n      type.id = `c${_renderCompCount++}`;\n    } else {\n      type.id = EMPTY_RENDERER_TYPE_ID;\n    }\n  }\n  if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n    type = null;\n  }\n  return type || null;\n}\n\nexport function checkBinding(\n    view: ViewData, def: NodeDef, bindingIdx: number, value: any): boolean {\n  const oldValues = view.oldValues;\n  if ((view.state & ViewState.FirstCheck) ||\n      !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n    return true;\n  }\n  return false;\n}\n\nexport function checkAndUpdateBinding(\n    view: ViewData, def: NodeDef, bindingIdx: number, value: any): boolean {\n  if (checkBinding(view, def, bindingIdx, value)) {\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return true;\n  }\n  return false;\n}\n\nexport function checkBindingNoChanges(\n    view: ViewData, def: NodeDef, bindingIdx: number, value: any) {\n  const oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n  if ((view.state & ViewState.BeforeFirstCheck) || !devModeEqual(oldValue, value)) {\n    const bindingName = def.bindings[bindingIdx].name;\n    throw expressionChangedAfterItHasBeenCheckedError(\n        Services.createDebugContext(view, def.nodeIndex), `${bindingName}: ${oldValue}`,\n        `${bindingName}: ${value}`, (view.state & ViewState.BeforeFirstCheck) !== 0);\n  }\n}\n\nexport function markParentViewsForCheck(view: ViewData) {\n  let currView: ViewData|null = view;\n  while (currView) {\n    if (currView.def.flags & ViewFlags.OnPush) {\n      currView.state |= ViewState.ChecksEnabled;\n    }\n    currView = currView.viewContainerParent || currView.parent;\n  }\n}\n\nexport function markParentViewsForCheckProjectedViews(view: ViewData, endView: ViewData) {\n  let currView: ViewData|null = view;\n  while (currView && currView !== endView) {\n    currView.state |= ViewState.CheckProjectedViews;\n    currView = currView.viewContainerParent || currView.parent;\n  }\n}\n\nexport function dispatchEvent(\n    view: ViewData, nodeIndex: number, eventName: string, event: any): boolean|undefined {\n  try {\n    const nodeDef = view.def.nodes[nodeIndex];\n    const startView = nodeDef.flags & NodeFlags.ComponentView ?\n        asElementData(view, nodeIndex).componentView :\n        view;\n    markParentViewsForCheck(startView);\n    return Services.handleEvent(view, nodeIndex, eventName, event);\n  } catch (e) {\n    // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n    view.root.errorHandler.handleError(e);\n  }\n}\n\nexport function declaredViewContainer(view: ViewData): ElementData|null {\n  if (view.parent) {\n    const parentView = view.parent;\n    return asElementData(parentView, view.parentNodeDef !.nodeIndex);\n  }\n  return null;\n}\n\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n */\nexport function viewParentEl(view: ViewData): NodeDef|null {\n  const parentView = view.parent;\n  if (parentView) {\n    return view.parentNodeDef !.parent;\n  } else {\n    return null;\n  }\n}\n\nexport function renderNode(view: ViewData, def: NodeDef): any {\n  switch (def.flags & NodeFlags.Types) {\n    case NodeFlags.TypeElement:\n      return asElementData(view, def.nodeIndex).renderElement;\n    case NodeFlags.TypeText:\n      return asTextData(view, def.nodeIndex).renderText;\n  }\n}\n\nexport function elementEventFullName(target: string | null, name: string): string {\n  return target ? `${target}:${name}` : name;\n}\n\nexport function isComponentView(view: ViewData): boolean {\n  return !!view.parent && !!(view.parentNodeDef !.flags & NodeFlags.Component);\n}\n\nexport function isEmbeddedView(view: ViewData): boolean {\n  return !!view.parent && !(view.parentNodeDef !.flags & NodeFlags.Component);\n}\n\nexport function filterQueryId(queryId: number): number {\n  return 1 << (queryId % 32);\n}\n\nexport function splitMatchedQueriesDsl(\n    matchedQueriesDsl: [string | number, QueryValueType][] | null): {\n  matchedQueries: {[queryId: string]: QueryValueType},\n  references: {[refId: string]: QueryValueType},\n  matchedQueryIds: number\n} {\n  const matchedQueries: {[queryId: string]: QueryValueType} = {};\n  let matchedQueryIds = 0;\n  const references: {[refId: string]: QueryValueType} = {};\n  if (matchedQueriesDsl) {\n    matchedQueriesDsl.forEach(([queryId, valueType]) => {\n      if (typeof queryId === 'number') {\n        matchedQueries[queryId] = valueType;\n        matchedQueryIds |= filterQueryId(queryId);\n      } else {\n        references[queryId] = valueType;\n      }\n    });\n  }\n  return {matchedQueries, references, matchedQueryIds};\n}\n\nexport function splitDepsDsl(deps: ([DepFlags, any] | any)[], sourceName?: string): DepDef[] {\n  return deps.map(value => {\n    let token: any;\n    let flags: DepFlags;\n    if (Array.isArray(value)) {\n      [flags, token] = value;\n    } else {\n      flags = DepFlags.None;\n      token = value;\n    }\n    if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n      Object.defineProperty(token, SOURCE, {value: sourceName, configurable: true});\n    }\n    return {flags, token, tokenKey: tokenKey(token)};\n  });\n}\n\nexport function getParentRenderElement(view: ViewData, renderHost: any, def: NodeDef): any {\n  let renderParent = def.renderParent;\n  if (renderParent) {\n    if ((renderParent.flags & NodeFlags.TypeElement) === 0 ||\n        (renderParent.flags & NodeFlags.ComponentView) === 0 ||\n        (renderParent.element !.componentRendererType &&\n         renderParent.element !.componentRendererType !.encapsulation ===\n             ViewEncapsulation.Native)) {\n      // only children of non components, or children of components with native encapsulation should\n      // be attached.\n      return asElementData(view, def.renderParent !.nodeIndex).renderElement;\n    }\n  } else {\n    return renderHost;\n  }\n}\n\nconst DEFINITION_CACHE = new WeakMap<any, Definition<any>>();\n\nexport function resolveDefinition<D extends Definition<any>>(factory: DefinitionFactory<D>): D {\n  let value = DEFINITION_CACHE.get(factory) !as D;\n  if (!value) {\n    value = factory(() => NOOP);\n    value.factory = factory;\n    DEFINITION_CACHE.set(factory, value);\n  }\n  return value;\n}\n\nexport function rootRenderNodes(view: ViewData): any[] {\n  const renderNodes: any[] = [];\n  visitRootRenderNodes(view, RenderNodeAction.Collect, undefined, undefined, renderNodes);\n  return renderNodes;\n}\n\nexport const enum RenderNodeAction {Collect, AppendChild, InsertBefore, RemoveChild}\n\nexport function visitRootRenderNodes(\n    view: ViewData, action: RenderNodeAction, parentNode: any, nextSibling: any, target?: any[]) {\n  // We need to re-compute the parent node in case the nodes have been moved around manually\n  if (action === RenderNodeAction.RemoveChild) {\n    parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode !));\n  }\n  visitSiblingRenderNodes(\n      view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\n\nexport function visitSiblingRenderNodes(\n    view: ViewData, action: RenderNodeAction, startIndex: number, endIndex: number, parentNode: any,\n    nextSibling: any, target?: any[]) {\n  for (let i = startIndex; i <= endIndex; i++) {\n    const nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & (NodeFlags.TypeElement | NodeFlags.TypeText | NodeFlags.TypeNgContent)) {\n      visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n    }\n    // jump to next sibling\n    i += nodeDef.childCount;\n  }\n}\n\nexport function visitProjectedRenderNodes(\n    view: ViewData, ngContentIndex: number, action: RenderNodeAction, parentNode: any,\n    nextSibling: any, target?: any[]) {\n  let compView: ViewData|null = view;\n  while (compView && !isComponentView(compView)) {\n    compView = compView.parent;\n  }\n  const hostView = compView !.parent;\n  const hostElDef = viewParentEl(compView !);\n  const startIndex = hostElDef !.nodeIndex + 1;\n  const endIndex = hostElDef !.nodeIndex + hostElDef !.childCount;\n  for (let i = startIndex; i <= endIndex; i++) {\n    const nodeDef = hostView !.def.nodes[i];\n    if (nodeDef.ngContentIndex === ngContentIndex) {\n      visitRenderNode(hostView !, nodeDef, action, parentNode, nextSibling, target);\n    }\n    // jump to next sibling\n    i += nodeDef.childCount;\n  }\n  if (!hostView !.parent) {\n    // a root view\n    const projectedNodes = view.root.projectableNodes[ngContentIndex];\n    if (projectedNodes) {\n      for (let i = 0; i < projectedNodes.length; i++) {\n        execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n      }\n    }\n  }\n}\n\nfunction visitRenderNode(\n    view: ViewData, nodeDef: NodeDef, action: RenderNodeAction, parentNode: any, nextSibling: any,\n    target?: any[]) {\n  if (nodeDef.flags & NodeFlags.TypeNgContent) {\n    visitProjectedRenderNodes(\n        view, nodeDef.ngContent !.index, action, parentNode, nextSibling, target);\n  } else {\n    const rn = renderNode(view, nodeDef);\n    if (action === RenderNodeAction.RemoveChild && (nodeDef.flags & NodeFlags.ComponentView) &&\n        (nodeDef.bindingFlags & BindingFlags.CatSyntheticProperty)) {\n      // Note: we might need to do both actions.\n      if (nodeDef.bindingFlags & (BindingFlags.SyntheticProperty)) {\n        execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n      }\n      if (nodeDef.bindingFlags & (BindingFlags.SyntheticHostProperty)) {\n        const compView = asElementData(view, nodeDef.nodeIndex).componentView;\n        execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n      }\n    } else {\n      execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n    }\n    if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n      const embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer !._embeddedViews;\n      for (let k = 0; k < embeddedViews.length; k++) {\n        visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n      }\n    }\n    if (nodeDef.flags & NodeFlags.TypeElement && !nodeDef.element !.name) {\n      visitSiblingRenderNodes(\n          view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode,\n          nextSibling, target);\n    }\n  }\n}\n\nfunction execRenderNodeAction(\n    view: ViewData, renderNode: any, action: RenderNodeAction, parentNode: any, nextSibling: any,\n    target?: any[]) {\n  const renderer = view.renderer;\n  switch (action) {\n    case RenderNodeAction.AppendChild:\n      renderer.appendChild(parentNode, renderNode);\n      break;\n    case RenderNodeAction.InsertBefore:\n      renderer.insertBefore(parentNode, renderNode, nextSibling);\n      break;\n    case RenderNodeAction.RemoveChild:\n      renderer.removeChild(parentNode, renderNode);\n      break;\n    case RenderNodeAction.Collect:\n      target !.push(renderNode);\n      break;\n  }\n}\n\nconst NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n\nexport function splitNamespace(name: string): string[] {\n  if (name[0] === ':') {\n    const match = name.match(NS_PREFIX_RE) !;\n    return [match[1], match[2]];\n  }\n  return ['', name];\n}\n\nexport function calcBindingFlags(bindings: BindingDef[]): BindingFlags {\n  let flags = 0;\n  for (let i = 0; i < bindings.length; i++) {\n    flags |= bindings[i].flags;\n  }\n  return flags;\n}\n\nexport function interpolate(valueCount: number, constAndInterp: string[]): string {\n  let result = '';\n  for (let i = 0; i < valueCount * 2; i = i + 2) {\n    result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n  }\n  return result + constAndInterp[valueCount * 2];\n}\n\nexport function inlineInterpolate(\n    valueCount: number, c0: string, a1: any, c1: string, a2?: any, c2?: string, a3?: any,\n    c3?: string, a4?: any, c4?: string, a5?: any, c5?: string, a6?: any, c6?: string, a7?: any,\n    c7?: string, a8?: any, c8?: string, a9?: any, c9?: string): string {\n  switch (valueCount) {\n    case 1:\n      return c0 + _toStringWithNull(a1) + c1;\n    case 2:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n    case 3:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3;\n    case 4:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4;\n    case 5:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n    case 6:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n    case 7:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n          c6 + _toStringWithNull(a7) + c7;\n    case 8:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n          c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n    case 9:\n      return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n          c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n          c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n    default:\n      throw new Error(`Does not support more than 9 expressions`);\n  }\n}\n\nfunction _toStringWithNull(v: any): string {\n  return v != null ? v.toString() : '';\n}\n\nexport const EMPTY_ARRAY: any[] = [];\nexport const EMPTY_MAP: {[key: string]: any} = {};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ViewEncapsulation} from '../metadata/view';\nimport {RendererType2} from '../render/api';\nimport {SecurityContext} from '../sanitization/security';\n\nimport {BindingDef, BindingFlags, ElementData, ElementHandleEventFn, NodeDef, NodeFlags, OutputDef, OutputType, QueryValueType, ViewData, ViewDefinitionFactory, asElementData} from './types';\nimport {NOOP, calcBindingFlags, checkAndUpdateBinding, dispatchEvent, elementEventFullName, getParentRenderElement, resolveDefinition, resolveRendererType2, splitMatchedQueriesDsl, splitNamespace} from './util';\n\nexport function anchorDef(\n    flags: NodeFlags, matchedQueriesDsl: null | [string | number, QueryValueType][],\n    ngContentIndex: null | number, childCount: number, handleEvent?: null | ElementHandleEventFn,\n    templateFactory?: ViewDefinitionFactory): NodeDef {\n  flags |= NodeFlags.TypeElement;\n  const {matchedQueries, references, matchedQueryIds} = splitMatchedQueriesDsl(matchedQueriesDsl);\n  const template = templateFactory ? resolveDefinition(templateFactory) : null;\n\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    flags,\n    checkIndex: -1,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0, matchedQueries, matchedQueryIds, references, ngContentIndex, childCount,\n    bindings: [],\n    bindingFlags: 0,\n    outputs: [],\n    element: {\n      ns: null,\n      name: null,\n      attrs: null, template,\n      componentProvider: null,\n      componentView: null,\n      componentRendererType: null,\n      publicProviders: null,\n      allProviders: null,\n      handleEvent: handleEvent || NOOP\n    },\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n\nexport function elementDef(\n    checkIndex: number, flags: NodeFlags,\n    matchedQueriesDsl: null | [string | number, QueryValueType][], ngContentIndex: null | number,\n    childCount: number, namespaceAndName: string | null, fixedAttrs: null | [string, string][] = [],\n    bindings?: null | [BindingFlags, string, string | SecurityContext | null][],\n    outputs?: null | ([string, string])[], handleEvent?: null | ElementHandleEventFn,\n    componentView?: null | ViewDefinitionFactory,\n    componentRendererType?: RendererType2 | null): NodeDef {\n  if (!handleEvent) {\n    handleEvent = NOOP;\n  }\n  const {matchedQueries, references, matchedQueryIds} = splitMatchedQueriesDsl(matchedQueriesDsl);\n  let ns: string = null !;\n  let name: string = null !;\n  if (namespaceAndName) {\n    [ns, name] = splitNamespace(namespaceAndName);\n  }\n  bindings = bindings || [];\n  const bindingDefs: BindingDef[] = new Array(bindings.length);\n  for (let i = 0; i < bindings.length; i++) {\n    const [bindingFlags, namespaceAndName, suffixOrSecurityContext] = bindings[i];\n\n    const [ns, name] = splitNamespace(namespaceAndName);\n    let securityContext: SecurityContext = undefined !;\n    let suffix: string = undefined !;\n    switch (bindingFlags & BindingFlags.Types) {\n      case BindingFlags.TypeElementStyle:\n        suffix = <string>suffixOrSecurityContext;\n        break;\n      case BindingFlags.TypeElementAttribute:\n      case BindingFlags.TypeProperty:\n        securityContext = <SecurityContext>suffixOrSecurityContext;\n        break;\n    }\n    bindingDefs[i] =\n        {flags: bindingFlags, ns, name, nonMinifiedName: name, securityContext, suffix};\n  }\n  outputs = outputs || [];\n  const outputDefs: OutputDef[] = new Array(outputs.length);\n  for (let i = 0; i < outputs.length; i++) {\n    const [target, eventName] = outputs[i];\n    outputDefs[i] = {\n      type: OutputType.ElementOutput,\n      target: <any>target, eventName,\n      propName: null\n    };\n  }\n  fixedAttrs = fixedAttrs || [];\n  const attrs = <[string, string, string][]>fixedAttrs.map(([namespaceAndName, value]) => {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    return [ns, name, value];\n  });\n  componentRendererType = resolveRendererType2(componentRendererType);\n  if (componentView) {\n    flags |= NodeFlags.ComponentView;\n  }\n  flags |= NodeFlags.TypeElement;\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex,\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0, matchedQueries, matchedQueryIds, references, ngContentIndex, childCount,\n    bindings: bindingDefs,\n    bindingFlags: calcBindingFlags(bindingDefs),\n    outputs: outputDefs,\n    element: {\n      ns,\n      name,\n      attrs,\n      template: null,\n      // will bet set by the view definition\n      componentProvider: null,\n      componentView: componentView || null,\n      componentRendererType: componentRendererType,\n      publicProviders: null,\n      allProviders: null,\n      handleEvent: handleEvent || NOOP,\n    },\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n\nexport function createElement(view: ViewData, renderHost: any, def: NodeDef): ElementData {\n  const elDef = def.element !;\n  const rootSelectorOrNode = view.root.selectorOrNode;\n  const renderer = view.renderer;\n  let el: any;\n  if (view.parent || !rootSelectorOrNode) {\n    if (elDef.name) {\n      el = renderer.createElement(elDef.name, elDef.ns);\n    } else {\n      el = renderer.createComment('');\n    }\n    const parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n      renderer.appendChild(parentEl, el);\n    }\n  } else {\n    // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n    const preserveContent =\n        (!!elDef.componentRendererType &&\n         elDef.componentRendererType.encapsulation === ViewEncapsulation.ShadowDom);\n    el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n  }\n  if (elDef.attrs) {\n    for (let i = 0; i < elDef.attrs.length; i++) {\n      const [ns, name, value] = elDef.attrs[i];\n      renderer.setAttribute(el, name, value, ns);\n    }\n  }\n  return el;\n}\n\nexport function listenToElementOutputs(view: ViewData, compView: ViewData, def: NodeDef, el: any) {\n  for (let i = 0; i < def.outputs.length; i++) {\n    const output = def.outputs[i];\n    const handleEventClosure = renderEventHandlerClosure(\n        view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n    let listenTarget: 'window'|'document'|'body'|'component'|null = output.target;\n    let listenerView = view;\n    if (output.target === 'component') {\n      listenTarget = null;\n      listenerView = compView;\n    }\n    const disposable =\n        <any>listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n    view.disposables ![def.outputIndex + i] = disposable;\n  }\n}\n\nfunction renderEventHandlerClosure(view: ViewData, index: number, eventName: string) {\n  return (event: any) => dispatchEvent(view, index, eventName, event);\n}\n\n\nexport function checkAndUpdateElementInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  const bindLen = def.bindings.length;\n  let changed = false;\n  if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0)) changed = true;\n  if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1)) changed = true;\n  if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2)) changed = true;\n  if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3)) changed = true;\n  if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4)) changed = true;\n  if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5)) changed = true;\n  if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6)) changed = true;\n  if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7)) changed = true;\n  if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8)) changed = true;\n  if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9)) changed = true;\n  return changed;\n}\n\nexport function checkAndUpdateElementDynamic(view: ViewData, def: NodeDef, values: any[]): boolean {\n  let changed = false;\n  for (let i = 0; i < values.length; i++) {\n    if (checkAndUpdateElementValue(view, def, i, values[i])) changed = true;\n  }\n  return changed;\n}\n\nfunction checkAndUpdateElementValue(view: ViewData, def: NodeDef, bindingIdx: number, value: any) {\n  if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n    return false;\n  }\n  const binding = def.bindings[bindingIdx];\n  const elData = asElementData(view, def.nodeIndex);\n  const renderNode = elData.renderElement;\n  const name = binding.name !;\n  switch (binding.flags & BindingFlags.Types) {\n    case BindingFlags.TypeElementAttribute:\n      setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n      break;\n    case BindingFlags.TypeElementClass:\n      setElementClass(view, renderNode, name, value);\n      break;\n    case BindingFlags.TypeElementStyle:\n      setElementStyle(view, binding, renderNode, name, value);\n      break;\n    case BindingFlags.TypeProperty:\n      const bindView = (def.flags & NodeFlags.ComponentView &&\n                        binding.flags & BindingFlags.SyntheticHostProperty) ?\n          elData.componentView :\n          view;\n      setElementProperty(bindView, binding, renderNode, name, value);\n      break;\n  }\n  return true;\n}\n\nfunction setElementAttribute(\n    view: ViewData, binding: BindingDef, renderNode: any, ns: string | null, name: string,\n    value: any) {\n  const securityContext = binding.securityContext;\n  let renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n  renderValue = renderValue != null ? renderValue.toString() : null;\n  const renderer = view.renderer;\n  if (value != null) {\n    renderer.setAttribute(renderNode, name, renderValue, ns);\n  } else {\n    renderer.removeAttribute(renderNode, name, ns);\n  }\n}\n\nfunction setElementClass(view: ViewData, renderNode: any, name: string, value: boolean) {\n  const renderer = view.renderer;\n  if (value) {\n    renderer.addClass(renderNode, name);\n  } else {\n    renderer.removeClass(renderNode, name);\n  }\n}\n\nfunction setElementStyle(\n    view: ViewData, binding: BindingDef, renderNode: any, name: string, value: any) {\n  let renderValue: string|null =\n      view.root.sanitizer.sanitize(SecurityContext.STYLE, value as{} | string);\n  if (renderValue != null) {\n    renderValue = renderValue.toString();\n    const unit = binding.suffix;\n    if (unit != null) {\n      renderValue = renderValue + unit;\n    }\n  } else {\n    renderValue = null;\n  }\n  const renderer = view.renderer;\n  if (renderValue != null) {\n    renderer.setStyle(renderNode, name, renderValue);\n  } else {\n    renderer.removeStyle(renderNode, name);\n  }\n}\n\nfunction setElementProperty(\n    view: ViewData, binding: BindingDef, renderNode: any, name: string, value: any) {\n  const securityContext = binding.securityContext;\n  let renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n  view.renderer.setProperty(renderNode, name, renderValue);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectableDef, getInjectableDef} from '../di/defs';\nimport {resolveForwardRef} from '../di/forward_ref';\nimport {INJECTOR, Injector} from '../di/injector';\nimport {setCurrentInjector} from '../di/injector_compatibility';\nimport {APP_ROOT} from '../di/scope';\nimport {NgModuleRef} from '../linker/ng_module_factory';\nimport {stringify} from '../util';\n\nimport {DepDef, DepFlags, NgModuleData, NgModuleDefinition, NgModuleProviderDef, NodeFlags} from './types';\nimport {splitDepsDsl, tokenKey} from './util';\n\nconst UNDEFINED_VALUE = new Object();\n\nconst InjectorRefTokenKey = tokenKey(Injector);\nconst INJECTORRefTokenKey = tokenKey(INJECTOR);\nconst NgModuleRefTokenKey = tokenKey(NgModuleRef);\n\nexport function moduleProvideDef(\n    flags: NodeFlags, token: any, value: any,\n    deps: ([DepFlags, any] | any)[]): NgModuleProviderDef {\n  // Need to resolve forwardRefs as e.g. for `useValue` we\n  // lowered the expression and then stopped evaluating it,\n  // i.e. also didn't unwrap it.\n  value = resolveForwardRef(value);\n  const depDefs = splitDepsDsl(deps, stringify(token));\n  return {\n    // will bet set by the module definition\n    index: -1,\n    deps: depDefs, flags, token, value\n  };\n}\n\nexport function moduleDef(providers: NgModuleProviderDef[]): NgModuleDefinition {\n  const providersByKey: {[key: string]: NgModuleProviderDef} = {};\n  const modules = [];\n  let isRoot: boolean = false;\n  for (let i = 0; i < providers.length; i++) {\n    const provider = providers[i];\n    if (provider.token === APP_ROOT && provider.value === true) {\n      isRoot = true;\n    }\n    if (provider.flags & NodeFlags.TypeNgModule) {\n      modules.push(provider.token);\n    }\n    provider.index = i;\n    providersByKey[tokenKey(provider.token)] = provider;\n  }\n  return {\n    // Will be filled later...\n    factory: null,\n    providersByKey,\n    providers,\n    modules,\n    isRoot,\n  };\n}\n\nexport function initNgModule(data: NgModuleData) {\n  const def = data._def;\n  const providers = data._providers = new Array(def.providers.length);\n  for (let i = 0; i < def.providers.length; i++) {\n    const provDef = def.providers[i];\n    if (!(provDef.flags & NodeFlags.LazyProvider)) {\n      // Make sure the provider has not been already initialized outside this loop.\n      if (providers[i] === undefined) {\n        providers[i] = _createProviderInstance(data, provDef);\n      }\n    }\n  }\n}\n\nexport function resolveNgModuleDep(\n    data: NgModuleData, depDef: DepDef, notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n  const former = setCurrentInjector(data);\n  try {\n    if (depDef.flags & DepFlags.Value) {\n      return depDef.token;\n    }\n    if (depDef.flags & DepFlags.Optional) {\n      notFoundValue = null;\n    }\n    if (depDef.flags & DepFlags.SkipSelf) {\n      return data._parent.get(depDef.token, notFoundValue);\n    }\n    const tokenKey = depDef.tokenKey;\n    switch (tokenKey) {\n      case InjectorRefTokenKey:\n      case INJECTORRefTokenKey:\n      case NgModuleRefTokenKey:\n        return data;\n    }\n    const providerDef = data._def.providersByKey[tokenKey];\n    let injectableDef: InjectableDef<any>|null;\n    if (providerDef) {\n      let providerInstance = data._providers[providerDef.index];\n      if (providerInstance === undefined) {\n        providerInstance = data._providers[providerDef.index] =\n            _createProviderInstance(data, providerDef);\n      }\n      return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n    } else if (\n        (injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n      const index = data._providers.length;\n      data._def.providersByKey[depDef.tokenKey] = {\n        flags: NodeFlags.TypeFactoryProvider | NodeFlags.LazyProvider,\n        value: injectableDef.factory,\n        deps: [], index,\n        token: depDef.token,\n      };\n      data._providers[index] = UNDEFINED_VALUE;\n      return (\n          data._providers[index] =\n              _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n    } else if (depDef.flags & DepFlags.Self) {\n      return notFoundValue;\n    }\n    return data._parent.get(depDef.token, notFoundValue);\n  } finally {\n    setCurrentInjector(former);\n  }\n}\n\nfunction moduleTransitivelyPresent(ngModule: NgModuleData, scope: any): boolean {\n  return ngModule._def.modules.indexOf(scope) > -1;\n}\n\nfunction targetsModule(ngModule: NgModuleData, def: InjectableDef<any>): boolean {\n  return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n                                    def.providedIn === 'root' && ngModule._def.isRoot);\n}\n\nfunction _createProviderInstance(ngModule: NgModuleData, providerDef: NgModuleProviderDef): any {\n  let injectable: any;\n  switch (providerDef.flags & NodeFlags.Types) {\n    case NodeFlags.TypeClassProvider:\n      injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n      break;\n    case NodeFlags.TypeFactoryProvider:\n      injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n      break;\n    case NodeFlags.TypeUseExistingProvider:\n      injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n      break;\n    case NodeFlags.TypeValueProvider:\n      injectable = providerDef.value;\n      break;\n  }\n\n  // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n  // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n  // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n  // set (ngOnDestroy was detected statically).\n  if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n      !(providerDef.flags & NodeFlags.OnDestroy) && typeof injectable.ngOnDestroy === 'function') {\n    providerDef.flags |= NodeFlags.OnDestroy;\n  }\n  return injectable === undefined ? UNDEFINED_VALUE : injectable;\n}\n\nfunction _createClass(ngModule: NgModuleData, ctor: any, deps: DepDef[]): any {\n  const len = deps.length;\n  switch (len) {\n    case 0:\n      return new ctor();\n    case 1:\n      return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n    case 2:\n      return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n    case 3:\n      return new ctor(\n          resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]),\n          resolveNgModuleDep(ngModule, deps[2]));\n    default:\n      const depValues = new Array(len);\n      for (let i = 0; i < len; i++) {\n        depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n      }\n      return new ctor(...depValues);\n  }\n}\n\nfunction _callFactory(ngModule: NgModuleData, factory: any, deps: DepDef[]): any {\n  const len = deps.length;\n  switch (len) {\n    case 0:\n      return factory();\n    case 1:\n      return factory(resolveNgModuleDep(ngModule, deps[0]));\n    case 2:\n      return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n    case 3:\n      return factory(\n          resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]),\n          resolveNgModuleDep(ngModule, deps[2]));\n    default:\n      const depValues = Array(len);\n      for (let i = 0; i < len; i++) {\n        depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n      }\n      return factory(...depValues);\n  }\n}\n\nexport function callNgModuleLifecycle(ngModule: NgModuleData, lifecycles: NodeFlags) {\n  const def = ngModule._def;\n  const destroyed = new Set<any>();\n  for (let i = 0; i < def.providers.length; i++) {\n    const provDef = def.providers[i];\n    if (provDef.flags & NodeFlags.OnDestroy) {\n      const instance = ngModule._providers[i];\n      if (instance && instance !== UNDEFINED_VALUE) {\n        const onDestroy: Function|undefined = instance.ngOnDestroy;\n        if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n          onDestroy.apply(instance);\n          destroyed.add(instance);\n        }\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementData, NodeDef, NodeFlags, Services, ViewData, ViewDefinition, ViewState} from './types';\nimport {RenderNodeAction, declaredViewContainer, isComponentView, renderNode, visitRootRenderNodes} from './util';\n\nexport function attachEmbeddedView(\n    parentView: ViewData, elementData: ElementData, viewIndex: number | undefined | null,\n    view: ViewData) {\n  let embeddedViews = elementData.viewContainer !._embeddedViews;\n  if (viewIndex === null || viewIndex === undefined) {\n    viewIndex = embeddedViews.length;\n  }\n  view.viewContainerParent = parentView;\n  addToArray(embeddedViews, viewIndex !, view);\n  attachProjectedView(elementData, view);\n\n  Services.dirtyParentQueries(view);\n\n  const prevView = viewIndex ! > 0 ? embeddedViews[viewIndex ! - 1] : null;\n  renderAttachEmbeddedView(elementData, prevView, view);\n}\n\nfunction attachProjectedView(vcElementData: ElementData, view: ViewData) {\n  const dvcElementData = declaredViewContainer(view);\n  if (!dvcElementData || dvcElementData === vcElementData ||\n      view.state & ViewState.IsProjectedView) {\n    return;\n  }\n  // Note: For performance reasons, we\n  // - add a view to template._projectedViews only 1x throughout its lifetime,\n  //   and remove it not until the view is destroyed.\n  //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n  //    nested projected views as well, even across component boundaries).\n  // - don't track the insertion order of views in the projected views array\n  //   (hard, as when the views of the same template are inserted different view containers)\n  view.state |= ViewState.IsProjectedView;\n  let projectedViews = dvcElementData.template._projectedViews;\n  if (!projectedViews) {\n    projectedViews = dvcElementData.template._projectedViews = [];\n  }\n  projectedViews.push(view);\n  // Note: we are changing the NodeDef here as we cannot calculate\n  // the fact whether a template is used for projection during compilation.\n  markNodeAsProjectedTemplate(view.parent !.def, view.parentNodeDef !);\n}\n\nfunction markNodeAsProjectedTemplate(viewDef: ViewDefinition, nodeDef: NodeDef) {\n  if (nodeDef.flags & NodeFlags.ProjectedTemplate) {\n    return;\n  }\n  viewDef.nodeFlags |= NodeFlags.ProjectedTemplate;\n  nodeDef.flags |= NodeFlags.ProjectedTemplate;\n  let parentNodeDef = nodeDef.parent;\n  while (parentNodeDef) {\n    parentNodeDef.childFlags |= NodeFlags.ProjectedTemplate;\n    parentNodeDef = parentNodeDef.parent;\n  }\n}\n\nexport function detachEmbeddedView(elementData: ElementData, viewIndex?: number): ViewData|null {\n  const embeddedViews = elementData.viewContainer !._embeddedViews;\n  if (viewIndex == null || viewIndex >= embeddedViews.length) {\n    viewIndex = embeddedViews.length - 1;\n  }\n  if (viewIndex < 0) {\n    return null;\n  }\n  const view = embeddedViews[viewIndex];\n  view.viewContainerParent = null;\n  removeFromArray(embeddedViews, viewIndex);\n\n  // See attachProjectedView for why we don't update projectedViews here.\n  Services.dirtyParentQueries(view);\n\n  renderDetachView(view);\n\n  return view;\n}\n\nexport function detachProjectedView(view: ViewData) {\n  if (!(view.state & ViewState.IsProjectedView)) {\n    return;\n  }\n  const dvcElementData = declaredViewContainer(view);\n  if (dvcElementData) {\n    const projectedViews = dvcElementData.template._projectedViews;\n    if (projectedViews) {\n      removeFromArray(projectedViews, projectedViews.indexOf(view));\n      Services.dirtyParentQueries(view);\n    }\n  }\n}\n\nexport function moveEmbeddedView(\n    elementData: ElementData, oldViewIndex: number, newViewIndex: number): ViewData {\n  const embeddedViews = elementData.viewContainer !._embeddedViews;\n  const view = embeddedViews[oldViewIndex];\n  removeFromArray(embeddedViews, oldViewIndex);\n  if (newViewIndex == null) {\n    newViewIndex = embeddedViews.length;\n  }\n  addToArray(embeddedViews, newViewIndex, view);\n\n  // Note: Don't need to change projectedViews as the order in there\n  // as always invalid...\n\n  Services.dirtyParentQueries(view);\n\n  renderDetachView(view);\n  const prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n  renderAttachEmbeddedView(elementData, prevView, view);\n\n  return view;\n}\n\nfunction renderAttachEmbeddedView(\n    elementData: ElementData, prevView: ViewData | null, view: ViewData) {\n  const prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode !) :\n                                    elementData.renderElement;\n  const parentNode = view.renderer.parentNode(prevRenderNode);\n  const nextSibling = view.renderer.nextSibling(prevRenderNode);\n  // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n  // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n  visitRootRenderNodes(view, RenderNodeAction.InsertBefore, parentNode, nextSibling, undefined);\n}\n\nexport function renderDetachView(view: ViewData) {\n  visitRootRenderNodes(view, RenderNodeAction.RemoveChild, null, null, undefined);\n}\n\nfunction addToArray(arr: any[], index: number, value: any) {\n  // perf: array.push is faster than array.splice!\n  if (index >= arr.length) {\n    arr.push(value);\n  } else {\n    arr.splice(index, 0, value);\n  }\n}\n\nfunction removeFromArray(arr: any[], index: number) {\n  // perf: array.pop is faster than array.splice!\n  if (index >= arr.length - 1) {\n    arr.pop();\n  } else {\n    arr.splice(index, 1);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ApplicationRef} from '../application_ref';\nimport {ChangeDetectorRef} from '../change_detection/change_detection';\nimport {Injector} from '../di/injector';\nimport {InjectFlags} from '../di/injector_compatibility';\nimport {ComponentFactory, ComponentRef} from '../linker/component_factory';\nimport {ComponentFactoryBoundToModule, ComponentFactoryResolver} from '../linker/component_factory_resolver';\nimport {ElementRef} from '../linker/element_ref';\nimport {InternalNgModuleRef, NgModuleRef} from '../linker/ng_module_factory';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {EmbeddedViewRef, InternalViewRef, ViewRef} from '../linker/view_ref';\nimport {Renderer as RendererV1, Renderer2} from '../render/api';\nimport {Type} from '../type';\nimport {stringify} from '../util';\nimport {VERSION} from '../version';\n\nimport {callNgModuleLifecycle, initNgModule, resolveNgModuleDep} from './ng_module';\nimport {DepFlags, ElementData, NgModuleData, NgModuleDefinition, NodeDef, NodeFlags, Services, TemplateData, ViewContainerData, ViewData, ViewDefinitionFactory, ViewState, asElementData, asProviderData, asTextData} from './types';\nimport {markParentViewsForCheck, resolveDefinition, rootRenderNodes, splitNamespace, tokenKey, viewParentEl} from './util';\nimport {attachEmbeddedView, detachEmbeddedView, moveEmbeddedView, renderDetachView} from './view_attach';\n\nconst EMPTY_CONTEXT = new Object();\n\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nexport function createComponentFactory(\n    selector: string, componentType: Type<any>, viewDefFactory: ViewDefinitionFactory,\n    inputs: {[propName: string]: string} | null, outputs: {[propName: string]: string},\n    ngContentSelectors: string[]): ComponentFactory<any> {\n  return new ComponentFactory_(\n      selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\n\nexport function getComponentViewDefinitionFactory(componentFactory: ComponentFactory<any>):\n    ViewDefinitionFactory {\n  return (componentFactory as ComponentFactory_).viewDefFactory;\n}\n\nclass ComponentFactory_ extends ComponentFactory<any> {\n  /**\n   * @internal\n   */\n  viewDefFactory: ViewDefinitionFactory;\n\n  constructor(\n      public selector: string, public componentType: Type<any>,\n      viewDefFactory: ViewDefinitionFactory, private _inputs: {[propName: string]: string}|null,\n      private _outputs: {[propName: string]: string}, public ngContentSelectors: string[]) {\n    // Attention: this ctor is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    super();\n    this.viewDefFactory = viewDefFactory;\n  }\n\n  get inputs() {\n    const inputsArr: {propName: string, templateName: string}[] = [];\n    const inputs = this._inputs !;\n    for (let propName in inputs) {\n      const templateName = inputs[propName];\n      inputsArr.push({propName, templateName});\n    }\n    return inputsArr;\n  }\n\n  get outputs() {\n    const outputsArr: {propName: string, templateName: string}[] = [];\n    for (let propName in this._outputs) {\n      const templateName = this._outputs[propName];\n      outputsArr.push({propName, templateName});\n    }\n    return outputsArr;\n  }\n\n  /**\n   * Creates a new component.\n   */\n  create(\n      injector: Injector, projectableNodes?: any[][], rootSelectorOrNode?: string|any,\n      ngModule?: NgModuleRef<any>): ComponentRef<any> {\n    if (!ngModule) {\n      throw new Error('ngModule should be provided');\n    }\n    const viewDef = resolveDefinition(this.viewDefFactory);\n    const componentNodeIndex = viewDef.nodes[0].element !.componentProvider !.nodeIndex;\n    const view = Services.createRootView(\n        injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n    const component = asProviderData(view, componentNodeIndex).instance;\n    if (rootSelectorOrNode) {\n      view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n    }\n\n    return new ComponentRef_(view, new ViewRef_(view), component);\n  }\n}\n\nclass ComponentRef_ extends ComponentRef<any> {\n  public readonly hostView: ViewRef;\n  public readonly instance: any;\n  public readonly changeDetectorRef: ChangeDetectorRef;\n  private _elDef: NodeDef;\n  constructor(private _view: ViewData, private _viewRef: ViewRef, private _component: any) {\n    super();\n    this._elDef = this._view.def.nodes[0];\n    this.hostView = _viewRef;\n    this.changeDetectorRef = _viewRef;\n    this.instance = _component;\n  }\n  get location(): ElementRef {\n    return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n  }\n  get injector(): Injector { return new Injector_(this._view, this._elDef); }\n  get componentType(): Type<any> { return <any>this._component.constructor; }\n\n  destroy(): void { this._viewRef.destroy(); }\n  onDestroy(callback: Function): void { this._viewRef.onDestroy(callback); }\n}\n\nexport function createViewContainerData(\n    view: ViewData, elDef: NodeDef, elData: ElementData): ViewContainerData {\n  return new ViewContainerRef_(view, elDef, elData);\n}\n\nclass ViewContainerRef_ implements ViewContainerData {\n  /**\n   * @internal\n   */\n  _embeddedViews: ViewData[] = [];\n  constructor(private _view: ViewData, private _elDef: NodeDef, private _data: ElementData) {}\n\n  get element(): ElementRef { return new ElementRef(this._data.renderElement); }\n\n  get injector(): Injector { return new Injector_(this._view, this._elDef); }\n\n  /** @deprecated No replacement */\n  get parentInjector(): Injector {\n    let view = this._view;\n    let elDef = this._elDef.parent;\n    while (!elDef && view) {\n      elDef = viewParentEl(view);\n      view = view.parent !;\n    }\n\n    return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n  }\n\n  clear(): void {\n    const len = this._embeddedViews.length;\n    for (let i = len - 1; i >= 0; i--) {\n      const view = detachEmbeddedView(this._data, i) !;\n      Services.destroyView(view);\n    }\n  }\n\n  get(index: number): ViewRef|null {\n    const view = this._embeddedViews[index];\n    if (view) {\n      const ref = new ViewRef_(view);\n      ref.attachToViewContainerRef(this);\n      return ref;\n    }\n    return null;\n  }\n\n  get length(): number { return this._embeddedViews.length; }\n\n  createEmbeddedView<C>(templateRef: TemplateRef<C>, context?: C, index?: number):\n      EmbeddedViewRef<C> {\n    const viewRef = templateRef.createEmbeddedView(context || <any>{});\n    this.insert(viewRef, index);\n    return viewRef;\n  }\n\n  createComponent<C>(\n      componentFactory: ComponentFactory<C>, index?: number, injector?: Injector,\n      projectableNodes?: any[][], ngModuleRef?: NgModuleRef<any>): ComponentRef<C> {\n    const contextInjector = injector || this.parentInjector;\n    if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n      ngModuleRef = contextInjector.get(NgModuleRef);\n    }\n    const componentRef =\n        componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n    this.insert(componentRef.hostView, index);\n    return componentRef;\n  }\n\n  insert(viewRef: ViewRef, index?: number): ViewRef {\n    if (viewRef.destroyed) {\n      throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n    }\n    const viewRef_ = <ViewRef_>viewRef;\n    const viewData = viewRef_._view;\n    attachEmbeddedView(this._view, this._data, index, viewData);\n    viewRef_.attachToViewContainerRef(this);\n    return viewRef;\n  }\n\n  move(viewRef: ViewRef_, currentIndex: number): ViewRef {\n    if (viewRef.destroyed) {\n      throw new Error('Cannot move a destroyed View in a ViewContainer!');\n    }\n    const previousIndex = this._embeddedViews.indexOf(viewRef._view);\n    moveEmbeddedView(this._data, previousIndex, currentIndex);\n    return viewRef;\n  }\n\n  indexOf(viewRef: ViewRef): number {\n    return this._embeddedViews.indexOf((<ViewRef_>viewRef)._view);\n  }\n\n  remove(index?: number): void {\n    const viewData = detachEmbeddedView(this._data, index);\n    if (viewData) {\n      Services.destroyView(viewData);\n    }\n  }\n\n  detach(index?: number): ViewRef|null {\n    const view = detachEmbeddedView(this._data, index);\n    return view ? new ViewRef_(view) : null;\n  }\n}\n\nexport function createChangeDetectorRef(view: ViewData): ChangeDetectorRef {\n  return new ViewRef_(view);\n}\n\nexport class ViewRef_ implements EmbeddedViewRef<any>, InternalViewRef {\n  /** @internal */\n  _view: ViewData;\n  private _viewContainerRef: ViewContainerRef|null;\n  private _appRef: ApplicationRef|null;\n\n  constructor(_view: ViewData) {\n    this._view = _view;\n    this._viewContainerRef = null;\n    this._appRef = null;\n  }\n\n  get rootNodes(): any[] { return rootRenderNodes(this._view); }\n\n  get context() { return this._view.context; }\n\n  get destroyed(): boolean { return (this._view.state & ViewState.Destroyed) !== 0; }\n\n  markForCheck(): void { markParentViewsForCheck(this._view); }\n  detach(): void { this._view.state &= ~ViewState.Attached; }\n  detectChanges(): void {\n    const fs = this._view.root.rendererFactory;\n    if (fs.begin) {\n      fs.begin();\n    }\n    try {\n      Services.checkAndUpdateView(this._view);\n    } finally {\n      if (fs.end) {\n        fs.end();\n      }\n    }\n  }\n  checkNoChanges(): void { Services.checkNoChangesView(this._view); }\n\n  reattach(): void { this._view.state |= ViewState.Attached; }\n  onDestroy(callback: Function) {\n    if (!this._view.disposables) {\n      this._view.disposables = [];\n    }\n    this._view.disposables.push(<any>callback);\n  }\n\n  destroy() {\n    if (this._appRef) {\n      this._appRef.detachView(this);\n    } else if (this._viewContainerRef) {\n      this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n    }\n    Services.destroyView(this._view);\n  }\n\n  detachFromAppRef() {\n    this._appRef = null;\n    renderDetachView(this._view);\n    Services.dirtyParentQueries(this._view);\n  }\n\n  attachToAppRef(appRef: ApplicationRef) {\n    if (this._viewContainerRef) {\n      throw new Error('This view is already attached to a ViewContainer!');\n    }\n    this._appRef = appRef;\n  }\n\n  attachToViewContainerRef(vcRef: ViewContainerRef) {\n    if (this._appRef) {\n      throw new Error('This view is already attached directly to the ApplicationRef!');\n    }\n    this._viewContainerRef = vcRef;\n  }\n}\n\nexport function createTemplateData(view: ViewData, def: NodeDef): TemplateData {\n  return new TemplateRef_(view, def);\n}\n\nclass TemplateRef_ extends TemplateRef<any> implements TemplateData {\n  /**\n   * @internal\n   */\n  // TODO(issue/24571): remove '!'.\n  _projectedViews !: ViewData[];\n\n  constructor(private _parentView: ViewData, private _def: NodeDef) { super(); }\n\n  createEmbeddedView(context: any): EmbeddedViewRef<any> {\n    return new ViewRef_(Services.createEmbeddedView(\n        this._parentView, this._def, this._def.element !.template !, context));\n  }\n\n  get elementRef(): ElementRef {\n    return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n  }\n}\n\nexport function createInjector(view: ViewData, elDef: NodeDef): Injector {\n  return new Injector_(view, elDef);\n}\n\nclass Injector_ implements Injector {\n  constructor(private view: ViewData, private elDef: NodeDef|null) {}\n  get(token: any, notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n    const allowPrivateServices =\n        this.elDef ? (this.elDef.flags & NodeFlags.ComponentView) !== 0 : false;\n    return Services.resolveDep(\n        this.view, this.elDef, allowPrivateServices,\n        {flags: DepFlags.None, token, tokenKey: tokenKey(token)}, notFoundValue);\n  }\n}\n\nexport function nodeValue(view: ViewData, index: number): any {\n  const def = view.def.nodes[index];\n  if (def.flags & NodeFlags.TypeElement) {\n    const elData = asElementData(view, def.nodeIndex);\n    return def.element !.template ? elData.template : elData.renderElement;\n  } else if (def.flags & NodeFlags.TypeText) {\n    return asTextData(view, def.nodeIndex).renderText;\n  } else if (def.flags & (NodeFlags.CatProvider | NodeFlags.TypePipe)) {\n    return asProviderData(view, def.nodeIndex).instance;\n  }\n  throw new Error(`Illegal state: read nodeValue for node index ${index}`);\n}\n\nexport function createRendererV1(view: ViewData): RendererV1 {\n  return new RendererAdapter(view.renderer);\n}\n\nclass RendererAdapter implements RendererV1 {\n  constructor(private delegate: Renderer2) {}\n  selectRootElement(selectorOrNode: string|Element): Element {\n    return this.delegate.selectRootElement(selectorOrNode);\n  }\n\n  createElement(parent: Element|DocumentFragment, namespaceAndName: string): Element {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    const el = this.delegate.createElement(name, ns);\n    if (parent) {\n      this.delegate.appendChild(parent, el);\n    }\n    return el;\n  }\n\n  createViewRoot(hostElement: Element): Element|DocumentFragment { return hostElement; }\n\n  createTemplateAnchor(parentElement: Element|DocumentFragment): Comment {\n    const comment = this.delegate.createComment('');\n    if (parentElement) {\n      this.delegate.appendChild(parentElement, comment);\n    }\n    return comment;\n  }\n\n  createText(parentElement: Element|DocumentFragment, value: string): any {\n    const node = this.delegate.createText(value);\n    if (parentElement) {\n      this.delegate.appendChild(parentElement, node);\n    }\n    return node;\n  }\n\n  projectNodes(parentElement: Element|DocumentFragment, nodes: Node[]) {\n    for (let i = 0; i < nodes.length; i++) {\n      this.delegate.appendChild(parentElement, nodes[i]);\n    }\n  }\n\n  attachViewAfter(node: Node, viewRootNodes: Node[]) {\n    const parentElement = this.delegate.parentNode(node);\n    const nextSibling = this.delegate.nextSibling(node);\n    for (let i = 0; i < viewRootNodes.length; i++) {\n      this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n    }\n  }\n\n  detachView(viewRootNodes: (Element|Text|Comment)[]) {\n    for (let i = 0; i < viewRootNodes.length; i++) {\n      const node = viewRootNodes[i];\n      const parentElement = this.delegate.parentNode(node);\n      this.delegate.removeChild(parentElement, node);\n    }\n  }\n\n  destroyView(hostElement: Element|DocumentFragment, viewAllNodes: Node[]) {\n    for (let i = 0; i < viewAllNodes.length; i++) {\n      this.delegate.destroyNode !(viewAllNodes[i]);\n    }\n  }\n\n  listen(renderElement: any, name: string, callback: Function): Function {\n    return this.delegate.listen(renderElement, name, <any>callback);\n  }\n\n  listenGlobal(target: string, name: string, callback: Function): Function {\n    return this.delegate.listen(target, name, <any>callback);\n  }\n\n  setElementProperty(\n      renderElement: Element|DocumentFragment, propertyName: string, propertyValue: any): void {\n    this.delegate.setProperty(renderElement, propertyName, propertyValue);\n  }\n\n  setElementAttribute(renderElement: Element, namespaceAndName: string, attributeValue?: string):\n      void {\n    const [ns, name] = splitNamespace(namespaceAndName);\n    if (attributeValue != null) {\n      this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n    } else {\n      this.delegate.removeAttribute(renderElement, name, ns);\n    }\n  }\n\n  setBindingDebugInfo(renderElement: Element, propertyName: string, propertyValue: string): void {}\n\n  setElementClass(renderElement: Element, className: string, isAdd: boolean): void {\n    if (isAdd) {\n      this.delegate.addClass(renderElement, className);\n    } else {\n      this.delegate.removeClass(renderElement, className);\n    }\n  }\n\n  setElementStyle(renderElement: HTMLElement, styleName: string, styleValue?: string): void {\n    if (styleValue != null) {\n      this.delegate.setStyle(renderElement, styleName, styleValue);\n    } else {\n      this.delegate.removeStyle(renderElement, styleName);\n    }\n  }\n\n  invokeElementMethod(renderElement: Element, methodName: string, args: any[]): void {\n    (renderElement as any)[methodName].apply(renderElement, args);\n  }\n\n  setText(renderNode: Text, text: string): void { this.delegate.setValue(renderNode, text); }\n\n  animate(): any { throw new Error('Renderer.animate is no longer supported!'); }\n}\n\n\nexport function createNgModuleRef(\n    moduleType: Type<any>, parent: Injector, bootstrapComponents: Type<any>[],\n    def: NgModuleDefinition): NgModuleRef<any> {\n  return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\n\nclass NgModuleRef_ implements NgModuleData, InternalNgModuleRef<any> {\n  private _destroyListeners: (() => void)[] = [];\n  private _destroyed: boolean = false;\n  /** @internal */\n  // TODO(issue/24571): remove '!'.\n  _providers !: any[];\n  /** @internal */\n  // TODO(issue/24571): remove '!'.\n  _modules !: any[];\n\n  readonly injector: Injector = this;\n\n  constructor(\n      private _moduleType: Type<any>, public _parent: Injector,\n      public _bootstrapComponents: Type<any>[], public _def: NgModuleDefinition) {\n    initNgModule(this);\n  }\n\n  get(token: any, notFoundValue: any = Injector.THROW_IF_NOT_FOUND,\n      injectFlags: InjectFlags = InjectFlags.Default): any {\n    let flags = DepFlags.None;\n    if (injectFlags & InjectFlags.SkipSelf) {\n      flags |= DepFlags.SkipSelf;\n    } else if (injectFlags & InjectFlags.Self) {\n      flags |= DepFlags.Self;\n    }\n    return resolveNgModuleDep(\n        this, {token: token, tokenKey: tokenKey(token), flags: flags}, notFoundValue);\n  }\n\n  get instance() { return this.get(this._moduleType); }\n\n  get componentFactoryResolver() { return this.get(ComponentFactoryResolver); }\n\n  destroy(): void {\n    if (this._destroyed) {\n      throw new Error(\n          `The ng module ${stringify(this.instance.constructor)} has already been destroyed.`);\n    }\n    this._destroyed = true;\n    callNgModuleLifecycle(this, NodeFlags.OnDestroy);\n    this._destroyListeners.forEach((listener) => listener());\n  }\n\n  onDestroy(callback: () => void): void { this._destroyListeners.push(callback); }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef, SimpleChange, SimpleChanges, WrappedValue} from '../change_detection/change_detection';\nimport {INJECTOR, Injector, resolveForwardRef} from '../di';\nimport {ElementRef} from '../linker/element_ref';\nimport {TemplateRef} from '../linker/template_ref';\nimport {ViewContainerRef} from '../linker/view_container_ref';\nimport {Renderer as RendererV1, Renderer2} from '../render/api';\nimport {stringify} from '../util';\nimport {isObservable} from '../util/lang';\n\nimport {createChangeDetectorRef, createInjector, createRendererV1} from './refs';\nimport {BindingDef, BindingFlags, DepDef, DepFlags, NodeDef, NodeFlags, OutputDef, OutputType, ProviderData, QueryValueType, Services, ViewData, ViewFlags, ViewState, asElementData, asProviderData, shouldCallLifecycleInitHook} from './types';\nimport {calcBindingFlags, checkBinding, dispatchEvent, isComponentView, splitDepsDsl, splitMatchedQueriesDsl, tokenKey, viewParentEl} from './util';\n\nconst RendererV1TokenKey = tokenKey(RendererV1);\nconst Renderer2TokenKey = tokenKey(Renderer2);\nconst ElementRefTokenKey = tokenKey(ElementRef);\nconst ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nconst TemplateRefTokenKey = tokenKey(TemplateRef);\nconst ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nconst InjectorRefTokenKey = tokenKey(Injector);\nconst INJECTORRefTokenKey = tokenKey(INJECTOR);\n\nexport function directiveDef(\n    checkIndex: number, flags: NodeFlags,\n    matchedQueries: null | [string | number, QueryValueType][], childCount: number, ctor: any,\n    deps: ([DepFlags, any] | any)[], props?: null | {[name: string]: [number, string]},\n    outputs?: null | {[name: string]: string}): NodeDef {\n  const bindings: BindingDef[] = [];\n  if (props) {\n    for (let prop in props) {\n      const [bindingIndex, nonMinifiedName] = props[prop];\n      bindings[bindingIndex] = {\n        flags: BindingFlags.TypeProperty,\n        name: prop, nonMinifiedName,\n        ns: null,\n        securityContext: null,\n        suffix: null\n      };\n    }\n  }\n  const outputDefs: OutputDef[] = [];\n  if (outputs) {\n    for (let propName in outputs) {\n      outputDefs.push(\n          {type: OutputType.DirectiveOutput, propName, target: null, eventName: outputs[propName]});\n    }\n  }\n  flags |= NodeFlags.TypeDirective;\n  return _def(\n      checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\n\nexport function pipeDef(flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef {\n  flags |= NodeFlags.TypePipe;\n  return _def(-1, flags, null, 0, ctor, ctor, deps);\n}\n\nexport function providerDef(\n    flags: NodeFlags, matchedQueries: null | [string | number, QueryValueType][], token: any,\n    value: any, deps: ([DepFlags, any] | any)[]): NodeDef {\n  return _def(-1, flags, matchedQueries, 0, token, value, deps);\n}\n\nexport function _def(\n    checkIndex: number, flags: NodeFlags,\n    matchedQueriesDsl: [string | number, QueryValueType][] | null, childCount: number, token: any,\n    value: any, deps: ([DepFlags, any] | any)[], bindings?: BindingDef[],\n    outputs?: OutputDef[]): NodeDef {\n  const {matchedQueries, references, matchedQueryIds} = splitMatchedQueriesDsl(matchedQueriesDsl);\n  if (!outputs) {\n    outputs = [];\n  }\n  if (!bindings) {\n    bindings = [];\n  }\n  // Need to resolve forwardRefs as e.g. for `useValue` we\n  // lowered the expression and then stopped evaluating it,\n  // i.e. also didn't unwrap it.\n  value = resolveForwardRef(value);\n\n  const depDefs = splitDepsDsl(deps, stringify(token));\n\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex,\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0, matchedQueries, matchedQueryIds, references,\n    ngContentIndex: -1, childCount, bindings,\n    bindingFlags: calcBindingFlags(bindings), outputs,\n    element: null,\n    provider: {token, value, deps: depDefs},\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n\nexport function createProviderInstance(view: ViewData, def: NodeDef): any {\n  return _createProviderInstance(view, def);\n}\n\nexport function createPipeInstance(view: ViewData, def: NodeDef): any {\n  // deps are looked up from component.\n  let compView = view;\n  while (compView.parent && !isComponentView(compView)) {\n    compView = compView.parent;\n  }\n  // pipes can see the private services of the component\n  const allowPrivateServices = true;\n  // pipes are always eager and classes!\n  return createClass(\n      compView.parent !, viewParentEl(compView) !, allowPrivateServices, def.provider !.value,\n      def.provider !.deps);\n}\n\nexport function createDirectiveInstance(view: ViewData, def: NodeDef): any {\n  // components can see other private services, other directives can't.\n  const allowPrivateServices = (def.flags & NodeFlags.Component) > 0;\n  // directives are always eager and classes!\n  const instance = createClass(\n      view, def.parent !, allowPrivateServices, def.provider !.value, def.provider !.deps);\n  if (def.outputs.length) {\n    for (let i = 0; i < def.outputs.length; i++) {\n      const output = def.outputs[i];\n      const outputObservable = instance[output.propName !];\n      if (isObservable(outputObservable)) {\n        const subscription = outputObservable.subscribe(\n            eventHandlerClosure(view, def.parent !.nodeIndex, output.eventName));\n        view.disposables ![def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n      } else {\n        throw new Error(\n            `@Output ${output.propName} not initialized in '${instance.constructor.name}'.`);\n      }\n    }\n  }\n  return instance;\n}\n\nfunction eventHandlerClosure(view: ViewData, index: number, eventName: string) {\n  return (event: any) => dispatchEvent(view, index, eventName, event);\n}\n\nexport function checkAndUpdateDirectiveInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  const providerData = asProviderData(view, def.nodeIndex);\n  const directive = providerData.instance;\n  let changed = false;\n  let changes: SimpleChanges = undefined !;\n  const bindLen = def.bindings.length;\n  if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 0, v0, changes);\n  }\n  if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 1, v1, changes);\n  }\n  if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 2, v2, changes);\n  }\n  if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 3, v3, changes);\n  }\n  if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 4, v4, changes);\n  }\n  if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 5, v5, changes);\n  }\n  if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 6, v6, changes);\n  }\n  if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 7, v7, changes);\n  }\n  if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 8, v8, changes);\n  }\n  if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n    changed = true;\n    changes = updateProp(view, providerData, def, 9, v9, changes);\n  }\n  if (changes) {\n    directive.ngOnChanges(changes);\n  }\n  if ((def.flags & NodeFlags.OnInit) &&\n      shouldCallLifecycleInitHook(view, ViewState.InitState_CallingOnInit, def.nodeIndex)) {\n    directive.ngOnInit();\n  }\n  if (def.flags & NodeFlags.DoCheck) {\n    directive.ngDoCheck();\n  }\n  return changed;\n}\n\nexport function checkAndUpdateDirectiveDynamic(\n    view: ViewData, def: NodeDef, values: any[]): boolean {\n  const providerData = asProviderData(view, def.nodeIndex);\n  const directive = providerData.instance;\n  let changed = false;\n  let changes: SimpleChanges = undefined !;\n  for (let i = 0; i < values.length; i++) {\n    if (checkBinding(view, def, i, values[i])) {\n      changed = true;\n      changes = updateProp(view, providerData, def, i, values[i], changes);\n    }\n  }\n  if (changes) {\n    directive.ngOnChanges(changes);\n  }\n  if ((def.flags & NodeFlags.OnInit) &&\n      shouldCallLifecycleInitHook(view, ViewState.InitState_CallingOnInit, def.nodeIndex)) {\n    directive.ngOnInit();\n  }\n  if (def.flags & NodeFlags.DoCheck) {\n    directive.ngDoCheck();\n  }\n  return changed;\n}\n\nfunction _createProviderInstance(view: ViewData, def: NodeDef): any {\n  // private services can see other private services\n  const allowPrivateServices = (def.flags & NodeFlags.PrivateProvider) > 0;\n  const providerDef = def.provider;\n  switch (def.flags & NodeFlags.Types) {\n    case NodeFlags.TypeClassProvider:\n      return createClass(\n          view, def.parent !, allowPrivateServices, providerDef !.value, providerDef !.deps);\n    case NodeFlags.TypeFactoryProvider:\n      return callFactory(\n          view, def.parent !, allowPrivateServices, providerDef !.value, providerDef !.deps);\n    case NodeFlags.TypeUseExistingProvider:\n      return resolveDep(view, def.parent !, allowPrivateServices, providerDef !.deps[0]);\n    case NodeFlags.TypeValueProvider:\n      return providerDef !.value;\n  }\n}\n\nfunction createClass(\n    view: ViewData, elDef: NodeDef, allowPrivateServices: boolean, ctor: any, deps: DepDef[]): any {\n  const len = deps.length;\n  switch (len) {\n    case 0:\n      return new ctor();\n    case 1:\n      return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n    case 2:\n      return new ctor(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]));\n    case 3:\n      return new ctor(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]),\n          resolveDep(view, elDef, allowPrivateServices, deps[2]));\n    default:\n      const depValues = new Array(len);\n      for (let i = 0; i < len; i++) {\n        depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n      }\n      return new ctor(...depValues);\n  }\n}\n\nfunction callFactory(\n    view: ViewData, elDef: NodeDef, allowPrivateServices: boolean, factory: any,\n    deps: DepDef[]): any {\n  const len = deps.length;\n  switch (len) {\n    case 0:\n      return factory();\n    case 1:\n      return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n    case 2:\n      return factory(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]));\n    case 3:\n      return factory(\n          resolveDep(view, elDef, allowPrivateServices, deps[0]),\n          resolveDep(view, elDef, allowPrivateServices, deps[1]),\n          resolveDep(view, elDef, allowPrivateServices, deps[2]));\n    default:\n      const depValues = Array(len);\n      for (let i = 0; i < len; i++) {\n        depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n      }\n      return factory(...depValues);\n  }\n}\n\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nexport const NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n\nexport function resolveDep(\n    view: ViewData, elDef: NodeDef, allowPrivateServices: boolean, depDef: DepDef,\n    notFoundValue: any = Injector.THROW_IF_NOT_FOUND): any {\n  if (depDef.flags & DepFlags.Value) {\n    return depDef.token;\n  }\n  const startView = view;\n  if (depDef.flags & DepFlags.Optional) {\n    notFoundValue = null;\n  }\n  const tokenKey = depDef.tokenKey;\n\n  if (tokenKey === ChangeDetectorRefTokenKey) {\n    // directives on the same element as a component should be able to control the change detector\n    // of that component as well.\n    allowPrivateServices = !!(elDef && elDef.element !.componentView);\n  }\n\n  if (elDef && (depDef.flags & DepFlags.SkipSelf)) {\n    allowPrivateServices = false;\n    elDef = elDef.parent !;\n  }\n\n  let searchView: ViewData|null = view;\n  while (searchView) {\n    if (elDef) {\n      switch (tokenKey) {\n        case RendererV1TokenKey: {\n          const compView = findCompView(searchView, elDef, allowPrivateServices);\n          return createRendererV1(compView);\n        }\n        case Renderer2TokenKey: {\n          const compView = findCompView(searchView, elDef, allowPrivateServices);\n          return compView.renderer;\n        }\n        case ElementRefTokenKey:\n          return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n        case ViewContainerRefTokenKey:\n          return asElementData(searchView, elDef.nodeIndex).viewContainer;\n        case TemplateRefTokenKey: {\n          if (elDef.element !.template) {\n            return asElementData(searchView, elDef.nodeIndex).template;\n          }\n          break;\n        }\n        case ChangeDetectorRefTokenKey: {\n          let cdView = findCompView(searchView, elDef, allowPrivateServices);\n          return createChangeDetectorRef(cdView);\n        }\n        case InjectorRefTokenKey:\n        case INJECTORRefTokenKey:\n          return createInjector(searchView, elDef);\n        default:\n          const providerDef =\n              (allowPrivateServices ? elDef.element !.allProviders :\n                                      elDef.element !.publicProviders) ![tokenKey];\n          if (providerDef) {\n            let providerData = asProviderData(searchView, providerDef.nodeIndex);\n            if (!providerData) {\n              providerData = {instance: _createProviderInstance(searchView, providerDef)};\n              searchView.nodes[providerDef.nodeIndex] = providerData as any;\n            }\n            return providerData.instance;\n          }\n      }\n    }\n\n    allowPrivateServices = isComponentView(searchView);\n    elDef = viewParentEl(searchView) !;\n    searchView = searchView.parent !;\n\n    if (depDef.flags & DepFlags.Self) {\n      searchView = null;\n    }\n  }\n\n  const value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n\n  if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n      notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n    // Return the value from the root element injector when\n    // - it provides it\n    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n    // - the module injector should not be checked\n    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n    return value;\n  }\n\n  return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\n\nfunction findCompView(view: ViewData, elDef: NodeDef, allowPrivateServices: boolean) {\n  let compView: ViewData;\n  if (allowPrivateServices) {\n    compView = asElementData(view, elDef.nodeIndex).componentView;\n  } else {\n    compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n      compView = compView.parent;\n    }\n  }\n  return compView;\n}\n\nfunction updateProp(\n    view: ViewData, providerData: ProviderData, def: NodeDef, bindingIdx: number, value: any,\n    changes: SimpleChanges): SimpleChanges {\n  if (def.flags & NodeFlags.Component) {\n    const compView = asElementData(view, def.parent !.nodeIndex).componentView;\n    if (compView.def.flags & ViewFlags.OnPush) {\n      compView.state |= ViewState.ChecksEnabled;\n    }\n  }\n  const binding = def.bindings[bindingIdx];\n  const propName = binding.name !;\n  // Note: This is still safe with Closure Compiler as\n  // the user passed in the property name as an object has to `providerDef`,\n  // so Closure Compiler will have renamed the property correctly already.\n  providerData.instance[propName] = value;\n  if (def.flags & NodeFlags.OnChanges) {\n    changes = changes || {};\n    const oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n    const binding = def.bindings[bindingIdx];\n    changes[binding.nonMinifiedName !] =\n        new SimpleChange(oldValue, value, (view.state & ViewState.FirstCheck) !== 0);\n  }\n  view.oldValues[def.bindingIndex + bindingIdx] = value;\n  return changes;\n}\n\n// This function calls the ngAfterContentCheck, ngAfterContentInit,\n// ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n// flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n// called during a pre-order traversal of the view tree (that is calling the\n// parent hooks before the child hooks) these events are sent in using a\n// post-order traversal of the tree (children before parents). This changes the\n// meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n// expected nodeIndex which a ngOnInit should be called. When sending\n// ngAfterContentInit and ngAfterViewInit it is the expected count of\n// ngAfterContentInit or ngAfterViewInit methods that have been called. This\n// ensure that despite being called recursively or after picking up after an\n// exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n// correct nodes. Consider for example, the following (where E is an element\n// and D is a directive)\n//  Tree:       pre-order index  post-order index\n//    E1        0                6\n//      E2      1                1\n//       D3     2                0\n//      E4      3                5\n//       E5     4                4\n//        E6    5                2\n//        E7    6                3\n// As can be seen, the post-order index has an unclear relationship to the\n// pre-order index (postOrderIndex === preOrderIndex - parentCount +\n// childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n// are stable (will be the same for the same view regardless of exceptions or\n// recursion) we just need to count them which will roughly correspond to the\n// post-order index (it skips elements and directives that do not have\n// lifecycle hooks).\n//\n// For example, if an exception is raised in the E6.onAfterViewInit() the\n// initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n// initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n// not have their ngAfterViewInit() called but, starting with E7, the rest of\n// the view will begin getting ngAfterViewInit() called until a check and\n// pass is complete.\n//\n// This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n// indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n// initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n// D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n// When the recursion returns the initIndex will be 7 so E1 is skipped as it\n// has already been called in the recursively called checkAnUpdateView().\nexport function callLifecycleHooksChildrenFirst(view: ViewData, lifecycles: NodeFlags) {\n  if (!(view.def.nodeFlags & lifecycles)) {\n    return;\n  }\n  const nodes = view.def.nodes;\n  let initIndex = 0;\n  for (let i = 0; i < nodes.length; i++) {\n    const nodeDef = nodes[i];\n    let parent = nodeDef.parent;\n    if (!parent && nodeDef.flags & lifecycles) {\n      // matching root node (e.g. a pipe)\n      callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n    }\n    if ((nodeDef.childFlags & lifecycles) === 0) {\n      // no child matches one of the lifecycles\n      i += nodeDef.childCount;\n    }\n    while (parent && (parent.flags & NodeFlags.TypeElement) &&\n           i === parent.nodeIndex + parent.childCount) {\n      // last child of an element\n      if (parent.directChildFlags & lifecycles) {\n        initIndex = callElementProvidersLifecycles(view, parent, lifecycles, initIndex);\n      }\n      parent = parent.parent;\n    }\n  }\n}\n\nfunction callElementProvidersLifecycles(\n    view: ViewData, elDef: NodeDef, lifecycles: NodeFlags, initIndex: number): number {\n  for (let i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n    const nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & lifecycles) {\n      callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n    }\n    // only visit direct children\n    i += nodeDef.childCount;\n  }\n  return initIndex;\n}\n\nfunction callProviderLifecycles(\n    view: ViewData, index: number, lifecycles: NodeFlags, initIndex: number) {\n  const providerData = asProviderData(view, index);\n  if (!providerData) {\n    return;\n  }\n  const provider = providerData.instance;\n  if (!provider) {\n    return;\n  }\n  Services.setCurrentNode(view, index);\n  if (lifecycles & NodeFlags.AfterContentInit &&\n      shouldCallLifecycleInitHook(view, ViewState.InitState_CallingAfterContentInit, initIndex)) {\n    provider.ngAfterContentInit();\n  }\n  if (lifecycles & NodeFlags.AfterContentChecked) {\n    provider.ngAfterContentChecked();\n  }\n  if (lifecycles & NodeFlags.AfterViewInit &&\n      shouldCallLifecycleInitHook(view, ViewState.InitState_CallingAfterViewInit, initIndex)) {\n    provider.ngAfterViewInit();\n  }\n  if (lifecycles & NodeFlags.AfterViewChecked) {\n    provider.ngAfterViewChecked();\n  }\n  if (lifecycles & NodeFlags.OnDestroy) {\n    provider.ngOnDestroy();\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementRef} from '../linker/element_ref';\nimport {QueryList} from '../linker/query_list';\n\nimport {NodeDef, NodeFlags, QueryBindingDef, QueryBindingType, QueryDef, QueryValueType, ViewData, asElementData, asProviderData, asQueryList} from './types';\nimport {declaredViewContainer, filterQueryId, isEmbeddedView} from './util';\n\nexport function queryDef(\n    flags: NodeFlags, id: number, bindings: {[propName: string]: QueryBindingType}): NodeDef {\n  let bindingDefs: QueryBindingDef[] = [];\n  for (let propName in bindings) {\n    const bindingType = bindings[propName];\n    bindingDefs.push({propName, bindingType});\n  }\n\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    // TODO(vicb): check\n    checkIndex: -1, flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    ngContentIndex: -1,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {},\n    childCount: 0,\n    bindings: [],\n    bindingFlags: 0,\n    outputs: [],\n    element: null,\n    provider: null,\n    text: null,\n    query: {id, filterId: filterQueryId(id), bindings: bindingDefs},\n    ngContent: null\n  };\n}\n\nexport function createQuery(): QueryList<any> {\n  return new QueryList();\n}\n\nexport function dirtyParentQueries(view: ViewData) {\n  const queryIds = view.def.nodeMatchedQueries;\n  while (view.parent && isEmbeddedView(view)) {\n    let tplDef = view.parentNodeDef !;\n    view = view.parent;\n    // content queries\n    const end = tplDef.nodeIndex + tplDef.childCount;\n    for (let i = 0; i <= end; i++) {\n      const nodeDef = view.def.nodes[i];\n      if ((nodeDef.flags & NodeFlags.TypeContentQuery) &&\n          (nodeDef.flags & NodeFlags.DynamicQuery) &&\n          (nodeDef.query !.filterId & queryIds) === nodeDef.query !.filterId) {\n        asQueryList(view, i).setDirty();\n      }\n      if ((nodeDef.flags & NodeFlags.TypeElement && i + nodeDef.childCount < tplDef.nodeIndex) ||\n          !(nodeDef.childFlags & NodeFlags.TypeContentQuery) ||\n          !(nodeDef.childFlags & NodeFlags.DynamicQuery)) {\n        // skip elements that don't contain the template element or no query.\n        i += nodeDef.childCount;\n      }\n    }\n  }\n\n  // view queries\n  if (view.def.nodeFlags & NodeFlags.TypeViewQuery) {\n    for (let i = 0; i < view.def.nodes.length; i++) {\n      const nodeDef = view.def.nodes[i];\n      if ((nodeDef.flags & NodeFlags.TypeViewQuery) && (nodeDef.flags & NodeFlags.DynamicQuery)) {\n        asQueryList(view, i).setDirty();\n      }\n      // only visit the root nodes\n      i += nodeDef.childCount;\n    }\n  }\n}\n\nexport function checkAndUpdateQuery(view: ViewData, nodeDef: NodeDef) {\n  const queryList = asQueryList(view, nodeDef.nodeIndex);\n  if (!queryList.dirty) {\n    return;\n  }\n  let directiveInstance: any;\n  let newValues: any[] = undefined !;\n  if (nodeDef.flags & NodeFlags.TypeContentQuery) {\n    const elementDef = nodeDef.parent !.parent !;\n    newValues = calcQueryValues(\n        view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query !,\n        []);\n    directiveInstance = asProviderData(view, nodeDef.parent !.nodeIndex).instance;\n  } else if (nodeDef.flags & NodeFlags.TypeViewQuery) {\n    newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query !, []);\n    directiveInstance = view.component;\n  }\n  queryList.reset(newValues);\n  const bindings = nodeDef.query !.bindings;\n  let notify = false;\n  for (let i = 0; i < bindings.length; i++) {\n    const binding = bindings[i];\n    let boundValue: any;\n    switch (binding.bindingType) {\n      case QueryBindingType.First:\n        boundValue = queryList.first;\n        break;\n      case QueryBindingType.All:\n        boundValue = queryList;\n        notify = true;\n        break;\n    }\n    directiveInstance[binding.propName] = boundValue;\n  }\n  if (notify) {\n    queryList.notifyOnChanges();\n  }\n}\n\nfunction calcQueryValues(\n    view: ViewData, startIndex: number, endIndex: number, queryDef: QueryDef,\n    values: any[]): any[] {\n  for (let i = startIndex; i <= endIndex; i++) {\n    const nodeDef = view.def.nodes[i];\n    const valueType = nodeDef.matchedQueries[queryDef.id];\n    if (valueType != null) {\n      values.push(getQueryValue(view, nodeDef, valueType));\n    }\n    if (nodeDef.flags & NodeFlags.TypeElement && nodeDef.element !.template &&\n        (nodeDef.element !.template !.nodeMatchedQueries & queryDef.filterId) ===\n            queryDef.filterId) {\n      const elementData = asElementData(view, i);\n      // check embedded views that were attached at the place of their template,\n      // but process child nodes first if some match the query (see issue #16568)\n      if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n        calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n        i += nodeDef.childCount;\n      }\n      if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n        const embeddedViews = elementData.viewContainer !._embeddedViews;\n        for (let k = 0; k < embeddedViews.length; k++) {\n          const embeddedView = embeddedViews[k];\n          const dvc = declaredViewContainer(embeddedView);\n          if (dvc && dvc === elementData) {\n            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n          }\n        }\n      }\n      const projectedViews = elementData.template._projectedViews;\n      if (projectedViews) {\n        for (let k = 0; k < projectedViews.length; k++) {\n          const projectedView = projectedViews[k];\n          calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n        }\n      }\n    }\n    if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n      // if no child matches the query, skip the children.\n      i += nodeDef.childCount;\n    }\n  }\n  return values;\n}\n\nexport function getQueryValue(\n    view: ViewData, nodeDef: NodeDef, queryValueType: QueryValueType): any {\n  if (queryValueType != null) {\n    // a match\n    switch (queryValueType) {\n      case QueryValueType.RenderElement:\n        return asElementData(view, nodeDef.nodeIndex).renderElement;\n      case QueryValueType.ElementRef:\n        return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n      case QueryValueType.TemplateRef:\n        return asElementData(view, nodeDef.nodeIndex).template;\n      case QueryValueType.ViewContainerRef:\n        return asElementData(view, nodeDef.nodeIndex).viewContainer;\n      case QueryValueType.Provider:\n        return asProviderData(view, nodeDef.nodeIndex).instance;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NodeDef, NodeFlags, ViewData} from './types';\nimport {RenderNodeAction, getParentRenderElement, visitProjectedRenderNodes} from './util';\n\nexport function ngContentDef(ngContentIndex: null | number, index: number): NodeDef {\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex: -1,\n    flags: NodeFlags.TypeNgContent,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {}, ngContentIndex,\n    childCount: 0,\n    bindings: [],\n    bindingFlags: 0,\n    outputs: [],\n    element: null,\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: {index}\n  };\n}\n\nexport function appendNgContent(view: ViewData, renderHost: any, def: NodeDef) {\n  const parentEl = getParentRenderElement(view, renderHost, def);\n  if (!parentEl) {\n    // Nothing to do if there is no parent element.\n    return;\n  }\n  const ngContentIndex = def.ngContent !.index;\n  visitProjectedRenderNodes(\n      view, ngContentIndex, RenderNodeAction.AppendChild, parentEl, null, undefined);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BindingDef, BindingFlags, NodeDef, NodeFlags, PureExpressionData, ViewData, asPureExpressionData} from './types';\nimport {calcBindingFlags, checkAndUpdateBinding} from './util';\n\nexport function purePipeDef(checkIndex: number, argCount: number): NodeDef {\n  // argCount + 1 to include the pipe as first arg\n  return _pureExpressionDef(NodeFlags.TypePurePipe, checkIndex, new Array(argCount + 1));\n}\n\nexport function pureArrayDef(checkIndex: number, argCount: number): NodeDef {\n  return _pureExpressionDef(NodeFlags.TypePureArray, checkIndex, new Array(argCount));\n}\n\nexport function pureObjectDef(checkIndex: number, propToIndex: {[p: string]: number}): NodeDef {\n  const keys = Object.keys(propToIndex);\n  const nbKeys = keys.length;\n  const propertyNames = new Array(nbKeys);\n  for (let i = 0; i < nbKeys; i++) {\n    const key = keys[i];\n    const index = propToIndex[key];\n    propertyNames[index] = key;\n  }\n\n  return _pureExpressionDef(NodeFlags.TypePureObject, checkIndex, propertyNames);\n}\n\nfunction _pureExpressionDef(\n    flags: NodeFlags, checkIndex: number, propertyNames: string[]): NodeDef {\n  const bindings: BindingDef[] = new Array(propertyNames.length);\n  for (let i = 0; i < propertyNames.length; i++) {\n    const prop = propertyNames[i];\n    bindings[i] = {\n      flags: BindingFlags.TypeProperty,\n      name: prop,\n      ns: null,\n      nonMinifiedName: prop,\n      securityContext: null,\n      suffix: null\n    };\n  }\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex,\n    flags,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {},\n    ngContentIndex: -1,\n    childCount: 0, bindings,\n    bindingFlags: calcBindingFlags(bindings),\n    outputs: [],\n    element: null,\n    provider: null,\n    text: null,\n    query: null,\n    ngContent: null\n  };\n}\n\nexport function createPureExpression(view: ViewData, def: NodeDef): PureExpressionData {\n  return {value: undefined};\n}\n\nexport function checkAndUpdatePureExpressionInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  const bindings = def.bindings;\n  let changed = false;\n  const bindLen = bindings.length;\n  if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0)) changed = true;\n  if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1)) changed = true;\n  if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2)) changed = true;\n  if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3)) changed = true;\n  if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4)) changed = true;\n  if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5)) changed = true;\n  if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6)) changed = true;\n  if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7)) changed = true;\n  if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8)) changed = true;\n  if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9)) changed = true;\n\n  if (changed) {\n    const data = asPureExpressionData(view, def.nodeIndex);\n    let value: any;\n    switch (def.flags & NodeFlags.Types) {\n      case NodeFlags.TypePureArray:\n        value = new Array(bindings.length);\n        if (bindLen > 0) value[0] = v0;\n        if (bindLen > 1) value[1] = v1;\n        if (bindLen > 2) value[2] = v2;\n        if (bindLen > 3) value[3] = v3;\n        if (bindLen > 4) value[4] = v4;\n        if (bindLen > 5) value[5] = v5;\n        if (bindLen > 6) value[6] = v6;\n        if (bindLen > 7) value[7] = v7;\n        if (bindLen > 8) value[8] = v8;\n        if (bindLen > 9) value[9] = v9;\n        break;\n      case NodeFlags.TypePureObject:\n        value = {};\n        if (bindLen > 0) value[bindings[0].name !] = v0;\n        if (bindLen > 1) value[bindings[1].name !] = v1;\n        if (bindLen > 2) value[bindings[2].name !] = v2;\n        if (bindLen > 3) value[bindings[3].name !] = v3;\n        if (bindLen > 4) value[bindings[4].name !] = v4;\n        if (bindLen > 5) value[bindings[5].name !] = v5;\n        if (bindLen > 6) value[bindings[6].name !] = v6;\n        if (bindLen > 7) value[bindings[7].name !] = v7;\n        if (bindLen > 8) value[bindings[8].name !] = v8;\n        if (bindLen > 9) value[bindings[9].name !] = v9;\n        break;\n      case NodeFlags.TypePurePipe:\n        const pipe = v0;\n        switch (bindLen) {\n          case 1:\n            value = pipe.transform(v0);\n            break;\n          case 2:\n            value = pipe.transform(v1);\n            break;\n          case 3:\n            value = pipe.transform(v1, v2);\n            break;\n          case 4:\n            value = pipe.transform(v1, v2, v3);\n            break;\n          case 5:\n            value = pipe.transform(v1, v2, v3, v4);\n            break;\n          case 6:\n            value = pipe.transform(v1, v2, v3, v4, v5);\n            break;\n          case 7:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n            break;\n          case 8:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n            break;\n          case 9:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n            break;\n          case 10:\n            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            break;\n        }\n        break;\n    }\n    data.value = value;\n  }\n  return changed;\n}\n\nexport function checkAndUpdatePureExpressionDynamic(\n    view: ViewData, def: NodeDef, values: any[]): boolean {\n  const bindings = def.bindings;\n  let changed = false;\n  for (let i = 0; i < values.length; i++) {\n    // Note: We need to loop over all values, so that\n    // the old values are updates as well!\n    if (checkAndUpdateBinding(view, def, i, values[i])) {\n      changed = true;\n    }\n  }\n  if (changed) {\n    const data = asPureExpressionData(view, def.nodeIndex);\n    let value: any;\n    switch (def.flags & NodeFlags.Types) {\n      case NodeFlags.TypePureArray:\n        value = values;\n        break;\n      case NodeFlags.TypePureObject:\n        value = {};\n        for (let i = 0; i < values.length; i++) {\n          value[bindings[i].name !] = values[i];\n        }\n        break;\n      case NodeFlags.TypePurePipe:\n        const pipe = values[0];\n        const params = values.slice(1);\n        value = (<any>pipe.transform)(...params);\n        break;\n    }\n    data.value = value;\n  }\n  return changed;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BindingDef, BindingFlags, NodeDef, NodeFlags, TextData, ViewData, asTextData} from './types';\nimport {checkAndUpdateBinding, getParentRenderElement} from './util';\n\nexport function textDef(\n    checkIndex: number, ngContentIndex: number | null, staticText: string[]): NodeDef {\n  const bindings: BindingDef[] = new Array(staticText.length - 1);\n  for (let i = 1; i < staticText.length; i++) {\n    bindings[i - 1] = {\n      flags: BindingFlags.TypeProperty,\n      name: null,\n      ns: null,\n      nonMinifiedName: null,\n      securityContext: null,\n      suffix: staticText[i],\n    };\n  }\n\n  return {\n    // will bet set by the view definition\n    nodeIndex: -1,\n    parent: null,\n    renderParent: null,\n    bindingIndex: -1,\n    outputIndex: -1,\n    // regular values\n    checkIndex,\n    flags: NodeFlags.TypeText,\n    childFlags: 0,\n    directChildFlags: 0,\n    childMatchedQueries: 0,\n    matchedQueries: {},\n    matchedQueryIds: 0,\n    references: {}, ngContentIndex,\n    childCount: 0, bindings,\n    bindingFlags: BindingFlags.TypeProperty,\n    outputs: [],\n    element: null,\n    provider: null,\n    text: {prefix: staticText[0]},\n    query: null,\n    ngContent: null,\n  };\n}\n\nexport function createText(view: ViewData, renderHost: any, def: NodeDef): TextData {\n  let renderNode: any;\n  const renderer = view.renderer;\n  renderNode = renderer.createText(def.text !.prefix);\n  const parentEl = getParentRenderElement(view, renderHost, def);\n  if (parentEl) {\n    renderer.appendChild(parentEl, renderNode);\n  }\n  return {renderText: renderNode};\n}\n\nexport function checkAndUpdateTextInline(\n    view: ViewData, def: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): boolean {\n  let changed = false;\n  const bindings = def.bindings;\n  const bindLen = bindings.length;\n  if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0)) changed = true;\n  if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1)) changed = true;\n  if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2)) changed = true;\n  if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3)) changed = true;\n  if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4)) changed = true;\n  if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5)) changed = true;\n  if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6)) changed = true;\n  if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7)) changed = true;\n  if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8)) changed = true;\n  if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9)) changed = true;\n\n  if (changed) {\n    let value = def.text !.prefix;\n    if (bindLen > 0) value += _addInterpolationPart(v0, bindings[0]);\n    if (bindLen > 1) value += _addInterpolationPart(v1, bindings[1]);\n    if (bindLen > 2) value += _addInterpolationPart(v2, bindings[2]);\n    if (bindLen > 3) value += _addInterpolationPart(v3, bindings[3]);\n    if (bindLen > 4) value += _addInterpolationPart(v4, bindings[4]);\n    if (bindLen > 5) value += _addInterpolationPart(v5, bindings[5]);\n    if (bindLen > 6) value += _addInterpolationPart(v6, bindings[6]);\n    if (bindLen > 7) value += _addInterpolationPart(v7, bindings[7]);\n    if (bindLen > 8) value += _addInterpolationPart(v8, bindings[8]);\n    if (bindLen > 9) value += _addInterpolationPart(v9, bindings[9]);\n    const renderNode = asTextData(view, def.nodeIndex).renderText;\n    view.renderer.setValue(renderNode, value);\n  }\n  return changed;\n}\n\nexport function checkAndUpdateTextDynamic(view: ViewData, def: NodeDef, values: any[]): boolean {\n  const bindings = def.bindings;\n  let changed = false;\n  for (let i = 0; i < values.length; i++) {\n    // Note: We need to loop over all values, so that\n    // the old values are updates as well!\n    if (checkAndUpdateBinding(view, def, i, values[i])) {\n      changed = true;\n    }\n  }\n  if (changed) {\n    let value = '';\n    for (let i = 0; i < values.length; i++) {\n      value = value + _addInterpolationPart(values[i], bindings[i]);\n    }\n    value = def.text !.prefix + value;\n    const renderNode = asTextData(view, def.nodeIndex).renderText;\n    view.renderer.setValue(renderNode, value);\n  }\n  return changed;\n}\n\nfunction _addInterpolationPart(value: any, binding: BindingDef): string {\n  const valueStr = value != null ? value.toString() : '';\n  return valueStr + binding.suffix;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Renderer2} from '../render/api';\n\nimport {checkAndUpdateElementDynamic, checkAndUpdateElementInline, createElement, listenToElementOutputs} from './element';\nimport {expressionChangedAfterItHasBeenCheckedError} from './errors';\nimport {appendNgContent} from './ng_content';\nimport {callLifecycleHooksChildrenFirst, checkAndUpdateDirectiveDynamic, checkAndUpdateDirectiveInline, createDirectiveInstance, createPipeInstance, createProviderInstance} from './provider';\nimport {checkAndUpdatePureExpressionDynamic, checkAndUpdatePureExpressionInline, createPureExpression} from './pure_expression';\nimport {checkAndUpdateQuery, createQuery} from './query';\nimport {createTemplateData, createViewContainerData} from './refs';\nimport {checkAndUpdateTextDynamic, checkAndUpdateTextInline, createText} from './text';\nimport {ArgumentType, CheckType, ElementData, NodeData, NodeDef, NodeFlags, ProviderData, RootData, Services, ViewData, ViewDefinition, ViewFlags, ViewHandleEventFn, ViewState, ViewUpdateFn, asElementData, asQueryList, asTextData, shiftInitState} from './types';\nimport {NOOP, checkBindingNoChanges, isComponentView, markParentViewsForCheckProjectedViews, resolveDefinition, tokenKey} from './util';\nimport {detachProjectedView} from './view_attach';\n\nexport function viewDef(\n    flags: ViewFlags, nodes: NodeDef[], updateDirectives?: null | ViewUpdateFn,\n    updateRenderer?: null | ViewUpdateFn): ViewDefinition {\n  // clone nodes and set auto calculated values\n  let viewBindingCount = 0;\n  let viewDisposableCount = 0;\n  let viewNodeFlags = 0;\n  let viewRootNodeFlags = 0;\n  let viewMatchedQueries = 0;\n  let currentParent: NodeDef|null = null;\n  let currentRenderParent: NodeDef|null = null;\n  let currentElementHasPublicProviders = false;\n  let currentElementHasPrivateProviders = false;\n  let lastRenderRootNode: NodeDef|null = null;\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    node.nodeIndex = i;\n    node.parent = currentParent;\n    node.bindingIndex = viewBindingCount;\n    node.outputIndex = viewDisposableCount;\n    node.renderParent = currentRenderParent;\n\n    viewNodeFlags |= node.flags;\n    viewMatchedQueries |= node.matchedQueryIds;\n\n    if (node.element) {\n      const elDef = node.element;\n      elDef.publicProviders =\n          currentParent ? currentParent.element !.publicProviders : Object.create(null);\n      elDef.allProviders = elDef.publicProviders;\n      // Note: We assume that all providers of an element are before any child element!\n      currentElementHasPublicProviders = false;\n      currentElementHasPrivateProviders = false;\n\n      if (node.element.template) {\n        viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n      }\n    }\n    validateNode(currentParent, node, nodes.length);\n\n\n    viewBindingCount += node.bindings.length;\n    viewDisposableCount += node.outputs.length;\n\n    if (!currentRenderParent && (node.flags & NodeFlags.CatRenderNode)) {\n      lastRenderRootNode = node;\n    }\n\n    if (node.flags & NodeFlags.CatProvider) {\n      if (!currentElementHasPublicProviders) {\n        currentElementHasPublicProviders = true;\n        // Use prototypical inheritance to not get O(n^2) complexity...\n        currentParent !.element !.publicProviders =\n            Object.create(currentParent !.element !.publicProviders);\n        currentParent !.element !.allProviders = currentParent !.element !.publicProviders;\n      }\n      const isPrivateService = (node.flags & NodeFlags.PrivateProvider) !== 0;\n      const isComponent = (node.flags & NodeFlags.Component) !== 0;\n      if (!isPrivateService || isComponent) {\n        currentParent !.element !.publicProviders ![tokenKey(node.provider !.token)] = node;\n      } else {\n        if (!currentElementHasPrivateProviders) {\n          currentElementHasPrivateProviders = true;\n          // Use prototypical inheritance to not get O(n^2) complexity...\n          currentParent !.element !.allProviders =\n              Object.create(currentParent !.element !.publicProviders);\n        }\n        currentParent !.element !.allProviders ![tokenKey(node.provider !.token)] = node;\n      }\n      if (isComponent) {\n        currentParent !.element !.componentProvider = node;\n      }\n    }\n\n    if (currentParent) {\n      currentParent.childFlags |= node.flags;\n      currentParent.directChildFlags |= node.flags;\n      currentParent.childMatchedQueries |= node.matchedQueryIds;\n      if (node.element && node.element.template) {\n        currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n      }\n    } else {\n      viewRootNodeFlags |= node.flags;\n    }\n\n    if (node.childCount > 0) {\n      currentParent = node;\n\n      if (!isNgContainer(node)) {\n        currentRenderParent = node;\n      }\n    } else {\n      // When the current node has no children, check if it is the last children of its parent.\n      // When it is, propagate the flags up.\n      // The loop is required because an element could be the last transitive children of several\n      // elements. We loop to either the root or the highest opened element (= with remaining\n      // children)\n      while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n        const newParent: NodeDef|null = currentParent.parent;\n        if (newParent) {\n          newParent.childFlags |= currentParent.childFlags;\n          newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n        }\n        currentParent = newParent;\n        // We also need to update the render parent & account for ng-container\n        if (currentParent && isNgContainer(currentParent)) {\n          currentRenderParent = currentParent.renderParent;\n        } else {\n          currentRenderParent = currentParent;\n        }\n      }\n    }\n  }\n\n  const handleEvent: ViewHandleEventFn = (view, nodeIndex, eventName, event) =>\n      nodes[nodeIndex].element !.handleEvent !(view, eventName, event);\n\n  return {\n    // Will be filled later...\n    factory: null,\n    nodeFlags: viewNodeFlags,\n    rootNodeFlags: viewRootNodeFlags,\n    nodeMatchedQueries: viewMatchedQueries, flags,\n    nodes: nodes,\n    updateDirectives: updateDirectives || NOOP,\n    updateRenderer: updateRenderer || NOOP, handleEvent,\n    bindingCount: viewBindingCount,\n    outputCount: viewDisposableCount, lastRenderRootNode\n  };\n}\n\nfunction isNgContainer(node: NodeDef): boolean {\n  return (node.flags & NodeFlags.TypeElement) !== 0 && node.element !.name === null;\n}\n\nfunction validateNode(parent: NodeDef | null, node: NodeDef, nodeCount: number) {\n  const template = node.element && node.element.template;\n  if (template) {\n    if (!template.lastRenderRootNode) {\n      throw new Error(`Illegal State: Embedded templates without nodes are not allowed!`);\n    }\n    if (template.lastRenderRootNode &&\n        template.lastRenderRootNode.flags & NodeFlags.EmbeddedViews) {\n      throw new Error(\n          `Illegal State: Last root node of a template can't have embedded views, at index ${node.nodeIndex}!`);\n    }\n  }\n  if (node.flags & NodeFlags.CatProvider) {\n    const parentFlags = parent ? parent.flags : 0;\n    if ((parentFlags & NodeFlags.TypeElement) === 0) {\n      throw new Error(\n          `Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index ${node.nodeIndex}!`);\n    }\n  }\n  if (node.query) {\n    if (node.flags & NodeFlags.TypeContentQuery &&\n        (!parent || (parent.flags & NodeFlags.TypeDirective) === 0)) {\n      throw new Error(\n          `Illegal State: Content Query nodes need to be children of directives, at index ${node.nodeIndex}!`);\n    }\n    if (node.flags & NodeFlags.TypeViewQuery && parent) {\n      throw new Error(\n          `Illegal State: View Query nodes have to be top level nodes, at index ${node.nodeIndex}!`);\n    }\n  }\n  if (node.childCount) {\n    const parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n    if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n      throw new Error(\n          `Illegal State: childCount of node leads outside of parent, at index ${node.nodeIndex}!`);\n    }\n  }\n}\n\nexport function createEmbeddedView(\n    parent: ViewData, anchorDef: NodeDef, viewDef: ViewDefinition, context?: any): ViewData {\n  // embedded views are seen as siblings to the anchor, so we need\n  // to get the parent of the anchor and use it as parentIndex.\n  const view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n  initView(view, parent.component, context);\n  createViewNodes(view);\n  return view;\n}\n\nexport function createRootView(root: RootData, def: ViewDefinition, context?: any): ViewData {\n  const view = createView(root, root.renderer, null, null, def);\n  initView(view, context, context);\n  createViewNodes(view);\n  return view;\n}\n\nexport function createComponentView(\n    parentView: ViewData, nodeDef: NodeDef, viewDef: ViewDefinition, hostElement: any): ViewData {\n  const rendererType = nodeDef.element !.componentRendererType;\n  let compRenderer: Renderer2;\n  if (!rendererType) {\n    compRenderer = parentView.root.renderer;\n  } else {\n    compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n  }\n  return createView(\n      parentView.root, compRenderer, parentView, nodeDef.element !.componentProvider, viewDef);\n}\n\nfunction createView(\n    root: RootData, renderer: Renderer2, parent: ViewData | null, parentNodeDef: NodeDef | null,\n    def: ViewDefinition): ViewData {\n  const nodes: NodeData[] = new Array(def.nodes.length);\n  const disposables = def.outputCount ? new Array(def.outputCount) : null;\n  const view: ViewData = {\n    def,\n    parent,\n    viewContainerParent: null, parentNodeDef,\n    context: null,\n    component: null, nodes,\n    state: ViewState.CatInit, root, renderer,\n    oldValues: new Array(def.bindingCount), disposables,\n    initIndex: -1\n  };\n  return view;\n}\n\nfunction initView(view: ViewData, component: any, context: any) {\n  view.component = component;\n  view.context = context;\n}\n\nfunction createViewNodes(view: ViewData) {\n  let renderHost: any;\n  if (isComponentView(view)) {\n    const hostDef = view.parentNodeDef;\n    renderHost = asElementData(view.parent !, hostDef !.parent !.nodeIndex).renderElement;\n  }\n  const def = view.def;\n  const nodes = view.nodes;\n  for (let i = 0; i < def.nodes.length; i++) {\n    const nodeDef = def.nodes[i];\n    Services.setCurrentNode(view, i);\n    let nodeData: any;\n    switch (nodeDef.flags & NodeFlags.Types) {\n      case NodeFlags.TypeElement:\n        const el = createElement(view, renderHost, nodeDef) as any;\n        let componentView: ViewData = undefined !;\n        if (nodeDef.flags & NodeFlags.ComponentView) {\n          const compViewDef = resolveDefinition(nodeDef.element !.componentView !);\n          componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n        }\n        listenToElementOutputs(view, componentView, nodeDef, el);\n        nodeData = <ElementData>{\n          renderElement: el,\n          componentView,\n          viewContainer: null,\n          template: nodeDef.element !.template ? createTemplateData(view, nodeDef) : undefined\n        };\n        if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n          nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n        }\n        break;\n      case NodeFlags.TypeText:\n        nodeData = createText(view, renderHost, nodeDef) as any;\n        break;\n      case NodeFlags.TypeClassProvider:\n      case NodeFlags.TypeFactoryProvider:\n      case NodeFlags.TypeUseExistingProvider:\n      case NodeFlags.TypeValueProvider: {\n        nodeData = nodes[i];\n        if (!nodeData && !(nodeDef.flags & NodeFlags.LazyProvider)) {\n          const instance = createProviderInstance(view, nodeDef);\n          nodeData = <ProviderData>{instance};\n        }\n        break;\n      }\n      case NodeFlags.TypePipe: {\n        const instance = createPipeInstance(view, nodeDef);\n        nodeData = <ProviderData>{instance};\n        break;\n      }\n      case NodeFlags.TypeDirective: {\n        nodeData = nodes[i];\n        if (!nodeData) {\n          const instance = createDirectiveInstance(view, nodeDef);\n          nodeData = <ProviderData>{instance};\n        }\n        if (nodeDef.flags & NodeFlags.Component) {\n          const compView = asElementData(view, nodeDef.parent !.nodeIndex).componentView;\n          initView(compView, nodeData.instance, nodeData.instance);\n        }\n        break;\n      }\n      case NodeFlags.TypePureArray:\n      case NodeFlags.TypePureObject:\n      case NodeFlags.TypePurePipe:\n        nodeData = createPureExpression(view, nodeDef) as any;\n        break;\n      case NodeFlags.TypeContentQuery:\n      case NodeFlags.TypeViewQuery:\n        nodeData = createQuery() as any;\n        break;\n      case NodeFlags.TypeNgContent:\n        appendNgContent(view, renderHost, nodeDef);\n        // no runtime data needed for NgContent...\n        nodeData = undefined;\n        break;\n    }\n    nodes[i] = nodeData;\n  }\n  // Create the ViewData.nodes of component views after we created everything else,\n  // so that e.g. ng-content works\n  execComponentViewsAction(view, ViewAction.CreateViewNodes);\n\n  // fill static content and view queries\n  execQueriesAction(\n      view, NodeFlags.TypeContentQuery | NodeFlags.TypeViewQuery, NodeFlags.StaticQuery,\n      CheckType.CheckAndUpdate);\n}\n\nexport function checkNoChangesView(view: ViewData) {\n  markProjectedViewsForCheck(view);\n  Services.updateDirectives(view, CheckType.CheckNoChanges);\n  execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n  Services.updateRenderer(view, CheckType.CheckNoChanges);\n  execComponentViewsAction(view, ViewAction.CheckNoChanges);\n  // Note: We don't check queries for changes as we didn't do this in v2.x.\n  // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n  view.state &= ~(ViewState.CheckProjectedViews | ViewState.CheckProjectedView);\n}\n\nexport function checkAndUpdateView(view: ViewData) {\n  if (view.state & ViewState.BeforeFirstCheck) {\n    view.state &= ~ViewState.BeforeFirstCheck;\n    view.state |= ViewState.FirstCheck;\n  } else {\n    view.state &= ~ViewState.FirstCheck;\n  }\n  shiftInitState(view, ViewState.InitState_BeforeInit, ViewState.InitState_CallingOnInit);\n  markProjectedViewsForCheck(view);\n  Services.updateDirectives(view, CheckType.CheckAndUpdate);\n  execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n  execQueriesAction(\n      view, NodeFlags.TypeContentQuery, NodeFlags.DynamicQuery, CheckType.CheckAndUpdate);\n  let callInit = shiftInitState(\n      view, ViewState.InitState_CallingOnInit, ViewState.InitState_CallingAfterContentInit);\n  callLifecycleHooksChildrenFirst(\n      view, NodeFlags.AfterContentChecked | (callInit ? NodeFlags.AfterContentInit : 0));\n\n  Services.updateRenderer(view, CheckType.CheckAndUpdate);\n\n  execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n  execQueriesAction(\n      view, NodeFlags.TypeViewQuery, NodeFlags.DynamicQuery, CheckType.CheckAndUpdate);\n  callInit = shiftInitState(\n      view, ViewState.InitState_CallingAfterContentInit, ViewState.InitState_CallingAfterViewInit);\n  callLifecycleHooksChildrenFirst(\n      view, NodeFlags.AfterViewChecked | (callInit ? NodeFlags.AfterViewInit : 0));\n\n  if (view.def.flags & ViewFlags.OnPush) {\n    view.state &= ~ViewState.ChecksEnabled;\n  }\n  view.state &= ~(ViewState.CheckProjectedViews | ViewState.CheckProjectedView);\n  shiftInitState(view, ViewState.InitState_CallingAfterViewInit, ViewState.InitState_AfterInit);\n}\n\nexport function checkAndUpdateNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): boolean {\n  if (argStyle === ArgumentType.Inline) {\n    return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  } else {\n    return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n  }\n}\n\nfunction markProjectedViewsForCheck(view: ViewData) {\n  const def = view.def;\n  if (!(def.nodeFlags & NodeFlags.ProjectedTemplate)) {\n    return;\n  }\n  for (let i = 0; i < def.nodes.length; i++) {\n    const nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.ProjectedTemplate) {\n      const projectedViews = asElementData(view, i).template._projectedViews;\n      if (projectedViews) {\n        for (let i = 0; i < projectedViews.length; i++) {\n          const projectedView = projectedViews[i];\n          projectedView.state |= ViewState.CheckProjectedView;\n          markParentViewsForCheckProjectedViews(projectedView, view);\n        }\n      }\n    } else if ((nodeDef.childFlags & NodeFlags.ProjectedTemplate) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n\nfunction checkAndUpdateNodeInline(\n    view: ViewData, nodeDef: NodeDef, v0?: any, v1?: any, v2?: any, v3?: any, v4?: any, v5?: any,\n    v6?: any, v7?: any, v8?: any, v9?: any): boolean {\n  switch (nodeDef.flags & NodeFlags.Types) {\n    case NodeFlags.TypeElement:\n      return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    case NodeFlags.TypeText:\n      return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    case NodeFlags.TypeDirective:\n      return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    case NodeFlags.TypePureArray:\n    case NodeFlags.TypePureObject:\n    case NodeFlags.TypePurePipe:\n      return checkAndUpdatePureExpressionInline(\n          view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    default:\n      throw 'unreachable';\n  }\n}\n\nfunction checkAndUpdateNodeDynamic(view: ViewData, nodeDef: NodeDef, values: any[]): boolean {\n  switch (nodeDef.flags & NodeFlags.Types) {\n    case NodeFlags.TypeElement:\n      return checkAndUpdateElementDynamic(view, nodeDef, values);\n    case NodeFlags.TypeText:\n      return checkAndUpdateTextDynamic(view, nodeDef, values);\n    case NodeFlags.TypeDirective:\n      return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n    case NodeFlags.TypePureArray:\n    case NodeFlags.TypePureObject:\n    case NodeFlags.TypePurePipe:\n      return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n    default:\n      throw 'unreachable';\n  }\n}\n\nexport function checkNoChangesNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  if (argStyle === ArgumentType.Inline) {\n    checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  } else {\n    checkNoChangesNodeDynamic(view, nodeDef, v0);\n  }\n  // Returning false is ok here as we would have thrown in case of a change.\n  return false;\n}\n\nfunction checkNoChangesNodeInline(\n    view: ViewData, nodeDef: NodeDef, v0: any, v1: any, v2: any, v3: any, v4: any, v5: any, v6: any,\n    v7: any, v8: any, v9: any): void {\n  const bindLen = nodeDef.bindings.length;\n  if (bindLen > 0) checkBindingNoChanges(view, nodeDef, 0, v0);\n  if (bindLen > 1) checkBindingNoChanges(view, nodeDef, 1, v1);\n  if (bindLen > 2) checkBindingNoChanges(view, nodeDef, 2, v2);\n  if (bindLen > 3) checkBindingNoChanges(view, nodeDef, 3, v3);\n  if (bindLen > 4) checkBindingNoChanges(view, nodeDef, 4, v4);\n  if (bindLen > 5) checkBindingNoChanges(view, nodeDef, 5, v5);\n  if (bindLen > 6) checkBindingNoChanges(view, nodeDef, 6, v6);\n  if (bindLen > 7) checkBindingNoChanges(view, nodeDef, 7, v7);\n  if (bindLen > 8) checkBindingNoChanges(view, nodeDef, 8, v8);\n  if (bindLen > 9) checkBindingNoChanges(view, nodeDef, 9, v9);\n}\n\nfunction checkNoChangesNodeDynamic(view: ViewData, nodeDef: NodeDef, values: any[]): void {\n  for (let i = 0; i < values.length; i++) {\n    checkBindingNoChanges(view, nodeDef, i, values[i]);\n  }\n}\n\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n */\nfunction checkNoChangesQuery(view: ViewData, nodeDef: NodeDef) {\n  const queryList = asQueryList(view, nodeDef.nodeIndex);\n  if (queryList.dirty) {\n    throw expressionChangedAfterItHasBeenCheckedError(\n        Services.createDebugContext(view, nodeDef.nodeIndex),\n        `Query ${nodeDef.query!.id} not dirty`, `Query ${nodeDef.query!.id} dirty`,\n        (view.state & ViewState.BeforeFirstCheck) !== 0);\n  }\n}\n\nexport function destroyView(view: ViewData) {\n  if (view.state & ViewState.Destroyed) {\n    return;\n  }\n  execEmbeddedViewsAction(view, ViewAction.Destroy);\n  execComponentViewsAction(view, ViewAction.Destroy);\n  callLifecycleHooksChildrenFirst(view, NodeFlags.OnDestroy);\n  if (view.disposables) {\n    for (let i = 0; i < view.disposables.length; i++) {\n      view.disposables[i]();\n    }\n  }\n  detachProjectedView(view);\n  if (view.renderer.destroyNode) {\n    destroyViewNodes(view);\n  }\n  if (isComponentView(view)) {\n    view.renderer.destroy();\n  }\n  view.state |= ViewState.Destroyed;\n}\n\nfunction destroyViewNodes(view: ViewData) {\n  const len = view.def.nodes.length;\n  for (let i = 0; i < len; i++) {\n    const def = view.def.nodes[i];\n    if (def.flags & NodeFlags.TypeElement) {\n      view.renderer.destroyNode !(asElementData(view, i).renderElement);\n    } else if (def.flags & NodeFlags.TypeText) {\n      view.renderer.destroyNode !(asTextData(view, i).renderText);\n    } else if (def.flags & NodeFlags.TypeContentQuery || def.flags & NodeFlags.TypeViewQuery) {\n      asQueryList(view, i).destroy();\n    }\n  }\n}\n\nenum ViewAction {\n  CreateViewNodes,\n  CheckNoChanges,\n  CheckNoChangesProjectedViews,\n  CheckAndUpdate,\n  CheckAndUpdateProjectedViews,\n  Destroy\n}\n\nfunction execComponentViewsAction(view: ViewData, action: ViewAction) {\n  const def = view.def;\n  if (!(def.nodeFlags & NodeFlags.ComponentView)) {\n    return;\n  }\n  for (let i = 0; i < def.nodes.length; i++) {\n    const nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.ComponentView) {\n      // a leaf\n      callViewAction(asElementData(view, i).componentView, action);\n    } else if ((nodeDef.childFlags & NodeFlags.ComponentView) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n\nfunction execEmbeddedViewsAction(view: ViewData, action: ViewAction) {\n  const def = view.def;\n  if (!(def.nodeFlags & NodeFlags.EmbeddedViews)) {\n    return;\n  }\n  for (let i = 0; i < def.nodes.length; i++) {\n    const nodeDef = def.nodes[i];\n    if (nodeDef.flags & NodeFlags.EmbeddedViews) {\n      // a leaf\n      const embeddedViews = asElementData(view, i).viewContainer !._embeddedViews;\n      for (let k = 0; k < embeddedViews.length; k++) {\n        callViewAction(embeddedViews[k], action);\n      }\n    } else if ((nodeDef.childFlags & NodeFlags.EmbeddedViews) === 0) {\n      // a parent with leafs\n      // no child is a component,\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n\nfunction callViewAction(view: ViewData, action: ViewAction) {\n  const viewState = view.state;\n  switch (action) {\n    case ViewAction.CheckNoChanges:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if ((viewState & ViewState.CatDetectChanges) === ViewState.CatDetectChanges) {\n          checkNoChangesView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n        }\n      }\n      break;\n    case ViewAction.CheckNoChangesProjectedViews:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if (viewState & ViewState.CheckProjectedView) {\n          checkNoChangesView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, action);\n        }\n      }\n      break;\n    case ViewAction.CheckAndUpdate:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if ((viewState & ViewState.CatDetectChanges) === ViewState.CatDetectChanges) {\n          checkAndUpdateView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n        }\n      }\n      break;\n    case ViewAction.CheckAndUpdateProjectedViews:\n      if ((viewState & ViewState.Destroyed) === 0) {\n        if (viewState & ViewState.CheckProjectedView) {\n          checkAndUpdateView(view);\n        } else if (viewState & ViewState.CheckProjectedViews) {\n          execProjectedViewsAction(view, action);\n        }\n      }\n      break;\n    case ViewAction.Destroy:\n      // Note: destroyView recurses over all views,\n      // so we don't need to special case projected views here.\n      destroyView(view);\n      break;\n    case ViewAction.CreateViewNodes:\n      createViewNodes(view);\n      break;\n  }\n}\n\nfunction execProjectedViewsAction(view: ViewData, action: ViewAction) {\n  execEmbeddedViewsAction(view, action);\n  execComponentViewsAction(view, action);\n}\n\nfunction execQueriesAction(\n    view: ViewData, queryFlags: NodeFlags, staticDynamicQueryFlag: NodeFlags,\n    checkType: CheckType) {\n  if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n    return;\n  }\n  const nodeCount = view.def.nodes.length;\n  for (let i = 0; i < nodeCount; i++) {\n    const nodeDef = view.def.nodes[i];\n    if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n      Services.setCurrentNode(view, nodeDef.nodeIndex);\n      switch (checkType) {\n        case CheckType.CheckAndUpdate:\n          checkAndUpdateQuery(view, nodeDef);\n          break;\n        case CheckType.CheckNoChanges:\n          checkNoChangesQuery(view, nodeDef);\n          break;\n      }\n    }\n    if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n      // no child has a matching query\n      // then skip the children\n      i += nodeDef.childCount;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DebugElement__PRE_R3__, DebugNode__PRE_R3__, EventListener, getDebugNode, indexDebugNode, removeDebugNodeFromIndex} from '../debug/debug_node';\nimport {Injector} from '../di';\nimport {InjectableDef, getInjectableDef} from '../di/defs';\nimport {InjectableType} from '../di/injectable';\nimport {ErrorHandler} from '../error_handler';\nimport {isDevMode} from '../is_dev_mode';\nimport {ComponentFactory} from '../linker/component_factory';\nimport {NgModuleRef} from '../linker/ng_module_factory';\nimport {Renderer2, RendererFactory2, RendererStyleFlags2, RendererType2} from '../render/api';\nimport {Sanitizer} from '../sanitization/security';\nimport {Type} from '../type';\nimport {normalizeDebugBindingName, normalizeDebugBindingValue} from '../util/ng_reflect';\nimport {isViewDebugError, viewDestroyedError, viewWrappedDebugError} from './errors';\nimport {resolveDep} from './provider';\nimport {dirtyParentQueries, getQueryValue} from './query';\nimport {createInjector, createNgModuleRef, getComponentViewDefinitionFactory} from './refs';\nimport {ArgumentType, BindingFlags, CheckType, DebugContext, ElementData, NgModuleDefinition, NodeDef, NodeFlags, NodeLogger, ProviderOverride, RootData, Services, ViewData, ViewDefinition, ViewState, asElementData, asPureExpressionData} from './types';\nimport {NOOP, isComponentView, renderNode, resolveDefinition, splitDepsDsl, tokenKey, viewParentEl} from './util';\nimport {checkAndUpdateNode, checkAndUpdateView, checkNoChangesNode, checkNoChangesView, createComponentView, createEmbeddedView, createRootView, destroyView} from './view';\n\n\nlet initialized = false;\n\nexport function initServicesIfNeeded() {\n  if (initialized) {\n    return;\n  }\n  initialized = true;\n  const services = isDevMode() ? createDebugServices() : createProdServices();\n  Services.setCurrentNode = services.setCurrentNode;\n  Services.createRootView = services.createRootView;\n  Services.createEmbeddedView = services.createEmbeddedView;\n  Services.createComponentView = services.createComponentView;\n  Services.createNgModuleRef = services.createNgModuleRef;\n  Services.overrideProvider = services.overrideProvider;\n  Services.overrideComponentView = services.overrideComponentView;\n  Services.clearOverrides = services.clearOverrides;\n  Services.checkAndUpdateView = services.checkAndUpdateView;\n  Services.checkNoChangesView = services.checkNoChangesView;\n  Services.destroyView = services.destroyView;\n  Services.resolveDep = resolveDep;\n  Services.createDebugContext = services.createDebugContext;\n  Services.handleEvent = services.handleEvent;\n  Services.updateDirectives = services.updateDirectives;\n  Services.updateRenderer = services.updateRenderer;\n  Services.dirtyParentQueries = dirtyParentQueries;\n}\n\nfunction createProdServices() {\n  return {\n    setCurrentNode: () => {},\n    createRootView: createProdRootView,\n    createEmbeddedView: createEmbeddedView,\n    createComponentView: createComponentView,\n    createNgModuleRef: createNgModuleRef,\n    overrideProvider: NOOP,\n    overrideComponentView: NOOP,\n    clearOverrides: NOOP,\n    checkAndUpdateView: checkAndUpdateView,\n    checkNoChangesView: checkNoChangesView,\n    destroyView: destroyView,\n    createDebugContext: (view: ViewData, nodeIndex: number) => new DebugContext_(view, nodeIndex),\n    handleEvent: (view: ViewData, nodeIndex: number, eventName: string, event: any) =>\n                     view.def.handleEvent(view, nodeIndex, eventName, event),\n    updateDirectives: (view: ViewData, checkType: CheckType) => view.def.updateDirectives(\n                          checkType === CheckType.CheckAndUpdate ? prodCheckAndUpdateNode :\n                                                                   prodCheckNoChangesNode,\n                          view),\n    updateRenderer: (view: ViewData, checkType: CheckType) => view.def.updateRenderer(\n                        checkType === CheckType.CheckAndUpdate ? prodCheckAndUpdateNode :\n                                                                 prodCheckNoChangesNode,\n                        view),\n  };\n}\n\nfunction createDebugServices() {\n  return {\n    setCurrentNode: debugSetCurrentNode,\n    createRootView: debugCreateRootView,\n    createEmbeddedView: debugCreateEmbeddedView,\n    createComponentView: debugCreateComponentView,\n    createNgModuleRef: debugCreateNgModuleRef,\n    overrideProvider: debugOverrideProvider,\n    overrideComponentView: debugOverrideComponentView,\n    clearOverrides: debugClearOverrides,\n    checkAndUpdateView: debugCheckAndUpdateView,\n    checkNoChangesView: debugCheckNoChangesView,\n    destroyView: debugDestroyView,\n    createDebugContext: (view: ViewData, nodeIndex: number) => new DebugContext_(view, nodeIndex),\n    handleEvent: debugHandleEvent,\n    updateDirectives: debugUpdateDirectives,\n    updateRenderer: debugUpdateRenderer,\n  };\n}\n\nfunction createProdRootView(\n    elInjector: Injector, projectableNodes: any[][], rootSelectorOrNode: string | any,\n    def: ViewDefinition, ngModule: NgModuleRef<any>, context?: any): ViewData {\n  const rendererFactory: RendererFactory2 = ngModule.injector.get(RendererFactory2);\n  return createRootView(\n      createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode),\n      def, context);\n}\n\nfunction debugCreateRootView(\n    elInjector: Injector, projectableNodes: any[][], rootSelectorOrNode: string | any,\n    def: ViewDefinition, ngModule: NgModuleRef<any>, context?: any): ViewData {\n  const rendererFactory: RendererFactory2 = ngModule.injector.get(RendererFactory2);\n  const root = createRootData(\n      elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes,\n      rootSelectorOrNode);\n  const defWithOverride = applyProviderOverridesToView(def);\n  return callWithDebugContext(\n      DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\n\nfunction createRootData(\n    elInjector: Injector, ngModule: NgModuleRef<any>, rendererFactory: RendererFactory2,\n    projectableNodes: any[][], rootSelectorOrNode: any): RootData {\n  const sanitizer = ngModule.injector.get(Sanitizer);\n  const errorHandler = ngModule.injector.get(ErrorHandler);\n  const renderer = rendererFactory.createRenderer(null, null);\n  return {\n    ngModule,\n    injector: elInjector, projectableNodes,\n    selectorOrNode: rootSelectorOrNode, sanitizer, rendererFactory, renderer, errorHandler\n  };\n}\n\nfunction debugCreateEmbeddedView(\n    parentView: ViewData, anchorDef: NodeDef, viewDef: ViewDefinition, context?: any): ViewData {\n  const defWithOverride = applyProviderOverridesToView(viewDef);\n  return callWithDebugContext(\n      DebugAction.create, createEmbeddedView, null,\n      [parentView, anchorDef, defWithOverride, context]);\n}\n\nfunction debugCreateComponentView(\n    parentView: ViewData, nodeDef: NodeDef, viewDef: ViewDefinition, hostElement: any): ViewData {\n  const overrideComponentView =\n      viewDefOverrides.get(nodeDef.element !.componentProvider !.provider !.token);\n  if (overrideComponentView) {\n    viewDef = overrideComponentView;\n  } else {\n    viewDef = applyProviderOverridesToView(viewDef);\n  }\n  return callWithDebugContext(\n      DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n}\n\nfunction debugCreateNgModuleRef(\n    moduleType: Type<any>, parentInjector: Injector, bootstrapComponents: Type<any>[],\n    def: NgModuleDefinition): NgModuleRef<any> {\n  const defWithOverride = applyProviderOverridesToNgModule(def);\n  return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\n\nconst providerOverrides = new Map<any, ProviderOverride>();\nconst providerOverridesWithScope = new Map<InjectableType<any>, ProviderOverride>();\nconst viewDefOverrides = new Map<any, ViewDefinition>();\n\nfunction debugOverrideProvider(override: ProviderOverride) {\n  providerOverrides.set(override.token, override);\n  let injectableDef: InjectableDef<any>|null;\n  if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n      typeof injectableDef.providedIn === 'function') {\n    providerOverridesWithScope.set(override.token as InjectableType<any>, override);\n  }\n}\n\nfunction debugOverrideComponentView(comp: any, compFactory: ComponentFactory<any>) {\n  const hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n  const compViewDef = resolveDefinition(hostViewDef.nodes[0].element !.componentView !);\n  viewDefOverrides.set(comp, compViewDef);\n}\n\nfunction debugClearOverrides() {\n  providerOverrides.clear();\n  providerOverridesWithScope.clear();\n  viewDefOverrides.clear();\n}\n\n// Notes about the algorithm:\n// 1) Locate the providers of an element and check if one of them was overwritten\n// 2) Change the providers of that element\n//\n// We only create new datastructures if we need to, to keep perf impact\n// reasonable.\nfunction applyProviderOverridesToView(def: ViewDefinition): ViewDefinition {\n  if (providerOverrides.size === 0) {\n    return def;\n  }\n  const elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n  if (elementIndicesWithOverwrittenProviders.length === 0) {\n    return def;\n  }\n  // clone the whole view definition,\n  // as it maintains references between the nodes that are hard to update.\n  def = def.factory !(() => NOOP);\n  for (let i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n    applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n  }\n  return def;\n\n  function findElementIndicesWithOverwrittenProviders(def: ViewDefinition): number[] {\n    const elIndicesWithOverwrittenProviders: number[] = [];\n    let lastElementDef: NodeDef|null = null;\n    for (let i = 0; i < def.nodes.length; i++) {\n      const nodeDef = def.nodes[i];\n      if (nodeDef.flags & NodeFlags.TypeElement) {\n        lastElementDef = nodeDef;\n      }\n      if (lastElementDef && nodeDef.flags & NodeFlags.CatProviderNoDirective &&\n          providerOverrides.has(nodeDef.provider !.token)) {\n        elIndicesWithOverwrittenProviders.push(lastElementDef !.nodeIndex);\n        lastElementDef = null;\n      }\n    }\n    return elIndicesWithOverwrittenProviders;\n  }\n\n  function applyProviderOverridesToElement(viewDef: ViewDefinition, elIndex: number) {\n    for (let i = elIndex + 1; i < viewDef.nodes.length; i++) {\n      const nodeDef = viewDef.nodes[i];\n      if (nodeDef.flags & NodeFlags.TypeElement) {\n        // stop at the next element\n        return;\n      }\n      if (nodeDef.flags & NodeFlags.CatProviderNoDirective) {\n        const provider = nodeDef.provider !;\n        const override = providerOverrides.get(provider.token);\n        if (override) {\n          nodeDef.flags = (nodeDef.flags & ~NodeFlags.CatProviderNoDirective) | override.flags;\n          provider.deps = splitDepsDsl(override.deps);\n          provider.value = override.value;\n        }\n      }\n    }\n  }\n}\n\n// Notes about the algorithm:\n// We only create new datastructures if we need to, to keep perf impact\n// reasonable.\nfunction applyProviderOverridesToNgModule(def: NgModuleDefinition): NgModuleDefinition {\n  const {hasOverrides, hasDeprecatedOverrides} = calcHasOverrides(def);\n  if (!hasOverrides) {\n    return def;\n  }\n  // clone the whole view definition,\n  // as it maintains references between the nodes that are hard to update.\n  def = def.factory !(() => NOOP);\n  applyProviderOverrides(def);\n  return def;\n\n  function calcHasOverrides(def: NgModuleDefinition):\n      {hasOverrides: boolean, hasDeprecatedOverrides: boolean} {\n    let hasOverrides = false;\n    let hasDeprecatedOverrides = false;\n    if (providerOverrides.size === 0) {\n      return {hasOverrides, hasDeprecatedOverrides};\n    }\n    def.providers.forEach(node => {\n      const override = providerOverrides.get(node.token);\n      if ((node.flags & NodeFlags.CatProviderNoDirective) && override) {\n        hasOverrides = true;\n        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n      }\n    });\n    def.modules.forEach(module => {\n      providerOverridesWithScope.forEach((override, token) => {\n        if (getInjectableDef(token) !.providedIn === module) {\n          hasOverrides = true;\n          hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n        }\n      });\n    });\n    return {hasOverrides, hasDeprecatedOverrides};\n  }\n\n  function applyProviderOverrides(def: NgModuleDefinition) {\n    for (let i = 0; i < def.providers.length; i++) {\n      const provider = def.providers[i];\n      if (hasDeprecatedOverrides) {\n        // We had a bug where me made\n        // all providers lazy. Keep this logic behind a flag\n        // for migrating existing users.\n        provider.flags |= NodeFlags.LazyProvider;\n      }\n      const override = providerOverrides.get(provider.token);\n      if (override) {\n        provider.flags = (provider.flags & ~NodeFlags.CatProviderNoDirective) | override.flags;\n        provider.deps = splitDepsDsl(override.deps);\n        provider.value = override.value;\n      }\n    }\n    if (providerOverridesWithScope.size > 0) {\n      let moduleSet = new Set<any>(def.modules);\n      providerOverridesWithScope.forEach((override, token) => {\n        if (moduleSet.has(getInjectableDef(token) !.providedIn)) {\n          let provider = {\n            token: token,\n            flags:\n                override.flags | (hasDeprecatedOverrides ? NodeFlags.LazyProvider : NodeFlags.None),\n            deps: splitDepsDsl(override.deps),\n            value: override.value,\n            index: def.providers.length,\n          };\n          def.providers.push(provider);\n          def.providersByKey[tokenKey(token)] = provider;\n        }\n      });\n    }\n  }\n}\n\nfunction prodCheckAndUpdateNode(\n    view: ViewData, checkIndex: number, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  const nodeDef = view.def.nodes[checkIndex];\n  checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n      asPureExpressionData(view, checkIndex).value :\n      undefined;\n}\n\nfunction prodCheckNoChangesNode(\n    view: ViewData, checkIndex: number, argStyle: ArgumentType, v0?: any, v1?: any, v2?: any,\n    v3?: any, v4?: any, v5?: any, v6?: any, v7?: any, v8?: any, v9?: any): any {\n  const nodeDef = view.def.nodes[checkIndex];\n  checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n  return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n      asPureExpressionData(view, checkIndex).value :\n      undefined;\n}\n\nfunction debugCheckAndUpdateView(view: ViewData) {\n  return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\n\nfunction debugCheckNoChangesView(view: ViewData) {\n  return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\n\nfunction debugDestroyView(view: ViewData) {\n  return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\n\nenum DebugAction {\n  create,\n  detectChanges,\n  checkNoChanges,\n  destroy,\n  handleEvent\n}\n\nlet _currentAction: DebugAction;\nlet _currentView: ViewData;\nlet _currentNodeIndex: number|null;\n\nfunction debugSetCurrentNode(view: ViewData, nodeIndex: number | null) {\n  _currentView = view;\n  _currentNodeIndex = nodeIndex;\n}\n\nfunction debugHandleEvent(view: ViewData, nodeIndex: number, eventName: string, event: any) {\n  debugSetCurrentNode(view, nodeIndex);\n  return callWithDebugContext(\n      DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n\nfunction debugUpdateDirectives(view: ViewData, checkType: CheckType) {\n  if (view.state & ViewState.Destroyed) {\n    throw viewDestroyedError(DebugAction[_currentAction]);\n  }\n  debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n  return view.def.updateDirectives(debugCheckDirectivesFn, view);\n\n  function debugCheckDirectivesFn(\n      view: ViewData, nodeIndex: number, argStyle: ArgumentType, ...values: any[]) {\n    const nodeDef = view.def.nodes[nodeIndex];\n    if (checkType === CheckType.CheckAndUpdate) {\n      debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n    } else {\n      debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n    }\n    if (nodeDef.flags & NodeFlags.TypeDirective) {\n      debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n    }\n    return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n        asPureExpressionData(view, nodeDef.nodeIndex).value :\n        undefined;\n  }\n}\n\nfunction debugUpdateRenderer(view: ViewData, checkType: CheckType) {\n  if (view.state & ViewState.Destroyed) {\n    throw viewDestroyedError(DebugAction[_currentAction]);\n  }\n  debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n  return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n\n  function debugCheckRenderNodeFn(\n      view: ViewData, nodeIndex: number, argStyle: ArgumentType, ...values: any[]) {\n    const nodeDef = view.def.nodes[nodeIndex];\n    if (checkType === CheckType.CheckAndUpdate) {\n      debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n    } else {\n      debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n    }\n    if (nodeDef.flags & NodeFlags.CatRenderNode) {\n      debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n    }\n    return (nodeDef.flags & NodeFlags.CatPureExpression) ?\n        asPureExpressionData(view, nodeDef.nodeIndex).value :\n        undefined;\n  }\n}\n\nfunction debugCheckAndUpdateNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, givenValues: any[]): void {\n  const changed = (<any>checkAndUpdateNode)(view, nodeDef, argStyle, ...givenValues);\n  if (changed) {\n    const values = argStyle === ArgumentType.Dynamic ? givenValues[0] : givenValues;\n    if (nodeDef.flags & NodeFlags.TypeDirective) {\n      const bindingValues: {[key: string]: string} = {};\n      for (let i = 0; i < nodeDef.bindings.length; i++) {\n        const binding = nodeDef.bindings[i];\n        const value = values[i];\n        if (binding.flags & BindingFlags.TypeProperty) {\n          bindingValues[normalizeDebugBindingName(binding.nonMinifiedName !)] =\n              normalizeDebugBindingValue(value);\n        }\n      }\n      const elDef = nodeDef.parent !;\n      const el = asElementData(view, elDef.nodeIndex).renderElement;\n      if (!elDef.element !.name) {\n        // a comment.\n        view.renderer.setValue(el, `bindings=${JSON.stringify(bindingValues, null, 2)}`);\n      } else {\n        // a regular element.\n        for (let attr in bindingValues) {\n          const value = bindingValues[attr];\n          if (value != null) {\n            view.renderer.setAttribute(el, attr, value);\n          } else {\n            view.renderer.removeAttribute(el, attr);\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction debugCheckNoChangesNode(\n    view: ViewData, nodeDef: NodeDef, argStyle: ArgumentType, values: any[]): void {\n  (<any>checkNoChangesNode)(view, nodeDef, argStyle, ...values);\n}\n\nfunction nextDirectiveWithBinding(view: ViewData, nodeIndex: number): number|null {\n  for (let i = nodeIndex; i < view.def.nodes.length; i++) {\n    const nodeDef = view.def.nodes[i];\n    if (nodeDef.flags & NodeFlags.TypeDirective && nodeDef.bindings && nodeDef.bindings.length) {\n      return i;\n    }\n  }\n  return null;\n}\n\nfunction nextRenderNodeWithBinding(view: ViewData, nodeIndex: number): number|null {\n  for (let i = nodeIndex; i < view.def.nodes.length; i++) {\n    const nodeDef = view.def.nodes[i];\n    if ((nodeDef.flags & NodeFlags.CatRenderNode) && nodeDef.bindings && nodeDef.bindings.length) {\n      return i;\n    }\n  }\n  return null;\n}\n\nclass DebugContext_ implements DebugContext {\n  private nodeDef: NodeDef;\n  private elView: ViewData;\n  private elDef: NodeDef;\n\n  constructor(public view: ViewData, public nodeIndex: number|null) {\n    if (nodeIndex == null) {\n      this.nodeIndex = nodeIndex = 0;\n    }\n    this.nodeDef = view.def.nodes[nodeIndex];\n    let elDef = this.nodeDef;\n    let elView = view;\n    while (elDef && (elDef.flags & NodeFlags.TypeElement) === 0) {\n      elDef = elDef.parent !;\n    }\n    if (!elDef) {\n      while (!elDef && elView) {\n        elDef = viewParentEl(elView) !;\n        elView = elView.parent !;\n      }\n    }\n    this.elDef = elDef;\n    this.elView = elView;\n  }\n\n  private get elOrCompView() {\n    // Has to be done lazily as we use the DebugContext also during creation of elements...\n    return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n  }\n\n  get injector(): Injector { return createInjector(this.elView, this.elDef); }\n\n  get component(): any { return this.elOrCompView.component; }\n\n  get context(): any { return this.elOrCompView.context; }\n\n  get providerTokens(): any[] {\n    const tokens: any[] = [];\n    if (this.elDef) {\n      for (let i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount;\n           i++) {\n        const childDef = this.elView.def.nodes[i];\n        if (childDef.flags & NodeFlags.CatProvider) {\n          tokens.push(childDef.provider !.token);\n        }\n        i += childDef.childCount;\n      }\n    }\n    return tokens;\n  }\n\n  get references(): {[key: string]: any} {\n    const references: {[key: string]: any} = {};\n    if (this.elDef) {\n      collectReferences(this.elView, this.elDef, references);\n\n      for (let i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount;\n           i++) {\n        const childDef = this.elView.def.nodes[i];\n        if (childDef.flags & NodeFlags.CatProvider) {\n          collectReferences(this.elView, childDef, references);\n        }\n        i += childDef.childCount;\n      }\n    }\n    return references;\n  }\n\n  get componentRenderElement() {\n    const elData = findHostElement(this.elOrCompView);\n    return elData ? elData.renderElement : undefined;\n  }\n\n  get renderNode(): any {\n    return this.nodeDef.flags & NodeFlags.TypeText ? renderNode(this.view, this.nodeDef) :\n                                                     renderNode(this.elView, this.elDef);\n  }\n\n  logError(console: Console, ...values: any[]) {\n    let logViewDef: ViewDefinition;\n    let logNodeIndex: number;\n    if (this.nodeDef.flags & NodeFlags.TypeText) {\n      logViewDef = this.view.def;\n      logNodeIndex = this.nodeDef.nodeIndex;\n    } else {\n      logViewDef = this.elView.def;\n      logNodeIndex = this.elDef.nodeIndex;\n    }\n    // Note: we only generate a log function for text and element nodes\n    // to make the generated code as small as possible.\n    const renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n    let currRenderNodeIndex = -1;\n    let nodeLogger: NodeLogger = () => {\n      currRenderNodeIndex++;\n      if (currRenderNodeIndex === renderNodeIndex) {\n        return console.error.bind(console, ...values);\n      } else {\n        return NOOP;\n      }\n    };\n    logViewDef.factory !(nodeLogger);\n    if (currRenderNodeIndex < renderNodeIndex) {\n      console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n      (<any>console.error)(...values);\n    }\n  }\n}\n\nfunction getRenderNodeIndex(viewDef: ViewDefinition, nodeIndex: number): number {\n  let renderNodeIndex = -1;\n  for (let i = 0; i <= nodeIndex; i++) {\n    const nodeDef = viewDef.nodes[i];\n    if (nodeDef.flags & NodeFlags.CatRenderNode) {\n      renderNodeIndex++;\n    }\n  }\n  return renderNodeIndex;\n}\n\nfunction findHostElement(view: ViewData): ElementData|null {\n  while (view && !isComponentView(view)) {\n    view = view.parent !;\n  }\n  if (view.parent) {\n    return asElementData(view.parent, viewParentEl(view) !.nodeIndex);\n  }\n  return null;\n}\n\nfunction collectReferences(view: ViewData, nodeDef: NodeDef, references: {[key: string]: any}) {\n  for (let refName in nodeDef.references) {\n    references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n  }\n}\n\nfunction callWithDebugContext(action: DebugAction, fn: any, self: any, args: any[]) {\n  const oldAction = _currentAction;\n  const oldView = _currentView;\n  const oldNodeIndex = _currentNodeIndex;\n  try {\n    _currentAction = action;\n    const result = fn.apply(self, args);\n    _currentView = oldView;\n    _currentNodeIndex = oldNodeIndex;\n    _currentAction = oldAction;\n    return result;\n  } catch (e) {\n    if (isViewDebugError(e) || !_currentView) {\n      throw e;\n    }\n    throw viewWrappedDebugError(e, getCurrentDebugContext() !);\n  }\n}\n\nexport function getCurrentDebugContext(): DebugContext|null {\n  return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\n\nexport class DebugRendererFactory2 implements RendererFactory2 {\n  constructor(private delegate: RendererFactory2) {}\n\n  createRenderer(element: any, renderData: RendererType2|null): Renderer2 {\n    return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n  }\n\n  begin() {\n    if (this.delegate.begin) {\n      this.delegate.begin();\n    }\n  }\n  end() {\n    if (this.delegate.end) {\n      this.delegate.end();\n    }\n  }\n\n  whenRenderingDone(): Promise<any> {\n    if (this.delegate.whenRenderingDone) {\n      return this.delegate.whenRenderingDone();\n    }\n    return Promise.resolve(null);\n  }\n}\n\nexport class DebugRenderer2 implements Renderer2 {\n  readonly data: {[key: string]: any};\n\n  private createDebugContext(nativeElement: any) { return this.debugContextFactory(nativeElement); }\n\n  /**\n   * Factory function used to create a `DebugContext` when a node is created.\n   *\n   * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n   *\n   * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n   * or a Render context.\n   */\n  debugContextFactory: (nativeElement?: any) => DebugContext | null = getCurrentDebugContext;\n\n  constructor(private delegate: Renderer2) { this.data = this.delegate.data; }\n\n  destroyNode(node: any) {\n    removeDebugNodeFromIndex(getDebugNode(node) !);\n    if (this.delegate.destroyNode) {\n      this.delegate.destroyNode(node);\n    }\n  }\n\n  destroy() { this.delegate.destroy(); }\n\n  createElement(name: string, namespace?: string): any {\n    const el = this.delegate.createElement(name, namespace);\n    const debugCtx = this.createDebugContext(el);\n    if (debugCtx) {\n      const debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n      (debugEl as{name: string}).name = name;\n      indexDebugNode(debugEl);\n    }\n    return el;\n  }\n\n  createComment(value: string): any {\n    const comment = this.delegate.createComment(value);\n    const debugCtx = this.createDebugContext(comment);\n    if (debugCtx) {\n      indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n    }\n    return comment;\n  }\n\n  createText(value: string): any {\n    const text = this.delegate.createText(value);\n    const debugCtx = this.createDebugContext(text);\n    if (debugCtx) {\n      indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n    }\n    return text;\n  }\n\n  appendChild(parent: any, newChild: any): void {\n    const debugEl = getDebugNode(parent);\n    const debugChildEl = getDebugNode(newChild);\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n      debugEl.addChild(debugChildEl);\n    }\n    this.delegate.appendChild(parent, newChild);\n  }\n\n  insertBefore(parent: any, newChild: any, refChild: any): void {\n    const debugEl = getDebugNode(parent);\n    const debugChildEl = getDebugNode(newChild);\n    const debugRefEl = getDebugNode(refChild) !;\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n      debugEl.insertBefore(debugRefEl, debugChildEl);\n    }\n\n    this.delegate.insertBefore(parent, newChild, refChild);\n  }\n\n  removeChild(parent: any, oldChild: any): void {\n    const debugEl = getDebugNode(parent);\n    const debugChildEl = getDebugNode(oldChild);\n    if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n      debugEl.removeChild(debugChildEl);\n    }\n    this.delegate.removeChild(parent, oldChild);\n  }\n\n  selectRootElement(selectorOrNode: string|any, preserveContent?: boolean): any {\n    const el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n    const debugCtx = getCurrentDebugContext();\n    if (debugCtx) {\n      indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n    }\n    return el;\n  }\n\n  setAttribute(el: any, name: string, value: string, namespace?: string): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n      const fullName = namespace ? namespace + ':' + name : name;\n      debugEl.attributes[fullName] = value;\n    }\n    this.delegate.setAttribute(el, name, value, namespace);\n  }\n\n  removeAttribute(el: any, name: string, namespace?: string): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n      const fullName = namespace ? namespace + ':' + name : name;\n      debugEl.attributes[fullName] = null;\n    }\n    this.delegate.removeAttribute(el, name, namespace);\n  }\n\n  addClass(el: any, name: string): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n      debugEl.classes[name] = true;\n    }\n    this.delegate.addClass(el, name);\n  }\n\n  removeClass(el: any, name: string): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n      debugEl.classes[name] = false;\n    }\n    this.delegate.removeClass(el, name);\n  }\n\n  setStyle(el: any, style: string, value: any, flags: RendererStyleFlags2): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n      debugEl.styles[style] = value;\n    }\n    this.delegate.setStyle(el, style, value, flags);\n  }\n\n  removeStyle(el: any, style: string, flags: RendererStyleFlags2): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n      debugEl.styles[style] = null;\n    }\n    this.delegate.removeStyle(el, style, flags);\n  }\n\n  setProperty(el: any, name: string, value: any): void {\n    const debugEl = getDebugNode(el);\n    if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n      debugEl.properties[name] = value;\n    }\n    this.delegate.setProperty(el, name, value);\n  }\n\n  listen(\n      target: 'document'|'windows'|'body'|any, eventName: string,\n      callback: (event: any) => boolean): () => void {\n    if (typeof target !== 'string') {\n      const debugEl = getDebugNode(target);\n      if (debugEl) {\n        debugEl.listeners.push(new EventListener(eventName, callback));\n      }\n    }\n\n    return this.delegate.listen(target, eventName, callback);\n  }\n\n  parentNode(node: any): any { return this.delegate.parentNode(node); }\n  nextSibling(node: any): any { return this.delegate.nextSibling(node); }\n  setValue(node: any, value: string): void { return this.delegate.setValue(node, value); }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '../di/injector';\nimport {ComponentFactory} from '../linker/component_factory';\nimport {NgModuleFactory, NgModuleRef} from '../linker/ng_module_factory';\nimport {Type} from '../type';\n\nimport {initServicesIfNeeded} from './services';\nimport {NgModuleDefinition, NgModuleDefinitionFactory, NgModuleProviderDef, ProviderOverride, Services, ViewDefinition} from './types';\nimport {resolveDefinition} from './util';\n\nexport function overrideProvider(override: ProviderOverride) {\n  initServicesIfNeeded();\n  return Services.overrideProvider(override);\n}\n\nexport function overrideComponentView(comp: Type<any>, componentFactory: ComponentFactory<any>) {\n  initServicesIfNeeded();\n  return Services.overrideComponentView(comp, componentFactory);\n}\n\nexport function clearOverrides() {\n  initServicesIfNeeded();\n  return Services.clearOverrides();\n}\n\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nexport function createNgModuleFactory(\n    ngModuleType: Type<any>, bootstrapComponents: Type<any>[],\n    defFactory: NgModuleDefinitionFactory): NgModuleFactory<any> {\n  return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\n\nfunction cloneNgModuleDefinition(def: NgModuleDefinition): NgModuleDefinition {\n  const providers = Array.from(def.providers);\n  const modules = Array.from(def.modules);\n  const providersByKey: {[tokenKey: string]: NgModuleProviderDef} = {};\n  for (const key in def.providersByKey) {\n    providersByKey[key] = def.providersByKey[key];\n  }\n\n  return {\n    factory: def.factory,\n    isRoot: def.isRoot, providers, modules, providersByKey,\n  };\n}\n\nclass NgModuleFactory_ extends NgModuleFactory<any> {\n  constructor(\n      public readonly moduleType: Type<any>, private _bootstrapComponents: Type<any>[],\n      private _ngModuleDefFactory: NgModuleDefinitionFactory) {\n    // Attention: this ctor is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    super();\n  }\n\n  create(parentInjector: Injector|null): NgModuleRef<any> {\n    initServicesIfNeeded();\n    // Clone the NgModuleDefinition so that any tree shakeable provider definition\n    // added to this instance of the NgModuleRef doesn't affect the cached copy.\n    // See https://github.com/angular/angular/issues/25018.\n    const def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n    return Services.createNgModuleRef(\n        this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {APPLICATION_MODULE_PROVIDERS as Éµangular_packages_core_core_t,_iterableDiffersFactory as Éµangular_packages_core_core_q,_keyValueDiffersFactory as Éµangular_packages_core_core_r,_localeFactory as Éµangular_packages_core_core_s} from './src/application_module';\nexport {_appIdRandomProviderFactory as Éµangular_packages_core_core_h} from './src/application_tokens';\nexport {DefaultIterableDifferFactory as Éµangular_packages_core_core_o} from './src/change_detection/differs/default_iterable_differ';\nexport {DefaultKeyValueDifferFactory as Éµangular_packages_core_core_p} from './src/change_detection/differs/default_keyvalue_differ';\nexport {DebugElement__PRE_R3__ as Éµangular_packages_core_core_n,DebugNode__PRE_R3__ as Éµangular_packages_core_core_m} from './src/debug/debug_node';\nexport {NullInjector as Éµangular_packages_core_core_c} from './src/di/injector';\nexport {injectInjectorOnly as Éµangular_packages_core_core_d} from './src/di/injector_compatibility';\nexport {ReflectiveInjector_ as Éµangular_packages_core_core_e} from './src/di/reflective_injector';\nexport {ReflectiveDependency as Éµangular_packages_core_core_f,resolveReflectiveProviders as Éµangular_packages_core_core_g} from './src/di/reflective_provider';\nexport {getModuleFactory__PRE_R3__ as Éµangular_packages_core_core_l} from './src/linker/ng_module_factory_loader';\nexport {wtfEnabled as Éµangular_packages_core_core_u} from './src/profile/profile';\nexport {createScope as Éµangular_packages_core_core_w,detectWTF as Éµangular_packages_core_core_v,endTimeRange as Éµangular_packages_core_core_z,leave as Éµangular_packages_core_core_x,startTimeRange as Éµangular_packages_core_core_y} from './src/profile/wtf_impl';\nexport {injectAttributeImpl as Éµangular_packages_core_core_bc} from './src/render3/di';\nexport {NG_INJECTABLE_DEF as Éµangular_packages_core_core_bj} from './src/render3/fields';\nexport {TElementNode as Éµangular_packages_core_core_bg} from './src/render3/interfaces/node';\nexport {PlayerFactoryBuildFn as Éµangular_packages_core_core_bh} from './src/render3/interfaces/player';\nexport {LView as Éµangular_packages_core_core_bl} from './src/render3/interfaces/view';\nexport {getLView as Éµangular_packages_core_core_bd,getPreviousOrParentTNode as Éµangular_packages_core_core_be,nextContextImpl as Éµangular_packages_core_core_bf} from './src/render3/state';\nexport {BoundPlayerFactory as Éµangular_packages_core_core_bi} from './src/render3/styling/player_factory';\nexport {loadInternal as Éµangular_packages_core_core_bm} from './src/render3/util';\nexport {createElementRef as Éµangular_packages_core_core_i,createTemplateRef as Éµangular_packages_core_core_j,createViewRef as Éµangular_packages_core_core_k} from './src/render3/view_engine_compatibility';\nexport {makeParamDecorator as Éµangular_packages_core_core_a,makePropDecorator as Éµangular_packages_core_core_b} from './src/util/decorators';\nexport {getClosureSafeProperty as Éµangular_packages_core_core_bk} from './src/util/property';\nexport {_def as Éµangular_packages_core_core_ba} from './src/view/provider';\nexport {DebugContext as Éµangular_packages_core_core_bb} from './src/view/types';"]}